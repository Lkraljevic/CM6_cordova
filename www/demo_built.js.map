{"version":3,"file":"demo_built.js","sources":["../node_modules/tslib/tslib.es6.js","../doc/src/char.ts","../doc/src/column.ts","../doc/src/text.ts","../state/src/selection.ts","../extension/src/extension.ts","../state/src/change.ts","../state/src/transaction.ts","../state/src/state.ts","../node_modules/style-mod/dist/style-mod.js","../view/src/browser.ts","../view/src/dom.ts","../view/src/contentview.ts","../rangeset/src/rangeset.ts","../view/src/attributes.ts","../view/src/decoration.ts","../view/src/inlineview.ts","../view/src/lineview.ts","../view/src/buildview.ts","../view/src/viewport.ts","../view/src/domobserver.ts","../view/src/heightmap.ts","../view/src/extension.ts","../view/src/docview.ts","../view/src/cursor.ts","../view/src/input.ts","../view/src/domchange.ts","../view/src/editorview.ts","../node_modules/w3c-keyname/index.js","../keymap/src/keymap.ts","../history/src/core.ts","../history/src/history.ts","../gutter/src/index.ts","../commands/src/commands.ts","../legacy-modes/src/misc.ts","../legacy-modes/src/stringstream.ts","../legacy-modes/src/stringstreamcursor.ts","../legacy-modes/src/util.ts","../legacy-modes/src/index.ts","../matchbrackets/src/matchbrackets.ts","../legacy-modes/src/javascript.js","../special-chars/src/special-chars.ts","../multiple-selections/src/multiple-selections.ts","demo.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","let extendingChars = /[\\u0300-\\u036f\\u0483-\\u0489\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u065e\\u0670\\u06d6-\\u06dc\\u06de-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u0711\\u0730-\\u074a\\u0b82\\u0bbe\\u0bc0\\u0bcd\\u0bd7\\u0d3e\\u0d41-\\u0d44\\u0d4d\\u0d57\\u0d62\\u0d63\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u180b-\\u180d\\u18a9\\u200c\\u200d]/\ntry { extendingChars = new RegExp(\"\\\\p{Grapheme_Extend}\", \"u\") } catch (_) {}\n\nexport function isExtendingChar(ch: string): boolean {\n  let code = ch.charCodeAt(0)\n  return code >= 768 && (code >= 0xdc00 && code < 0xe000 || extendingChars.test(ch))\n}\n\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/\n\nlet wordChar: RegExp | null\ntry { wordChar = new RegExp(\"[\\\\p{Alphabetic}_]\", \"u\") } catch (_) {}\n\n// FIXME this doesn't work for astral chars yet (need different calling convention)\n\nfunction isWordCharBasic(ch: string): boolean {\n  if (wordChar) return wordChar.test(ch)\n  return /\\w/.test(ch) || ch > \"\\x80\" &&\n    (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch))\n}\n\nexport function isWordChar(ch: string, wordChars?: RegExp): boolean {\n  if (!wordChars) return isWordCharBasic(ch)\n  if (wordChars.source.indexOf(\"\\\\w\") > -1 && isWordCharBasic(ch)) return true\n  return wordChars.test(ch)\n}\n\nexport const enum CharType { WORD, SPACE, OTHER }\n\nexport function charType(ch: string, wordChars?: RegExp): CharType {\n  return /\\s/.test(ch) ? CharType.SPACE : isWordChar(ch, wordChars) ? CharType.WORD : CharType.OTHER\n}\n","import {isExtendingChar} from \"./char\"\n\nexport function countColumn(string: string, n: number, tabSize: number): number {\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i)\n    if (code == 9) n += tabSize - (n % tabSize)\n    else if (code < 768 || !isExtendingChar(string.charAt(i))) n++\n  }\n  return n\n}\n\nexport function findColumn(string: string, n: number, col: number, tabSize: number): {offset: number, leftOver: number} {\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i)\n    if (code >= 768 && isExtendingChar(string.charAt(i))) continue\n    if (n >= col) return {offset: i, leftOver: 0}\n    n += code == 9 ? tabSize - (n % tabSize) : 1\n  }\n  return {offset: string.length, leftOver: col - n}\n}\n","// The base size of a leaf node\nconst BASE_LEAF = 512\n// The max size of a leaf node\nconst MAX_LEAF = BASE_LEAF << 1\n// The desired amount of branches per node, as an exponent of 2 (so 3\n// means 8 branches)\nconst TARGET_BRANCH_SHIFT = 3\n\nexport interface TextIterator extends Iterator<string> {\n  next(skip?: number): this\n  value: string\n  done: boolean\n  lineBreak: boolean\n}\n\n// Note line numbers are 1-based\n\nexport abstract class Text {\n  abstract readonly length: number\n  abstract readonly lines: number\n  abstract readonly children: ReadonlyArray<Text> | null\n\n  lineAt(pos: number): Line {\n    if (pos < 0 || pos > this.length) throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`)\n    for (let i = 0; i < lineCache.length; i += 2) {\n      if (lineCache[i] != this) continue\n      let line = lineCache[i + 1]\n      if (line.start <= pos && line.end >= pos) return line\n    }\n    return cacheLine(this, this.lineInner(pos, false, 1, 0).finish(this))\n  }\n  line(n: number): Line {\n    if (n < 1 || n > this.lines) throw new RangeError(\"Invalid line number ${n} in ${this.lines}-line document\")\n    for (let i = 0; i < lineCache.length; i += 2) {\n      if (lineCache[i] != this) continue\n      let line = lineCache[i + 1]\n      if (line.number == n) return line\n    }\n    return cacheLine(this, this.lineInner(n, true, 1, 0).finish(this))\n  }\n  // @internal\n  abstract lineInner(target: number, isLine: boolean, line: number, offset: number): Line\n\n  replace(from: number, to: number, text: ReadonlyArray<string>): Text {\n    if (text.length == 0) throw new RangeError(\"An inserted range must have at least one line\")\n    return this.replaceInner(from, to, text, textLength(text))\n  }\n  // @internal\n  abstract replaceInner(from: number, to: number, text: ReadonlyArray<string>, length: number): Text\n\n  sliceLines(from: number, to: number = this.length): ReadonlyArray<string> {\n    return this.sliceTo(from, to, [\"\"])\n  }\n  // @internal\n  abstract sliceTo(from: number, to: number, target: string[]): string[]\n  slice(from: number, to?: number, lineSeparator?: string): string {\n    return joinLines(this.sliceLines(from, to), lineSeparator)\n  }\n\n  eq(other: Text): boolean { return this == other || eqContent(this, other) }\n\n  iter(dir: 1 | -1 = 1): TextIterator { return new RawTextCursor(this, dir) }\n  iterRange(from: number, to: number = this.length): TextIterator { return new PartialTextCursor(this, from, to) }\n  iterLines(from: number = 0) { return new LineCursor(this, from) }\n\n  // @internal\n  abstract decomposeStart(to: number, target: Text[]): void\n  // @internal\n  abstract decomposeEnd(from: number, target: Text[]): void\n  // @internal\n  abstract lastLineLength(): number\n  // @internal\n  abstract firstLineLength(): number\n\n  toString() { return this.slice(0, this.length) }\n\n  // @internal\n  protected constructor() {}\n\n  static of(text: string | ReadonlyArray<string>, lineSeparator?: string | RegExp): Text {\n    if (typeof text == \"string\") text = splitLines(text, lineSeparator)\n    else if (text.length == 0) throw new RangeError(\"A document must have at least one line\")\n    let length = textLength(text)\n    return length < MAX_LEAF ? new TextLeaf(text, length) : TextNode.from(TextLeaf.split(text, []), length)\n  }\n}\n\nlet lineCache: any[] = [], lineCachePos = -2, lineCacheSize = 12\n\nfunction cacheLine(text: Text, line: Line): Line {\n  lineCachePos = (lineCachePos + 2) % lineCacheSize\n  lineCache[lineCachePos] = text\n  lineCache[lineCachePos + 1] = line\n  return line\n}\n\nexport function splitLines(text: string, lineSeparator: string | RegExp = DEFAULT_SPLIT): string[] {\n  return text.split(lineSeparator)\n}\n\nexport function joinLines(text: ReadonlyArray<string>, lineSeparator: string = \"\\n\"): string {\n  return text.join(lineSeparator)\n}\n\nconst DEFAULT_SPLIT = /\\r\\n?|\\n/\n\nclass TextLeaf extends Text {\n  constructor(readonly text: ReadonlyArray<string>, readonly length: number = textLength(text)) {\n    super()\n  }\n\n  get lines(): number { return this.text.length }\n\n  get children() { return null }\n\n  replaceInner(from: number, to: number, text: ReadonlyArray<string>, length: number): Text {\n    return Text.of(appendText(this.text, appendText(text, sliceText(this.text, 0, from)), to))\n  }\n\n  sliceTo(from: number, to: number = this.length, target: string[]): string[] {\n    return appendText(this.text, target, from, to)\n  }\n\n  lineInner(target: number, isLine: boolean, line: number, offset: number): Line {\n    for (let i = 0;; i++) {\n      let string = this.text[i], end = offset + string.length\n      if ((isLine ? line : end) >= target)\n        return new Line(offset, end, line, string)\n      offset = end + 1\n      line++\n    }\n  }\n\n  decomposeStart(to: number, target: Text[]) {\n    target.push(new TextLeaf(sliceText(this.text, 0, to), to))\n  }\n\n  decomposeEnd(from: number, target: Text[]) {\n    target.push(new TextLeaf(sliceText(this.text, from), this.length - from))\n  }\n\n  lastLineLength(): number { return this.text[this.text.length - 1].length }\n\n  firstLineLength(): number { return this.text[0].length }\n\n  static split(text: ReadonlyArray<string>, target: Text[]): Text[] {\n    let part = [], length = -1\n    for (let line of text) {\n      for (;;) {\n        let newLength = length + line.length + 1\n        if (newLength < BASE_LEAF) {\n          length = newLength\n          part.push(line)\n          break\n        }\n        let cut = BASE_LEAF - length - 1, after = line.charCodeAt(cut)\n        if (after >= 0xdc00 && after < 0xe000) cut++\n        part.push(line.slice(0, cut))\n        target.push(new TextLeaf(part, BASE_LEAF))\n        line = line.slice(cut)\n        length = -1\n        part = []\n      }\n    }\n    if (length != -1) target.push(new TextLeaf(part, length))\n    return target\n  }\n}\n\nclass TextNode extends Text {\n  readonly lines: number;\n\n  constructor(readonly children: ReadonlyArray<Text>, readonly length: number) {\n    super()\n    this.lines = 1\n    for (let child of children) this.lines += child.lines - 1\n  }\n\n  replaceInner(from: number, to: number, text: ReadonlyArray<string>, length: number): Text {\n    let lengthDiff = length - (to - from), newLength = this.length + lengthDiff\n    if (newLength <= BASE_LEAF)\n      return new TextLeaf(appendText(this.sliceLines(to), appendText(text, this.sliceTo(0, from, [\"\"]))), newLength)\n\n    let children\n    for (let i = 0, pos = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (from >= pos && to <= end &&\n          (lengthDiff > 0\n           ? child.length + lengthDiff < Math.max(newLength >> (TARGET_BRANCH_SHIFT - 1), MAX_LEAF)\n           : child.length + lengthDiff > newLength >> (TARGET_BRANCH_SHIFT + 1))) {\n        // Fast path: if the change only affects one child and the\n        // child's size remains in the acceptable range, only update\n        // that child\n        children = this.children.slice()\n        children[i] = child.replace(from - pos, to - pos, text)\n        return new TextNode(children, newLength)\n      } else if (end >= from) {\n        // Otherwise, we must build up a new array of children\n        if (children == null) children = this.children.slice(0, i)\n        if (pos < from) {\n          if (end == from) children.push(child)\n          else child.decomposeStart(from - pos, children)\n        }\n        if (pos <= from && end >= from) TextLeaf.split(text, children)\n        if (pos >= to) children.push(child)\n        else if (end > to) child.decomposeEnd(to - pos, children)\n      }\n      pos = end\n    }\n    return children ? TextNode.from(children, newLength) : this\n  }\n\n  sliceTo(from: number, to: number, target: string[]): string[] {\n    let pos = 0\n    for (let child of this.children) {\n      let end = pos + child.length\n      if (to > pos && from < end)\n        child.sliceTo(Math.max(0, from - pos), Math.min(child.length, to - pos), target)\n      pos = end\n    }\n    return target\n  }\n\n  lineInner(target: number, isLine: boolean, line: number, offset: number): Line {\n    for (let i = 0;; i++) {\n      let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1\n      if ((isLine ? endLine : end) >= target) {\n        let inner = child.lineInner(target, isLine, line, offset), add\n        if (inner.start == offset && (add = this.lineLengthTo(i))) {\n          ;(inner as any).start -= add\n          ;(inner as any).content = null\n        }\n        if (inner.end == end && (add = this.lineLengthFrom(i + 1))) {\n          ;(inner as any).end += add\n          ;(inner as any).content = null\n        }\n        return inner\n      }\n      offset = end\n      line = endLine\n    }\n  }\n\n  decomposeStart(to: number, target: Text[]) {\n    for (let i = 0, pos = 0;; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (end <= to) {\n        target.push(child)\n      } else {\n        if (pos < to) child.decomposeStart(to - pos, target)\n        break\n      }\n      pos = end\n    }\n  }\n\n  decomposeEnd(from: number, target: Text[]) {\n    let pos = 0\n    for (let child of this.children) {\n      let end = pos + child.length\n      if (pos >= from) target.push(child)\n      else if (end > from && pos < from) child.decomposeEnd(from - pos, target)\n      pos = end\n    }\n  }\n\n  private lineLengthTo(to: number): number {\n    let length = 0\n    for (let i = to - 1; i >= 0; i--) {\n      let child = this.children[i]\n      if (child.lines > 1) return length + child.lastLineLength()\n      length += child.length\n    }\n    return length\n  }\n\n  lastLineLength(): number { return this.lineLengthTo(this.children.length) }\n\n  private lineLengthFrom(from: number): number {\n    let length = 0\n    for (let i = from; i < this.children.length; i++) {\n      let child = this.children[i]\n      if (child.lines > 1) return length + child.firstLineLength()\n      length += child.length\n    }\n    return length\n  }\n\n  firstLineLength(): number { return this.lineLengthFrom(0) }\n\n  static from(children: Text[], length: number): Text {\n    if (length < MAX_LEAF) {\n      let text = [\"\"]\n      for (let child of children) child.sliceTo(0, child.length, text)\n      return new TextLeaf(text, length)\n    }\n\n    let chunkLength = Math.max(BASE_LEAF, length >> TARGET_BRANCH_SHIFT), maxLength = chunkLength << 1, minLength = chunkLength >> 1\n    let chunked: Text[] = [], currentLength = 0, currentChunk: Text[] = []\n    function add(child: Text) {\n      let childLength = child.length, last\n      if (childLength > maxLength && child instanceof TextNode) {\n        for (let node of child.children) add(node)\n      } else if (childLength > minLength && (currentLength > minLength || currentLength == 0)) {\n        flush()\n        chunked.push(child)\n      } else if (child instanceof TextLeaf && currentLength > 0 &&\n                 (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                 child.length + last.length <= BASE_LEAF) {\n        currentLength += childLength\n        currentChunk[currentChunk.length - 1] = new TextLeaf(appendText(child.text, last.text.slice()), child.length + last.length)\n      } else {\n        if (currentLength + childLength > chunkLength) flush()\n        currentLength += childLength\n        currentChunk.push(child)\n      }\n    }\n    function flush() {\n      if (currentLength == 0) return\n      chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLength))\n      currentLength = 0\n      currentChunk.length = 0\n    }\n\n    for (let child of children) add(child)\n    flush()\n    return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length)\n  }\n}\n\nfunction textLength(text: ReadonlyArray<string>) {\n  let length = -1\n  for (let line of text) length += line.length + 1\n  return length\n}\n\nfunction appendText(text: ReadonlyArray<string>, target: string[], from = 0, to = 1e9): string[] {\n  for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n    let line = text[i], end = pos + line.length\n    if (end >= from) {\n      if (end > to) line = line.slice(0, to - pos)\n      if (pos < from) line = line.slice(from - pos)\n      if (first) { target[target.length - 1] += line; first = false }\n      else target.push(line)\n    }\n    pos = end + 1\n  }\n  return target\n}\n\nfunction sliceText(text: ReadonlyArray<string>, from?: number, to?: number): string[] {\n  return appendText(text, [\"\"], from, to)\n}\n\nfunction eqContent(a: Text, b: Text): boolean {\n  if (a.length != b.length || a.lines != b.lines) return false\n  let iterA = new RawTextCursor(a), iterB = new RawTextCursor(b)\n  for (let offA = 0, offB = 0;;) {\n    if (iterA.lineBreak != iterB.lineBreak || iterA.done != iterB.done) {\n      return false\n    } else if (iterA.done) {\n      return true\n    } else if (iterA.lineBreak) {\n      iterA.next(); iterB.next()\n      offA = offB = 0\n    } else {\n      let strA = iterA.value.slice(offA), strB = iterB.value.slice(offB)\n      if (strA.length == strB.length) {\n        if (strA != strB) return false\n        iterA.next(); iterB.next()\n        offA = offB = 0\n      } else if (strA.length > strB.length) {\n        if (strA.slice(0, strB.length) != strB) return false\n        offA += strB.length\n        iterB.next(); offB = 0\n      } else {\n        if (strB.slice(0, strA.length) != strA) return false\n        offB += strA.length\n        iterA.next(); offA = 0\n      }\n    }\n  }\n}\n\nclass RawTextCursor implements TextIterator {\n  public done: boolean = false\n  public lineBreak: boolean = false\n  public value: string = \"\"\n  private nodes: Text[]\n  private offsets: number[]\n\n  // @internal\n  constructor(text: Text, readonly dir: 1 | -1 = 1) {\n    this.nodes = [text]\n    this.offsets = [dir > 0 ? 0 : text instanceof TextLeaf ? text.text.length : text.children!.length]\n  }\n\n  next(skip: number = 0): this {\n    for (;;) {\n      let last = this.nodes.length - 1\n      if (last < 0) {\n        this.done = true\n        this.value = \"\"\n        this.lineBreak = false\n        return this\n      }\n      let top = this.nodes[last]\n      let offset = this.offsets[last]\n      if (top instanceof TextLeaf) {\n        // Internal ofset with lineBreak == false means we have to\n        // count the line break at this position\n        if (offset != (this.dir > 0 ? 0 : top.text.length) && !this.lineBreak) {\n          this.lineBreak = true\n          if (skip == 0) {\n            this.value = \"\\n\"\n            return this\n          }\n          skip--\n          continue\n        }\n        // Otherwise, move to the next string\n        let next = top.text[offset - (this.dir < 0 ? 1 : 0)]\n        this.offsets[last] = (offset += this.dir)\n        if (offset == (this.dir > 0 ? top.text.length : 0)) {\n          this.nodes.pop()\n          this.offsets.pop()\n        }\n        this.lineBreak = false\n        if (next.length > skip) {\n          this.value = skip == 0 ? next : this.dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip)\n          return this\n        }\n        skip -= next.length\n      } else if (offset == (this.dir > 0 ? top.children!.length : 0)) {\n        this.nodes.pop()\n        this.offsets.pop()\n      } else {\n        let next = top.children![this.dir > 0 ? offset : offset - 1], len = next.length\n        this.offsets[last] = offset + this.dir\n        if (skip > len) {\n          skip -= len\n        } else {\n          this.nodes.push(next)\n          this.offsets.push(this.dir > 0 ? 0 : next instanceof TextLeaf ? next.text.length : next.children!.length)\n        }\n      }\n    }\n  }\n}\n\nclass PartialTextCursor implements TextIterator {\n  cursor: RawTextCursor\n  limit: number\n  skip: number\n  value: string = \"\"\n\n  constructor(text: Text, start: number, end: number) {\n    this.cursor = new RawTextCursor(text, start > end ? -1 : 1)\n    if (start > end) {\n      this.skip = text.length - start\n      this.limit = start - end\n    } else {\n      this.skip = start\n      this.limit = end - start\n    }\n  }\n\n  next(): this {\n    if (this.limit <= 0) {\n      this.limit = -1\n    } else {\n      let {value, lineBreak} = this.cursor.next(this.skip)\n      this.skip = 0\n      this.value = value\n      let len = lineBreak ? 1 : value.length\n      if (len > this.limit)\n        this.value = this.cursor.dir > 0 ? value.slice(0, this.limit) : value.slice(len - this.limit)\n      this.limit -= this.value.length\n    }\n    return this\n  }\n\n  get lineBreak() { return this.cursor.lineBreak }\n\n  get done() { return this.limit < 0 }\n}\n\nclass LineCursor implements TextIterator {\n  cursor: TextIterator\n  skip: number\n  value = \"\"\n  done = false\n\n  constructor(text: Text, from = 0) {\n    this.cursor = text.iter()\n    this.skip = from\n  }\n\n  next(): this {\n    if (this.cursor.done) {\n      this.done = true\n      this.value = \"\"\n      return this\n    }\n    for (this.value = \"\";;) {\n      let {value, lineBreak, done} = this.cursor.next(this.skip)\n      this.skip = 0\n      if (done || lineBreak) return this\n      this.value += value\n    }\n  }\n\n  get lineBreak() { return false }\n}\n\nexport class Line {\n  constructor(readonly start: number,\n              readonly end: number,\n              readonly number: number,\n              // @internal\n              public content: string | null | LineContent) {}\n\n  get length() { return this.end - this.start }\n\n  slice(from: number = 0, to: number = this.length) {\n    if (typeof this.content == \"string\")\n      return to == from + 1 ? this.content.charAt(from) : this.content.slice(from, to)\n    if (from == to) return \"\"\n    let result = this.content!.slice(from, to)\n    if (from == 0 && to == this.length) this.content = result\n    return result\n  }\n\n  // @internal\n  finish(text: Text): this {\n    if (this.content == null) this.content = new LineContent(text, this.start)\n    return this\n  }\n}\n\nclass LineContent {\n  cursor: null | TextIterator = null\n  strings: string[] | null = null\n\n  constructor(private doc: Text, private start: number) {}\n\n  // FIXME quadratic complexity (somewhat) when iterating long lines in small pieces\n  slice(from: number, to: number) {\n    if (!this.cursor) {\n      this.cursor = this.doc.iter()\n      this.strings = [this.cursor.next(this.start).value]\n    }\n    for (let result = \"\", pos = 0, i = 0;; i++) {\n      if (i == this.strings!.length) this.strings!.push(this.cursor!.next().value)\n      let string = this.strings![i], end = pos + string.length\n      if (end <= from) continue\n      result += string.slice(Math.max(0, from - pos), Math.min(string.length, to - pos))\n      if (end >= to) return result\n      pos += string.length\n    }\n  }\n}\n","import {Mapping} from \"./change\"\nimport {EditorState} from \"./state\"\nimport {charType} from \"../../doc/src\"\n\nexport class SelectionRange {\n  constructor(public readonly anchor: number, public readonly head: number = anchor) {}\n\n  get from(): number { return Math.min(this.anchor, this.head) }\n  get to(): number { return Math.max(this.anchor, this.head) }\n  get empty(): boolean { return this.anchor == this.head }\n\n  map(mapping: Mapping): SelectionRange {\n    let anchor = mapping.mapPos(this.anchor), head = mapping.mapPos(this.head)\n    if (anchor == this.anchor && head == this.head) return this\n    else return new SelectionRange(anchor, head)\n  }\n\n  extend(from: number, to: number = from) {\n    if (from <= this.anchor && to >= this.anchor) return new SelectionRange(from, to)\n    let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to\n    return new SelectionRange(this.anchor, head)\n  }\n\n  eq(other: SelectionRange): boolean {\n    return this.anchor == other.anchor && this.head == other.head\n  }\n\n  toJSON(): any { return this }\n\n  static fromJSON(json: any): SelectionRange {\n    if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      throw new RangeError(\"Invalid JSON representation for SelectionRange\")\n    return new SelectionRange(json.anchor, json.head)\n  }\n\n  static groupAt(state: EditorState, pos: number, bias: 1 | -1 = 1) {\n    // FIXME at some point, take language-specific identifier characters into account\n    let line = state.doc.lineAt(pos), linePos = pos - line.start\n    if (line.length == 0) return new SelectionRange(pos)\n    if (linePos == 0) bias = 1\n    else if (linePos == line.length) bias = -1\n    let read = linePos + (bias < 0 ? -1 : 0), type = charType(line.slice(read, read + 1))\n    let from = pos, to = pos\n    for (let lineFrom = linePos; lineFrom > 0 && charType(line.slice(lineFrom - 1, lineFrom)) == type; lineFrom--) from--\n    for (let lineTo = linePos; lineTo < line.length && charType(line.slice(lineTo, lineTo + 1)) == type; lineTo++) to++\n    return new SelectionRange(to, from)\n  }\n}\n\nexport class EditorSelection {\n  /** @internal */\n  constructor(readonly ranges: ReadonlyArray<SelectionRange>,\n              readonly primaryIndex: number = 0) {}\n\n  map(mapping: Mapping): EditorSelection {\n    return EditorSelection.create(this.ranges.map(r => r.map(mapping)), this.primaryIndex)\n  }\n\n  eq(other: EditorSelection): boolean {\n    if (this.ranges.length != other.ranges.length ||\n        this.primaryIndex != other.primaryIndex) return false\n    for (let i = 0; i < this.ranges.length; i++)\n      if (!this.ranges[i].eq(other.ranges[i])) return false\n    return true\n  }\n\n  get primary(): SelectionRange { return this.ranges[this.primaryIndex] }\n\n  asSingle() {\n    return this.ranges.length == 1 ? this : new EditorSelection([this.primary])\n  }\n\n  addRange(range: SelectionRange, primary: boolean = true) {\n    return EditorSelection.create([range].concat(this.ranges), primary ? 0 : this.primaryIndex + 1)\n  }\n\n  replaceRange(range: SelectionRange, which: number = this.primaryIndex) {\n    let ranges = this.ranges.slice()\n    ranges[which] = range\n    return EditorSelection.create(ranges, this.primaryIndex)\n  }\n\n  toJSON(): any {\n    return this.ranges.length == 1 ? this.ranges[0].toJSON() :\n      {ranges: this.ranges.map(r => r.toJSON()), primaryIndex: this.primaryIndex}\n  }\n\n  static fromJSON(json: any): EditorSelection {\n    if (json && Array.isArray(json.ranges)) {\n      if (typeof json.primaryIndex != \"number\" || json.primaryIndex >= json.ranges.length)\n        throw new RangeError(\"Invalid JSON representation for EditorSelection\")\n      return new EditorSelection(json.ranges.map((r: any) => SelectionRange.fromJSON(r)), json.primaryIndex)\n    }\n    return new EditorSelection([SelectionRange.fromJSON(json)])\n  }\n\n  static single(anchor: number, head: number = anchor) {\n    return new EditorSelection([new SelectionRange(anchor, head)], 0)\n  }\n\n  static create(ranges: ReadonlyArray<SelectionRange>, primaryIndex: number = 0) {\n    for (let pos = 0, i = 0; i < ranges.length; i++) {\n      let range = ranges[i]\n      if (range.empty ? range.from <= pos : range.from < pos) return normalized(ranges.slice(), primaryIndex)\n      pos = range.to\n    }\n    return new EditorSelection(ranges, primaryIndex)\n  }\n\n  static default: EditorSelection = EditorSelection.single(0)\n}\n\nfunction normalized(ranges: SelectionRange[], primaryIndex: number = 0): EditorSelection {\n  let primary = ranges[primaryIndex]\n  ranges.sort((a, b) => a.from - b.from)\n  primaryIndex = ranges.indexOf(primary)\n  for (let i = 1; i < ranges.length; i++) {\n    let range = ranges[i], prev = ranges[i - 1]\n    if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n      let from = prev.from, to = Math.max(range.to, prev.to)\n      if (i <= primaryIndex) primaryIndex--\n      ranges.splice(--i, 2, range.anchor > range.head ? new SelectionRange(to, from) : new SelectionRange(from, to))\n    }\n  }\n  return new EditorSelection(ranges, primaryIndex)\n}\n","export type SlotType<T> = (value: T) => Slot<T>\n\nexport class Slot<T = any> {\n  // @internal\n  constructor(/* @internal */ public type: any,\n              /* @internal */ public value: T) {}\n\n  static define<T>(): SlotType<T> {\n    let type = (value: T) => new Slot<T>(type, value)\n    return type\n  }\n\n  static get<T>(type: SlotType<T>, slots: ReadonlyArray<Slot>): T | undefined {\n    for (let i = slots.length - 1; i >= 0; i--)\n      if (slots[i].type == type) return slots[i].value as T\n    return undefined\n  }\n}\n\nconst enum Kind { BEHAVIOR, MULTI, UNIQUE }\n\nexport type Behavior<Value> = (value: Value) => Extension\n\nexport class Extension {\n  // @internal\n  constructor(/* @internal */ public kind: Kind,\n              /* @internal */ public id: any,\n              /* @internal */ public value: any,\n              /* @internal */ public priority: number = -2) {}\n\n  private setPrio(priority: number): this {\n    // Crude casting because TypeScript doesn't understand new this.constructor\n    return new (this.constructor as any)(this.kind, this.id, this.value, priority) as this\n  }\n  fallback() { return this.setPrio(-1) }\n  extend() { return this.setPrio(1) }\n  override() { return this.setPrio(2) }\n\n  // @internal\n  flatten(priority: number, target: Extension[] = []) {\n    if (this.kind == Kind.MULTI) for (let ext of this.value as Extension[]) ext.flatten(this.priority > -2 ? this.priority : priority, target)\n    else target.push(this.priority > -2 ? this : this.setPrio(priority))\n    return target\n  }\n\n  // Insert this extension in an array of extensions so that it\n  // appears after any already-present extensions with the same or\n  // lower priority, but before any extensions with higher priority.\n  // @internal\n  collect(array: Extension[]) {\n    let i = 0\n    while (i < array.length && array[i].priority >= this.priority) i++\n    array.splice(i, 0, this)\n  }\n\n  // Define a type of behavior, which is the thing that extensions\n  // eventually resolve to. Each behavior can have an ordered sequence\n  // of values associated with it. An `Extension` can be seen as a\n  // tree of sub-extensions with behaviors as leaves.\n  static defineBehavior<Value>(): Behavior<Value> {\n    let behavior = (value: Value) => new this(Kind.BEHAVIOR, behavior, value)\n    return behavior\n  }\n\n  static unique<Spec>(instantiate: (specs: Spec[]) => Extension, defaultSpec?: Spec): (spec?: Spec) => Extension {\n    const type = new UniqueExtensionType(instantiate)\n    return (spec: Spec | undefined = defaultSpec) => {\n      if (spec === undefined) throw new RangeError(\"This extension has no default spec\")\n      return new this(Kind.UNIQUE, type, spec)\n    }\n  }\n\n  static all(...extensions: Extension[]) {\n    return new this(Kind.MULTI, null, extensions)\n  }\n\n  // Resolve an array of extenders by expanding all extensions until\n  // only behaviors are left, and then collecting the behaviors into\n  // arrays of values, preserving priority ordering throughout.\n  static resolve(extensions: ReadonlyArray<Extension>): BehaviorStore {\n    let pending: Extension[] = new this(Kind.MULTI, null, extensions).flatten(0)\n    // This does a crude topological ordering to resolve behaviors\n    // top-to-bottom in the dependency ordering. If there are no\n    // cyclic dependencies, we can always find a behavior in the top\n    // `pending` array that isn't a dependency of any unresolved\n    // behavior, and thus find and order all its specs in order to\n    // resolve them.\n    for (let resolved: UniqueExtensionType[] = [];;) {\n      let top = findTopUnique(pending, this)\n      if (!top) break // Only behaviors left\n      // Prematurely evaluated a behavior type because of missing\n      // sub-behavior information -- start over, in the assumption\n      // that newly gathered information will make the next attempt\n      // more successful.\n      if (resolved.indexOf(top) > -1) return this.resolve(extensions)\n      top.resolve(pending)\n      resolved.push(top)\n    }\n    // Collect the behavior values.\n    let store = new BehaviorStore\n    for (let ext of pending) {\n      if (!(ext instanceof this)) {\n        // Collect extensions of the wrong type into store.foreign\n        store.foreign.push(ext)\n        continue\n      }\n      if (store.behaviors.indexOf(ext.id) > -1) continue // Already collected\n      let values: Extension[] = []\n      for (let e of pending) if (e.id == ext.id) e.collect(values)\n      store.behaviors.push(ext.id)\n      store.values.push(values.map(v => v.value))\n    }\n    return store\n  }\n}\n\nclass UniqueExtensionType {\n  knownSubs: UniqueExtensionType[] = []\n\n  constructor(public instantiate: (...specs: any[]) => Extension) {}\n\n  hasSub(type: UniqueExtensionType): boolean {\n    for (let known of this.knownSubs)\n      if (known == type || known.hasSub(type)) return true\n    return false\n  }\n\n  resolve(extensions: Extension[]) {\n    // Replace all instances of this type in extneions with the\n    // sub-extensions that instantiating produces.\n    let ours: Extension[] = []\n    for (let ext of extensions) if (ext.id == this) ext.collect(ours)\n    let first = true\n    for (let i = 0; i < extensions.length; i++) {\n      let ext = extensions[i]\n      if (ext.id != this) continue\n      let sub = first ? this.subs(ours.map(s => s.value), ext.priority) : none\n      extensions.splice(i, 1, ...sub)\n      first = false\n      i += sub.length - 1\n    }\n  }\n\n  subs(specs: any[], priority: number) {\n    let subs = this.instantiate(specs).flatten(priority)\n    for (let sub of subs)\n      if (sub.kind == Kind.UNIQUE && this.knownSubs.indexOf(sub.id) == -1) this.knownSubs.push(sub.id)\n    return subs\n  }\n}\n\nconst none = [] as any\n\n// An instance of this is part of EditorState and stores the behaviors\n// provided for the state.\nexport class BehaviorStore {\n  // @internal\n  behaviors: any[] = []\n  // @internal\n  values: any[][] = []\n  // Any extensions that weren't an instance of the given type when\n  // resolving.\n  foreign: Extension[] = []\n\n  get<Value>(behavior: Behavior<Value>): Value[] {\n    let found = this.behaviors.indexOf(behavior)\n    return found < 0 ? none : this.values[found]\n  }\n}\n\n// Find the extension type that must be resolved next, meaning it is\n// not a (transitive) sub-extension of any other extensions that are\n// still in extenders.\nfunction findTopUnique(extensions: Extension[], type: typeof Extension): UniqueExtensionType | null {\n  let foundUnique = false\n  for (let ext of extensions) if (ext.kind == Kind.UNIQUE && ext instanceof type) {\n    foundUnique = true\n    if (!extensions.some(e => e.kind == Kind.UNIQUE && (e.id as UniqueExtensionType).hasSub(ext.id)))\n      return ext.id\n  }\n  if (foundUnique) throw new RangeError(\"Sub-extension cycle in unique extensions\")\n  return null\n}\n\ntype NonUndefined<T> = T extends undefined ? never : T\n\n// Utility function for combining behaviors to fill in a config\n// object from an array of provided configs. Will, by default, error\n// when a field gets two values that aren't ===-equal, but you can\n// provide combine functions per field to do something else.\nexport function combineConfig<Config>(\n  configs: ReadonlyArray<Partial<Config>>,\n  defaults: Config,\n  combine: {[P in keyof Config]?: (first: NonUndefined<Config[P]>, second: NonUndefined<Config[P]>) => NonUndefined<Config[P]>} = {}\n): Config {\n  let result: Partial<Config> = {}\n  for (let config of configs) for (let key of Object.keys(config) as (keyof Config)[]) {\n    let value = config[key], current = result[key]\n    if (current === undefined) result[key] = value\n    else if (current === value || value === undefined) {} // No conflict\n    else if (Object.hasOwnProperty.call(combine, key)) result[key] = combine[key]!(current as any, value as any)\n    else throw new Error(\"Config merge conflict for field \" + key)\n  }\n  for (let key in defaults)\n    if (result[key] === undefined) result[key] = defaults[key]\n  return result as any as Config\n}\n","import {Text} from \"../../doc/src\"\n\nconst empty: ReadonlyArray<any> = []\n\nexport interface Mapping {\n  mapPos(pos: number, bias?: number, trackDel?: boolean): number\n}\n\nexport class ChangeDesc implements Mapping {\n  constructor(public readonly from: number, public readonly to: number, public readonly length: number) {}\n\n  get invertedDesc() { return new ChangeDesc(this.from, this.from + this.length, this.to - this.from) }\n\n  mapPos(pos: number, bias: number = -1, trackDel: boolean = false): number {\n    let {from, to, length} = this\n    if (pos < from) return pos\n    if (pos > to) return pos + (length - (to - from))\n    if (pos == to || pos == from) return (from == to ? bias <= 0 : pos == from) ? from : from + length\n    pos = from + (bias <= 0 ? 0 : length)\n    return trackDel ? -pos - 1 : pos\n  }\n\n  toJSON(): any { return this }\n\n  static fromJSON(json: any) {\n    if (!json || typeof json.from != \"number\" || typeof json.to != \"number\" || typeof json.length != \"number\")\n      throw new RangeError(\"Invalid JSON representation for ChangeDesc\")\n    return new ChangeDesc(json.from, json.to, json.length)\n  }\n}\n\nexport class Change extends ChangeDesc {\n  constructor(public readonly from: number, public readonly to: number, public readonly text: ReadonlyArray<string>) {\n    super(from, to, textLength(text))\n  }\n\n  invert(doc: Text): Change {\n    return new Change(this.from, this.from + this.length, doc.sliceLines(this.from, this.to))\n  }\n\n  apply(doc: Text): Text {\n    return doc.replace(this.from, this.to, this.text)\n  }\n\n  map(mapping: Mapping): Change | null {\n    let from = mapping.mapPos(this.from, 1), to = mapping.mapPos(this.to, -1)\n    return from > to ? null : new Change(from, to, this.text)\n  }\n\n  get desc() { return new ChangeDesc(this.from, this.to, this.length) }\n\n  toJSON(): any {\n    return {from: this.from, to: this.to, text: this.text}\n  }\n\n  static fromJSON(json: any) {\n    if (!json || typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        !Array.isArray(json.text) || json.text.some((val: any) => typeof val != \"string\"))\n      throw new RangeError(\"Invalid JSON representation for Change\")\n    return new Change(json.from, json.to, json.text)\n  }\n}\n\nfunction textLength(text: ReadonlyArray<string>) {\n  let length = -1\n  for (let line of text) length += line.length + 1\n  return length\n}\n\nexport class ChangeSet<C extends ChangeDesc = Change> implements Mapping {\n  constructor(readonly changes: ReadonlyArray<C>,\n              readonly mirror: ReadonlyArray<number> = empty) {}\n\n  get length(): number {\n    return this.changes.length\n  }\n\n  getMirror(n: number): number | null {\n    for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n    return null\n  }\n\n  append(change: C, mirror?: number): ChangeSet<C> {\n    return new ChangeSet(this.changes.concat(change),\n                         mirror != null ? this.mirror.concat(this.length, mirror) : this.mirror)\n  }\n\n  appendSet(changes: ChangeSet<C>): ChangeSet<C> {\n    return changes.length == 0 ? this :\n      this.length == 0 ? changes :\n      new ChangeSet(this.changes.concat(changes.changes),\n                    this.mirror.concat(changes.mirror.map(i => i + this.length)))\n  }\n\n  static empty: ChangeSet<any> = new ChangeSet(empty)\n\n  mapPos(pos: number, bias: number = -1, trackDel: boolean = false): number {\n    return this.mapInner(pos, bias, trackDel, 0, this.length)\n  }\n\n  /** @internal */\n  mapInner(pos: number, bias: number, trackDel: boolean, fromI: number, toI: number): number {\n    let dir = toI < fromI ? -1 : 1\n    let recoverables: {[key: number]: number} | null = null\n    let hasMirrors = this.mirror.length > 0, rec, mirror, deleted = false\n    for (let i = fromI - (dir < 0 ? 1 : 0), endI = toI - (dir < 0 ? 1 : 0); i != endI; i += dir) {\n      let {from, to, length} = this.changes[i]\n      if (dir < 0) {\n        let len = to - from\n        to = from + length\n        length = len\n      }\n\n      if (pos < from) continue\n      if (pos > to) {\n        pos += length - (to - from)\n        continue\n      }\n      // Change touches this position\n      if (recoverables && (rec = recoverables[i]) != null) { // There's a recovery for this change, and it applies\n        pos = from + rec\n        continue\n      }\n      if (hasMirrors && (mirror = this.getMirror(i)) != null &&\n          (dir > 0 ? mirror > i && mirror < toI : mirror < i && mirror >= toI)) { // A mirror exists\n        if (pos > from && pos < to) { // If this change deletes the position, skip forward to the mirror\n          i = mirror\n          pos = this.changes[i].from + (pos - from)\n          continue\n        }\n        // Else store a recoverable\n        ;(recoverables || (recoverables = {}))[mirror] = pos - from\n      }\n      if (pos > from && pos < to) {\n        deleted = true\n        pos = bias <= 0 ? from : from + length\n      } else {\n        pos = (from == to ? bias <= 0 : pos == from) ? from : from + length\n      }\n    }\n    return trackDel && deleted ? -pos - 1 : pos\n  }\n\n  partialMapping(from: number, to: number = this.length): Mapping {\n    if (from == 0 && to == this.length) return this\n    return new PartialMapping(this, from, to)\n  }\n\n  changedRanges(): ChangedRange[] {\n    let set: ChangedRange[] = []\n    for (let i = 0; i < this.length; i++) {\n      let change = this.changes[i]\n      let fromA = change.from, toA = change.to, fromB = change.from, toB = change.from + change.length\n      if (i < this.length - 1) {\n        let mapping = this.partialMapping(i + 1)\n        fromB = mapping.mapPos(fromB, 1); toB = mapping.mapPos(toB, -1)\n      }\n      if (i > 0) {\n        let mapping = this.partialMapping(i, 0)\n        fromA = mapping.mapPos(fromA, 1); toA = mapping.mapPos(toA, -1)\n      }\n      new ChangedRange(fromA, toA, fromB, toB).addToSet(set)\n    }\n    return set\n  }\n\n  get desc(): ChangeSet<ChangeDesc> {\n    if (this.changes.length == 0 || this.changes[0] instanceof ChangeDesc) return this\n    return new ChangeSet(this.changes.map(ch => (ch as any).desc), this.mirror)\n  }\n\n  toJSON(): any {\n    let changes = this.changes.map(change => change.toJSON())\n    return this.mirror.length == 0 ? changes : {mirror: this.mirror, changes}\n  }\n\n  static fromJSON<C extends ChangeDesc>(ChangeType: {fromJSON: (json: any) => C}, json: any): ChangeSet<C> {\n    let mirror, changes\n    if (Array.isArray(json)) {\n      mirror = empty\n      changes = json\n    } else if (!json || !Array.isArray(json.mirror) || !Array.isArray(json.changes)) {\n      throw new RangeError(\"Invalid JSON representation for ChangeSet\")\n    } else {\n      ;({mirror, changes} = json)\n    }\n    return new ChangeSet(changes.map((ch: any) => ChangeType.fromJSON(ch)), mirror)\n  }\n}\n\nclass PartialMapping implements Mapping {\n  constructor(readonly changes: ChangeSet<any>, readonly from: number, readonly to: number) {}\n  mapPos(pos: number, bias: number = -1, trackDel: boolean = false): number {\n    return this.changes.mapInner(pos, bias, trackDel, this.from, this.to)\n  }\n}\n\nexport class ChangedRange {\n  constructor(readonly fromA: number, readonly toA: number,\n              readonly fromB: number, readonly toB: number) {}\n\n  join(other: ChangedRange): ChangedRange {\n    return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA),\n                            Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB))\n  }\n\n  addToSet(set: ChangedRange[]): ChangedRange[] {\n    let i = set.length, me: ChangedRange = this\n    for (; i > 0; i--) {\n      let range = set[i - 1]\n      if (range.fromA > me.toA) continue\n      if (range.toA < me.fromA) break\n      me = me.join(range)\n      set.splice(i - 1, 1)\n    }\n    set.splice(i, 0, me)\n    return set\n  }\n\n  subtractFromSet(set: ChangedRange[]): ChangedRange[] {\n    for (let i = 0; i < set.length; i++) {\n      let range = set[i]\n      if (range.fromA >= this.toA && range.fromB >= this.toB) break\n      if (range.toA <= this.fromA && range.toB <= this.fromB) continue\n      let replace = []\n      if (range.fromA < this.fromA || range.fromB < this.fromB)\n        replace.push(new ChangedRange(range.fromA, this.fromA, range.fromB, this.fromB))\n      if (range.toA > this.toA || range.toB > this.toB)\n        replace.push(new ChangedRange(this.toA, range.toA, range.toB, this.toB))\n      set.splice(i, 1, ...replace)\n      i = i + replace.length - 1\n    }\n    return set\n  }\n\n  get lenDiff() { return (this.toB - this.fromB) - (this.toA - this.fromA) }\n\n  static mapPos(pos: number, bias: number, changes: ReadonlyArray<ChangedRange>): number {\n    let off = 0\n    for (let range of changes) {\n      if (pos < range.fromA) break\n      if (pos <= range.toA) {\n        let side = range.toA == range.fromA ? bias : pos == range.fromA ? -1 : pos == range.toA ? 1 : bias\n        return side < 0 ? range.fromB : range.toB\n      }\n      off = range.toB - range.toA\n    }\n    return pos + off\n  }\n}\n","import {Text} from \"../../doc/src\"\nimport {Slot, SlotType} from \"../../extension/src/extension\"\nimport {EditorState} from \"./state\"\nimport {EditorSelection, SelectionRange} from \"./selection\"\nimport {Change, ChangeSet} from \"./change\"\n\nconst empty: ReadonlyArray<any> = []\n\nconst FLAG_SELECTION_SET = 1, FLAG_SCROLL_INTO_VIEW = 2\n\nexport class Transaction {\n  private constructor(readonly startState: EditorState,\n                      readonly changes: ChangeSet,\n                      readonly docs: ReadonlyArray<Text>,\n                      readonly selection: EditorSelection,\n                      private readonly metadata: ReadonlyArray<Slot>,\n                      private readonly flags: number) {}\n\n  static start(state: EditorState, time: number = Date.now()) {\n    return new Transaction(state, ChangeSet.empty, empty, state.selection, [Transaction.time(time)], 0)\n  }\n\n  get doc(): Text {\n    let last = this.docs.length - 1\n    return last < 0 ? this.startState.doc : this.docs[last]\n  }\n\n  addMeta(...metadata: Slot[]): Transaction {\n    return new Transaction(this.startState, this.changes, this.docs, this.selection, this.metadata.concat(metadata), this.flags)\n  }\n\n  getMeta<T>(type: SlotType<T>): T | undefined {\n    return Slot.get(type, this.metadata)\n  }\n\n  change(change: Change, mirror?: number): Transaction {\n    if (change.from == change.to && change.length == 0) return this\n    if (change.from < 0 || change.to < change.from || change.to > this.doc.length)\n      throw new RangeError(`Invalid change ${change.from} to ${change.to}`)\n    let changes = this.changes.append(change, mirror)\n    return new Transaction(this.startState, changes, this.docs.concat(change.apply(this.doc)),\n                           this.selection.map(changes.partialMapping(changes.length - 1)),\n                           this.metadata, this.flags)\n  }\n\n  replace(from: number, to: number, text: string | ReadonlyArray<string>): Transaction {\n    return this.change(new Change(from, to, typeof text == \"string\" ? this.startState.splitLines(text) : text))\n  }\n\n  replaceSelection(text: string | ReadonlyArray<string>): Transaction {\n    let content = typeof text == \"string\" ? this.startState.splitLines(text) : text\n    return this.reduceRanges((state, r) => {\n      let change = new Change(r.from, r.to, content)\n      return {transaction: state.change(change), range: new SelectionRange(r.from + change.length)}\n    })\n  }\n\n  reduceRanges(f: (transaction: Transaction, range: SelectionRange) => (Transaction | {transaction: Transaction, range: SelectionRange})): Transaction {\n    let tr: Transaction = this\n    let sel = tr.selection, start = tr.changes.length, newRanges: SelectionRange[] = []\n    for (let range of sel.ranges) {\n      range = range.map(tr.changes.partialMapping(start))\n      let result = f(tr, range)\n      if (result instanceof Transaction) {\n        tr = result\n        newRanges.push(range.map(tr.changes.partialMapping(tr.changes.length - 1)))\n      } else {\n        tr = result.transaction\n        newRanges.push(result.range)\n      }\n    }\n    return tr.setSelection(EditorSelection.create(newRanges, sel.primaryIndex))\n  }\n\n  mapRanges(f: (range: SelectionRange) => SelectionRange): Transaction {\n    return this.reduceRanges((tr, range) => ({transaction: tr, range: f(range)}))\n  }\n\n  setSelection(selection: EditorSelection): Transaction {\n    return new Transaction(this.startState, this.changes, this.docs,\n                           this.startState.multipleSelections ? selection : selection.asSingle(),\n                           this.metadata, this.flags | FLAG_SELECTION_SET)\n  }\n\n  get selectionSet(): boolean {\n    return (this.flags & FLAG_SELECTION_SET) > 0\n  }\n\n  get docChanged(): boolean {\n    return this.changes.length > 0\n  }\n\n  scrollIntoView(): Transaction {\n    return new Transaction(this.startState, this.changes, this.docs, this.selection,\n                           this.metadata, this.flags | FLAG_SCROLL_INTO_VIEW)\n  }\n\n  get scrolledIntoView(): boolean {\n    return (this.flags & FLAG_SCROLL_INTO_VIEW) > 0\n  }\n\n  apply(): EditorState {\n    return this.startState.applyTransaction(this)\n  }\n\n  invertedChanges(): ChangeSet<Change> {\n    if (!this.changes.length) return ChangeSet.empty\n    let changes: Change[] = [], set = this.changes\n    for (let i = set.length - 1; i >= 0; i--)\n      changes.push(set.changes[i].invert(i == 0 ? this.startState.doc : this.docs[i - 1]))\n    return new ChangeSet(changes, set.mirror.length ? set.mirror.map(i => set.length - i - 1) : set.mirror)\n  }\n\n  static time = Slot.define<number>()\n  static changeTabSize = Slot.define<number>()\n  static changeLineSeparator = Slot.define<string | null>()\n  static preserveGoalColumn = Slot.define<boolean>()\n  static userEvent = Slot.define<string>()\n  static addToHistory = Slot.define<boolean>()\n}\n","import {joinLines, splitLines, Text} from \"../../doc/src\"\nimport {EditorSelection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\nimport {Extension, BehaviorStore} from \"../../extension/src/extension\"\n\nexport class StateExtension extends Extension {\n  static allowMultipleSelections = StateExtension.defineBehavior<boolean>()\n  static indentation = StateExtension.defineBehavior<(state: EditorState, pos: number) => number>()\n}\n\nclass Configuration {\n  constructor(\n    readonly behavior: BehaviorStore,\n    readonly fields: ReadonlyArray<StateField<any>>,\n    readonly multipleSelections: boolean,\n    readonly tabSize: number,\n    readonly lineSeparator: string | null) {}\n\n  static create(config: EditorStateConfig): Configuration {\n    let behavior = StateExtension.resolve(config.extensions || [])\n    return new Configuration(\n      behavior,\n      behavior.get(stateFieldBehavior),\n      behavior.get(StateExtension.allowMultipleSelections).some(x => x),\n      config.tabSize || 4,\n      config.lineSeparator || null)\n  }\n\n  updateTabSize(tabSize: number) {\n    return new Configuration(this.behavior, this.fields, this.multipleSelections, tabSize, this.lineSeparator)\n  }\n\n  updateLineSeparator(lineSep: string | null) {\n    return new Configuration(this.behavior, this.fields, this.multipleSelections, this.tabSize, lineSep)\n  }\n}\n\nexport interface EditorStateConfig {\n  doc?: string | Text\n  selection?: EditorSelection\n  extensions?: ReadonlyArray<Extension>\n  tabSize?: number\n  lineSeparator?: string | null\n}\n\nexport class EditorState {\n  /** @internal */\n  constructor(/* @internal */ readonly config: Configuration,\n              private readonly fields: ReadonlyArray<any>,\n              readonly doc: Text,\n              readonly selection: EditorSelection) {\n    for (let range of selection.ranges)\n      if (range.to > doc.length) throw new RangeError(\"Selection points outside of document\")\n  }\n\n  getField<T>(field: StateField<T>): T {\n    let index = this.config.fields.indexOf(field)\n    if (index < 0) throw new RangeError(\"Field is not present in this state\")\n    if (index >= this.fields.length) throw new RangeError(\"Field hasn't been initialized yet\")\n    return this.fields[index]\n  }\n\n  /** @internal */\n  applyTransaction(tr: Transaction): EditorState {\n    let $conf = this.config\n    let tabSize = tr.getMeta(Transaction.changeTabSize), lineSep = tr.getMeta(Transaction.changeLineSeparator)\n    if (tabSize !== undefined) $conf = $conf.updateTabSize(tabSize)\n    // FIXME changing the line separator might involve rearranging line endings (?)\n    if (lineSep !== undefined) $conf = $conf.updateLineSeparator(lineSep)\n    let fields: any[] = []\n    let newState = new EditorState($conf, fields, tr.doc, tr.selection)\n    for (let i = 0; i < this.fields.length; i++)\n      fields[i] = $conf.fields[i].apply(tr, this.fields[i], newState)\n    return newState\n  }\n\n  get transaction(): Transaction {\n    return Transaction.start(this)\n  }\n\n  get tabSize(): number { return this.config.tabSize }\n\n  get multipleSelections(): boolean { return this.config.multipleSelections }\n\n  joinLines(text: ReadonlyArray<string>): string { return joinLines(text, this.config.lineSeparator || undefined) }\n  splitLines(text: string): string[] { return splitLines(text, this.config.lineSeparator || undefined) }\n\n  get behavior() { return this.config.behavior }\n\n  // FIXME plugin state serialization\n\n  toJSON(): any {\n    return {\n      doc: this.joinLines(this.doc.sliceLines(0, this.doc.length)),\n      selection: this.selection.toJSON(),\n      lineSeparator: this.config.lineSeparator,\n      tabSize: this.tabSize\n    }\n  }\n\n  static fromJSON(json: any, config: EditorStateConfig = {}): EditorState {\n    if (!json || (json.lineSeparator && typeof json.lineSeparator != \"string\") ||\n        typeof json.tabSize != \"number\" || typeof json.doc != \"string\")\n      throw new RangeError(\"Invalid JSON representation for EditorState\")\n    return EditorState.create({\n      doc: json.doc,\n      selection: EditorSelection.fromJSON(json.selection),\n      extensions: config.extensions,\n      tabSize: config.tabSize,\n      lineSeparator: config.lineSeparator\n    })\n  }\n\n  static create(config: EditorStateConfig = {}): EditorState {\n    let $config = Configuration.create(config)\n    let doc = config.doc instanceof Text ? config.doc\n      : Text.of(config.doc || \"\", config.lineSeparator || undefined)\n    let selection = config.selection || EditorSelection.default\n    if (!$config.multipleSelections) selection = selection.asSingle()\n    let fields: any[] = []\n    let state = new EditorState($config, fields, doc, selection)\n    for (let field of $config.fields) fields.push(field.init(state))\n    return state\n  }\n}\n\nconst stateFieldBehavior = StateExtension.defineBehavior<StateField<any>>()\n\nexport class StateField<T> {\n  readonly init: (state: EditorState) => T\n  readonly apply: (tr: Transaction, value: T, newState: EditorState) => T\n  readonly extension: StateExtension\n\n  constructor({init, apply}: {\n    init: (state: EditorState) => T,\n    apply: (tr: Transaction, value: T, newState: EditorState) => T\n  }) {\n    this.init = init\n    this.apply = apply\n    this.extension = stateFieldBehavior(this)\n  }\n}\n","function sym(name, random) {\n  return typeof Symbol == \"undefined\"\n    ? \"__\" + name + (random ? Math.floor(Math.random() * 1e8) : \"\")\n    : random ? Symbol(name) : Symbol.for(name)\n}\n\nvar COUNT = sym(\"\\u037c\"), SET = sym(\"styleSet\", 1), DATA = sym(\"data\", 1)\nvar top = typeof global == \"undefined\" ? window : global\n\n// ::- A style module defines a number of CSS classes and generates\n// names for them. Instances of this class bind the property names\n// from `spec` to CSS class names that assign the styles in the\n// corresponding property values.\n//\n// A style module can only be used in a given DOM root after it has\n// been _mounted_ there with `StyleModule.mount`.\n//\n// By default, rules are defined in the order in which they are\n// mounted, making those mounted later take precedence in case of an\n// otherwise equal selector precedence. You can pass 0 for low\n// priority or 2 for high priority as second argument to explicitly\n// move the rules above or below rules with default priority. Within a\n// priority level, rules remain defined in mount order.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. To avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nvar StyleModule = exports.StyleModule = function StyleModule(spec, options) {\n  var priority = options && options.priority\n  if (priority == null) { priority = 1 }\n  if (priority < 0 || priority > 2 || +priority != priority) { throw new RangeError(\"Invalid priority: \" + priority) }\n  this[DATA] = {rules: [], mounted: [], priority: priority}\n  top[COUNT] = top[COUNT] || 1\n  for (var name in spec) {\n    var className = this[name] = \"\\u037c\" + (top[COUNT]++).toString(36)\n    renderStyle(\".\" + className, spec[name], this[DATA].rules)\n  }\n};\n\n// :: (union<Document, ShadowRoot>, Object<string>)\n//\n// Mount the given module in the given DOM root, which ensures that\n// the CSS rules defined by the module are available in that context.\n//\n// This function can be called multiple times with the same arguments\n// cheaply—rules are only added to the document once per root.\nStyleModule.mount = function mount (root, module) {\n  var data = module[DATA]\n  if (data.mounted.indexOf(root) > -1) { return\n  ; }(root[SET] || new StyleSet(root)).mount(data.rules, data.priority)\n  data.mounted.push(root)\n};\n\nStyleModule.prototype = Object.create(null)\n\nvar StyleSet = function StyleSet(root) {\n  this.root = root\n  root[SET] = this\n  this.styleTag = (root.ownerDocument || root).createElement(\"style\")\n  var target = root.head || root\n  target.insertBefore(this.styleTag, target.firstChild)\n  this.insertPos = [0, 0, 0]\n  this.rules = []\n};\n\nStyleSet.prototype.mount = function mount (rules, priority) {\n    var ref;\n\n  var pos = this.insertPos[priority]\n  ;(ref = this.rules).splice.apply(ref, [ pos, 0 ].concat( rules ))\n  var sheet = this.styleTag.sheet\n  if (sheet) {\n    for (var i = 0; i < rules.length; i++)\n      { sheet.insertRule(rules[i], pos++) }\n  } else {\n    this.styleTag.textContent = this.rules.join(\"\\n\")\n  }\n  for (var i$1 = priority; i$1 < this.insertPos.length; i$1++)\n    { this.insertPos[i$1] += rules.length }\n};\n\nfunction renderStyle(selector, spec, output) {\n  if (typeof spec != \"object\") { throw new RangeError(\"Expected style object, got \" + JSON.stringify(spec)) }\n  var props = []\n  for (var prop in spec) {\n    if (/^@/.test(prop)) {\n      var local = []\n      renderStyle(selector, spec[prop], local)\n      output.push(prop + \" {\" + local.join(\" \") + \"}\")\n    } else if (/&/.test(prop)) {\n      renderStyle(prop.replace(/&/g, selector), spec[prop], output)\n    } else {\n      if (typeof spec[prop] == \"object\") { throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\") }\n      props.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, function (l) { return \"-\" + l.toLowerCase(); }) + \": \" + spec[prop])\n    }\n  }\n  if (props.length) { output.push(selector + \" {\" + props.join(\"; \") + \"}\") }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n\n","let [nav, doc]: [any, any] = typeof navigator != \"undefined\"\n  ? [navigator, document]\n  : [{userAgent: \"\", vendor: \"\", platform: \"\"}, {documentElement: {style: {}}}]\n\nconst ie_edge = /Edge\\/(\\d+)/.exec(nav.userAgent)\nconst ie_upto10 = /MSIE \\d/.test(nav.userAgent)\nconst ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent)\nconst ie = !!(ie_upto10 || ie_11up || ie_edge)\nconst gecko = !ie && /gecko\\/(\\d+)/i.test(nav.userAgent)\nconst chrome = !ie && /Chrome\\/(\\d+)/.exec(nav.userAgent)\nconst webkit = !ie && 'WebkitAppearance' in doc.documentElement.style\n\nexport default {\n  mac: /Mac/.test(nav.platform),\n  ie,\n  ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n  gecko,\n  gecko_version: gecko ? +(/Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n  chrome: !!chrome,\n  chrome_version: chrome ? +chrome[1] : 0,\n  ios: !ie && /AppleWebKit/.test(nav.userAgent) && /Mobile\\/\\w+/.test(nav.userAgent),\n  android: /Android\\b/.test(nav.userAgent),\n  webkit,\n  safari: /Apple Computer/.test(nav.vendor),\n  webkit_version: webkit ? +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0\n}\n","import browser from \"./browser\"\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport function selectionCollapsed(domSel: Selection) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function hasSelection(dom: HTMLElement, selection: Selection): boolean {\n  if (!selection.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return dom.contains(selection.anchorNode.nodeType == 3 ? selection.anchorNode.parentNode! : selection.anchorNode)\n  } catch(_) {\n    return false\n  }\n}\n\nexport function clientRectsFor(dom: Node): DOMRectList {\n  if (dom.nodeType == 3) {\n    let range = document.createRange()\n    range.setEnd(dom, dom.nodeValue!.length)\n    range.setStart(dom, 0)\n    return range.getClientRects() as DOMRectList\n  } else if (dom.nodeType == 1) {\n    return (dom as HTMLElement).getClientRects() as DOMRectList\n  } else {\n    return [] as any as DOMRectList\n  }\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport function isEquivalentPosition(node: Node, off: number, targetNode: Node | null, targetOff: number): boolean {\n  return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n                       scanFor(node, off, targetNode, targetOff, 1)) : false\n}\n\nexport function domIndex(node: Node): number {\n  for (var index = 0;; index++) {\n    node = node.previousSibling!\n    if (!node) return index\n  }\n}\n\nfunction scanFor(node: Node, off: number, targetNode: Node, targetOff: number, dir: -1 | 1): boolean {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : maxOffset(node))) {\n      if (node.nodeName == \"DIV\") return false\n      let parent = node.parentNode\n      if (!parent || parent.nodeType != 1) return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      off = dir < 0 ? maxOffset(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function maxOffset(node: Node): number {\n  return node.nodeType == 3 ? node.nodeValue!.length : node.childNodes.length\n}\n\nexport type Rect = {left: number, right: number, top: number, bottom: number}\n\nfunction windowRect(win: Window): Rect {\n  return {left: 0, right: win.innerWidth,\n          top: 0, bottom: win.innerHeight}\n}\n\nexport function scrollRectIntoView(dom: HTMLElement, rect: Rect) {\n  let scrollThreshold = 0, scrollMargin = 5\n  let doc = dom.ownerDocument!, win = doc.defaultView!\n  let gutterCover = 0, prev = dom.previousSibling\n  if (prev && getComputedStyle(prev as HTMLElement).position == \"sticky\") gutterCover = dom.offsetLeft\n\n  for (let cur: any = dom.parentNode; cur;) {\n    if (cur.nodeType == 1) { // Element or document\n      let bounding: Rect, top = cur == document.body\n      if (top) {\n        bounding = windowRect(win)\n      } else {\n        if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n          cur = cur.parentNode\n          continue\n        }\n        let rect = cur.getBoundingClientRect()\n        bounding = {left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight}\n      }\n\n      let moveX = 0, moveY = 0\n      if (rect.top < bounding.top + scrollThreshold)\n        moveY = -(bounding.top - rect.top + scrollMargin)\n      else if (rect.bottom > bounding.bottom - scrollThreshold)\n        moveY = rect.bottom - bounding.bottom + scrollMargin\n      if (rect.left < bounding.left + gutterCover + scrollThreshold)\n        moveX = -(bounding.left + gutterCover - rect.left + scrollMargin)\n      else if (rect.right > bounding.right - scrollThreshold)\n        moveX = rect.right - bounding.right + scrollMargin\n      if (moveX || moveY) {\n        if (top) {\n          win.scrollBy(moveX, moveY)\n        } else {\n          if (moveY) cur.scrollTop += moveY\n          if (moveX) cur.scrollLeft += moveX\n          rect = {left: rect.left - moveX, top: rect.top - moveY,\n                  right: rect.right - moveX, bottom: rect.bottom - moveY} as ClientRect\n        }\n      }\n      if (top) break\n      cur = cur.parentNode\n    } else if (cur.nodeType == 11) { // A shadow root\n      cur = cur.host\n    } else {\n      break\n    }\n  }\n}\n\nexport class DOMSelection {\n  anchorNode: Node | null = null\n  anchorOffset: number = 0\n  focusNode: Node | null = null\n  focusOffset: number = 0\n\n  eq(domSel: Selection): boolean {\n    return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n      this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset\n  }\n\n  set(domSel: Selection) {\n    this.anchorNode = domSel.anchorNode; this.anchorOffset = domSel.anchorOffset\n    this.focusNode = domSel.focusNode; this.focusOffset = domSel.focusOffset\n  }\n}\n","import {Rect, maxOffset} from \"./dom\"\n\ndeclare global {\n  interface Node { cmView: ContentView | undefined; cmIgnore: boolean | undefined }\n}\n\nexport const enum dirty { not = 0, child = 1, node = 2 }\n\nconst none: any[] = []\n\nexport abstract class ContentView {\n  parent: ContentView | null = null\n  dom: Node | null = null\n  dirty: number = dirty.node\n  abstract length: number\n  abstract children: ContentView[]\n\n  get childGap() { return 0 }\n  get overrideDOMText(): ReadonlyArray<string> | null { return null }\n\n  get posAtStart(): number {\n    return this.parent ? this.parent.posBefore(this) : 0\n  }\n\n  get posAtEnd(): number {\n    return this.posAtStart + this.length\n  }\n\n  posBefore(view: ContentView): number {\n    let pos = this.posAtStart\n    for (let child of this.children) {\n      if (child == view) return pos\n      pos += child.length + this.childGap\n    }\n    throw new RangeError(\"Invalid child in posBefore\")\n  }\n\n  posAfter(view: ContentView): number {\n    return this.posBefore(view) + view.length\n  }\n\n  coordsAt(pos: number): Rect | null {\n    for (let off = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = off + child.length\n      if (end >= pos && (end != off || this.childGap)) return child.coordsAt(pos - off)\n      off = end + this.childGap\n    }\n    return null\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    return syncNodeInto(parent, pos, this.dom!)\n  }\n\n  syncDOMChildren() {\n    let parent = this.dom as HTMLElement, pos: Node | null = parent.firstChild\n    for (let view of this.children) pos = view.syncInto(parent, pos)\n    while (pos) pos = rm(pos)\n  }\n\n  sync() {\n    if (this.dirty & dirty.node)\n      this.syncDOMChildren()\n    if (this.dirty & dirty.child)\n      for (let child of this.children)\n        if (child.dirty) child.sync()\n    this.dirty = dirty.not\n  }\n\n  domFromPos(pos: number): {node: Node, offset: number} | null { return null }\n\n  localPosFromDOM(node: Node, offset: number): number {\n    let after: Node | null\n    if (node == this.dom) {\n      after = this.dom.childNodes[offset]\n    } else {\n      let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1\n      for (;;) {\n        let parent = node.parentNode!\n        if (parent == this.dom) break\n        if (bias == 0 && parent.firstChild != parent.lastChild) {\n          if (node == parent.firstChild) bias = -1\n          else bias = 1\n        }\n        node = parent\n      }\n      if (bias < 0) after = node\n      else after = node.nextSibling\n    }\n    if (after == this.dom.firstChild) return 0\n    while (after && !after.cmView) after = after.nextSibling\n    if (!after) return this.length\n\n    for (let i = 0, pos = 0;; i++) {\n      let child = this.children[i]\n      if (child.dom == after) return pos\n      pos += child.length + this.childGap\n    }\n  }\n\n  domBoundsAround(from: number, to: number, offset = 0): {startDOM: Node | null, endDOM: Node | null, from: number, to: number} | null {\n    let fromI = -1, fromStart = -1, toI = -1, toEnd = -1\n    for (let i = 0, pos = offset; i < this.children.length; i++) {\n      let child = this.children[i], end = pos + child.length\n      if (pos < from && end > to) return child.domBoundsAround(from, to, pos)\n      if (end >= from && fromI == -1) { fromI = i; fromStart = pos }\n      if (end >= to && toI == -1) { toI = i; toEnd = end; break }\n      pos = end + this.childGap\n    }\n    return {from: fromStart, to: toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom!.nextSibling : null) || this.dom!.firstChild,\n            endDOM: toI < this.children.length - 1 ? this.children[toI + 1].dom : null}\n  }\n\n  // FIXME track precise dirty ranges, to avoid full DOM sync on every touched node?\n  markDirty() {\n    if (this.dirty & dirty.node) return\n    this.dirty |= dirty.node\n    this.markParentsDirty()\n  }\n\n  markParentsDirty() {\n    for (let parent = this.parent; parent; parent = parent.parent) {\n      if (parent.dirty & dirty.child) return\n      parent.dirty |= dirty.child\n    }\n  }\n\n  setParent(parent: ContentView) {\n    if (this.parent != parent) {\n      this.parent = parent\n      if (this.dirty) this.markParentsDirty()\n    }\n  }\n\n  setDOM(dom: Node) {\n    this.dom = dom\n    dom.cmView = this\n  }\n\n  get rootView(): ContentView {\n    for (let v: ContentView = this;;) {\n      let parent = v.parent\n      if (!parent) return v\n      v = parent\n    }\n  }\n\n  replaceChildren(from: number, to: number, children: ContentView[] = none) {\n    this.markDirty()\n    for (let i = from; i < to; i++) this.children[i].parent = null\n    this.children.splice(from, to - from, ...children)\n    for (let i = 0; i < children.length; i++) children[i].setParent(this)\n  }\n\n  ignoreMutation(rec: MutationRecord): boolean { return false }\n  ignoreEvent(event: Event): boolean { return false }\n\n  childPos(pos: number, bias: number = 1): {i: number, off: number} {\n    return new ChildCursor(this.children, this.length, this.childGap).findPos(pos, bias)\n  }\n\n  toString() {\n    let name = this.constructor.name.replace(\"View\", \"\")\n    return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n                   this.length ? \"[\" + (name == \"Text\" ? (this as any).text : this.length) + \"]\" : \"\")\n  }\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom: Node): Node {\n  let next = dom.nextSibling\n  dom.parentNode!.removeChild(dom)\n  return next!\n}\n\nexport function syncNodeInto(parent: HTMLElement, pos: Node | null, dom: Node): Node | null {\n  if (dom.parentNode == parent) {\n    while (pos != dom) pos = rm(pos!)\n    pos = dom.nextSibling\n  } else {\n    parent.insertBefore(dom, pos)\n  }\n  return pos\n}\n\nexport class ChildCursor {\n  off: number = 0\n\n  constructor(public children: ContentView[], public pos: number,\n              public gap: number = 0, public i: number = children.length) {\n    this.pos += gap\n  }\n\n  findPos(pos: number, bias: number = 1): this {\n    for (;;) {\n      if (pos > this.pos || pos == this.pos && (bias > 0 || this.i == 0)) {\n        this.off = pos - this.pos\n        return this\n      }\n      this.pos -= this.children[--this.i].length + this.gap\n    }\n  }\n}\n","import {ChangeSet, Change, ChangedRange} from \"../../state/src\"\n\ntype A<T> = ReadonlyArray<T>\n\nexport interface RangeValue {\n  map(mapping: ChangeSet, from: number, to: number): Range<any> | null\n  bias: number\n  collapsed?: boolean\n}\n\nexport interface RangeComparator<T extends RangeValue> {\n  compareRange(from: number, to: number, activeA: T[], activeB: T[]): void\n  compareCollapsed(from: number, to: number, byA: T, byB: T): void\n  comparePoints(pos: number, pointsA: T[], pointsB: T[]): void\n}\n\nexport interface RangeIterator<T extends RangeValue> {\n  advance(pos: number, active: A<T>): void\n  advanceCollapsed(pos: number, value: T): void\n  point(value: T): void\n  ignoreRange(value: T): boolean\n  ignorePoint(value: T): boolean\n}\n\ninterface Heapable { heapPos: number; value: RangeValue }\n\nexport class Range<T extends RangeValue> {\n  constructor(\n    readonly from: number,\n    readonly to: number,\n    readonly value: T\n  ) {}\n\n  /** @internal */\n  map(changes: ChangeSet, oldOffset: number, newOffset: number): Range<T> | null {\n    let mapped = this.value.map(changes, this.from + oldOffset, this.to + oldOffset)\n    if (mapped) {\n      ;(mapped as any).from -= newOffset\n      ;(mapped as any).to -= newOffset\n    }\n    return mapped\n  }\n\n  /** @internal */\n  move(offset: number): Range<T> {\n    return offset ? new Range(this.from + offset, this.to + offset, this.value) : this\n  }\n\n  /** @internal Here so that we can put active ranges on a heap\n   * and take them off at their end */\n  get heapPos() { return this.to }\n}\n\nconst none: A<any> = []\n\nfunction maybeNone<T>(array: A<T>): A<T> { return array.length ? array : none }\n\nconst BASE_NODE_SIZE_SHIFT = 5, BASE_NODE_SIZE = 1 << BASE_NODE_SIZE_SHIFT\n\nexport type RangeFilter<T> = (from: number, to: number, value: T) => boolean\n\nexport class RangeSet<T extends RangeValue> {\n  // @internal\n  constructor(\n    // @internal The text length covered by this set\n    public length: number,\n    // The number of ranges in the set\n    public size: number,\n    // @internal The locally stored ranges—which are all of them\n    // for leaf nodes, and the ones that don't fit in child sets for\n    // non-leaves. Sorted by start position, then bias.\n    public local: A<Range<T>>,\n    // @internal The child sets, in position order. Their total\n    // length may be smaller than .length if the end is empty (never\n    // greater)\n    public children: A<RangeSet<T>>\n  ) {}\n\n  update(added: A<Range<T>> = none,\n         filter: RangeFilter<T> | null = null,\n         filterFrom: number = 0,\n         filterTo: number = this.length): RangeSet<T> {\n    let maxLen = added.reduce((l, d) => Math.max(l, d.to), this.length)\n    return this.updateInner(added.length ? added.slice().sort(byPos) : added,\n                            filter, filterFrom, filterTo, 0, maxLen)\n  }\n\n  /** @internal */\n  updateInner(added: A<Range<T>>,\n              filter: RangeFilter<T> | null,\n              filterFrom: number, filterTo: number,\n              offset: number, length: number): RangeSet<T> {\n    // The new local ranges. Null means no changes were made yet\n    let local: Range<T>[] | null = filterRanges<T>(this.local, filter, filterFrom, filterTo, offset)\n    // The new array of child sets, if changed\n    let children: RangeSet<T>[] | null = null\n\n    let size = 0\n    let decI = 0, pos = offset\n    // Iterate over the child sets, applying filters and pushing added\n    // ranges into them\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i]\n      let endPos = pos + child.length, localRanges: Range<T>[] | null = null\n      while (decI < added.length) {\n        let next = added[decI]\n        if (next.from >= endPos) break\n        decI++\n        if (next.to > endPos) {\n          if (!local) local = this.local.slice()\n          insertSorted(local, next.move(-offset))\n        } else {\n          (localRanges || (localRanges = [])).push(next)\n        }\n      }\n      let newChild = child\n      if (localRanges || filter && filterFrom <= endPos && filterTo >= pos)\n        newChild = newChild.updateInner(localRanges || none, filter, filterFrom, filterTo,\n                                        pos, newChild.length)\n      if (newChild != child)\n        (children || (children = this.children.slice(0, i))).push(newChild)\n      else if (children)\n        children.push(newChild)\n      size += newChild.size\n      pos = endPos\n    }\n\n    // If nothing was actually updated, return the existing object\n    if (!local && !children && decI == added.length) return this\n\n    // Compute final size\n    size += (local || this.local).length + added.length - decI\n\n    // This is a small node—turn it into a flat leaf\n    if (size <= BASE_NODE_SIZE)\n      return collapseSet(children || this.children, local || this.local.slice(),\n                         added, decI, offset, length)\n\n    let childSize = Math.max(BASE_NODE_SIZE, size >> BASE_NODE_SIZE_SHIFT)\n    if (decI < added.length) {\n      if (!children) children = this.children.slice()\n      if (!local) local = this.local.slice()\n      appendRanges<T>(local, children, added, decI, offset, length, pos, childSize)\n    }\n\n    if (children) {\n      if (!local) local = this.local.slice()\n      rebalanceChildren(local, children, childSize)\n    }\n\n    return new RangeSet<T>(length, size, maybeNone(local || this.local), maybeNone(children || this.children))\n  }\n\n  grow(length: number): RangeSet<T> {\n    return new RangeSet<T>(this.length + length, this.size, this.local, this.children)\n  }\n\n  // Collect all ranges in this set into the target array,\n  // offsetting them by `offset`\n  collect(target: Range<T>[], offset: number) {\n    for (let range of this.local) target.push(range.move(offset))\n    for (let child of this.children) {\n      child.collect(target, offset)\n      offset += child.length\n    }\n  }\n\n  map(changes: ChangeSet): RangeSet<T> {\n    if (changes.length == 0 || this == RangeSet.empty) return this\n    return this.mapInner(changes, 0, 0, changes.mapPos(this.length, 1)).set\n  }\n\n  // Child boundaries are always mapped forward. This may cause ranges\n  // at the start of a set to end up sticking out before its new\n  // start, if they map backward. Such ranges are returned in\n  // `escaped`.\n  private mapInner(changes: ChangeSet,\n                   oldStart: number, newStart: number,\n                   newEnd: number): {set: RangeSet<T>, escaped: Range<T>[] | null} {\n    let newLocal: Range<T>[] | null = null\n    let escaped: Range<T>[] | null = null\n    let newLength = newEnd - newStart, newSize = 0\n\n    for (let i = 0; i < this.local.length; i++) {\n      let range = this.local[i], mapped = range.map(changes, oldStart, newStart)\n      let escape = mapped != null && (mapped.from < 0 || mapped.to > newLength)\n      if (newLocal == null && (range != mapped || escape)) newLocal = this.local.slice(0, i)\n      if (escape) (escaped || (escaped = [])).push(mapped!)\n      else if (newLocal && mapped) newLocal.push(mapped)\n    }\n\n    let newChildren: RangeSet<T>[] | null = null\n    for (let i = 0, oldPos = oldStart, newPos = newStart; i < this.children.length; i++) {\n      let child = this.children[i], newChild = child\n      let oldChildEnd = oldPos + child.length\n      let newChildEnd = changes.mapPos(oldPos + child.length, 1)\n      let touch = touchesChanges(oldPos, oldChildEnd, changes.changes)\n      if (touch == touched.yes) {\n        let inner = child.mapInner(changes, oldPos, newPos, newChildEnd)\n        newChild = inner.set\n        if (inner.escaped) for (let range of inner.escaped) {\n          range = range.move(newPos - newStart)\n          if (range.from < 0 || range.to > newLength)\n            insertSorted(escaped || (escaped = []), range)\n          else\n            insertSorted(newLocal || (newLocal = this.local.slice()), range)\n        }\n      } else if (touch == touched.covered) {\n        newChild = RangeSet.empty.grow(newChildEnd - newPos)\n      }\n      if (newChild != child) {\n        if (newChildren == null) newChildren = this.children.slice(0, i)\n        // If the node's content was completely deleted by mapping,\n        // drop the node—which is complicated by the need to\n        // distribute its length to another child when it's not the\n        // last child\n        if (newChild.size == 0 && (newChild.length == 0 || newChildren.length || i == this.children.length)) {\n          if (newChild.length > 0 && i > 0) {\n            let last = newChildren.length - 1, lastChild = newChildren[last]\n            newChildren[last] = new RangeSet<T>(lastChild.length + newChild.length, lastChild.size, lastChild.local, lastChild.children)\n          }\n        } else {\n          newChildren.push(newChild)\n        }\n      } else if (newChildren) {\n        newChildren.push(newChild)\n      }\n      newSize += newChild.size\n      oldPos = oldChildEnd\n      newPos = newChildEnd\n    }\n\n    let set = newLength == this.length && newChildren == null && newLocal == null\n      ? this\n      : new RangeSet<T>(newLength, newSize + (newLocal || this.local).length,\n                        newLocal || this.local, newChildren || this.children)\n    return {set, escaped}\n  }\n\n  forEach(f: (from: number, to: number, value: T) => void) { this.forEachInner(f, 0) }\n\n  private forEachInner(f: (from: number, to: number, value: T) => void, offset: number) {\n    for (let range of this.local) f(range.from + offset, range.to + offset, range.value)\n    for (let child of this.children) { child.forEachInner(f, offset); offset += child.length }\n  }\n\n  iter(): {next: () => Range<T> | void} {\n    const heap: (Range<T> | LocalSet<T>)[] = []\n\n    if (this.size > 0) {\n      addIterToHeap(heap, [new IteratedSet(0, this)], 0)\n      if (this.local.length) addToHeap(heap, new LocalSet(0, this.local))\n    }\n\n    return {\n      next(): Range<T> | void {\n        if (heap.length == 0) return\n\n        const next = takeFromHeap(heap)\n        if (next instanceof LocalSet) {\n          const range = next.ranges[next.index].move(next.offset)\n\n          // Put the rest of the set back onto the heap\n          if (++next.index < next.ranges.length) addToHeap(heap, next)\n          else if (next.next) addIterToHeap(heap, next.next, 0)\n          return range\n        } else { // It is a range\n          return next\n        }\n      }\n    }\n  }\n\n  compare(other: RangeSet<T>, textDiff: A<ChangedRange>, comparator: RangeComparator<T>, oldLen: number) {\n    let oldPos = 0, newPos = 0\n    for (let range of textDiff) {\n      if (range.fromB > newPos && (this != other || oldPos != newPos))\n        new RangeSetComparison<T>(this, oldPos, other, newPos, range.fromB, comparator).run()\n      oldPos = range.toA\n      newPos = range.toB\n    }\n    if (oldPos < this.length || newPos < other.length || textDiff.length == 0)\n      new RangeSetComparison<T>(this, oldPos, other, newPos, newPos + (oldLen - oldPos), comparator).run()\n  }\n\n  static iterateSpans<T extends RangeValue>(sets: A<RangeSet<T>>, from: number, to: number, iterator: RangeIterator<T>) {\n    let heap: Heapable[] = []\n\n    for (let set of sets) if (set.size > 0) {\n      addIterToHeap(heap, [new IteratedSet(0, set)], from)\n      if (set.local.length) addToHeap(heap, new LocalSet(0, set.local))\n    }\n    let active: T[] = []\n\n    while (heap.length > 0) {\n      let next = takeFromHeap(heap)\n      if (next instanceof LocalSet) {\n        let range = next.ranges[next.index]\n        if (range.from + next.offset > to) break\n\n        if (range.to + next.offset >= from) {\n          if (range.from < range.to && !iterator.ignoreRange(range.value)) {\n            range = range.move(next.offset)\n\n            iterator.advance(range.from, active)\n            let collapsed = range.value.collapsed\n            if (collapsed) {\n              from = range.to\n              iterator.advanceCollapsed(Math.min(from, to), range.value)\n            } else {\n              active.push(range.value)\n              addToHeap(heap, range)\n            }\n          } else if (range.from == range.to && !iterator.ignorePoint(range.value)) {\n            iterator.advance(range.from, active)\n            iterator.point(range.value)\n          }\n        }\n        // Put the rest of the set back onto the heap\n        if (++next.index < next.ranges.length) addToHeap(heap, next)\n        else if (next.next) addIterToHeap(heap, next.next, from)\n      } else { // It is a range that ends here\n        let range = next as Range<T>\n          if (range.to >= to) break\n        iterator.advance(range.to, active)\n        active.splice(active.indexOf(range.value), 1)\n      }\n    }\n    iterator.advance(to, active)\n  }\n\n  static of<T extends RangeValue>(ranges: A<Range<T>> | Range<T>): RangeSet<T> {\n    return RangeSet.empty.update(ranges instanceof Range ? [ranges] : ranges)\n  }\n\n  static empty = new RangeSet<any>(0, 0, none, none)\n}\n\n// Stack element for iterating over a range set\nclass IteratedSet<T extends RangeValue> {\n  // Index == -1 means the set's locals have not been yielded yet.\n  // Otherwise this is an index in the set's child array.\n  index: number = 0\n  constructor(public offset: number,\n              public set: RangeSet<T>) {}\n}\n\n// Cursor into a node-local set of ranges\nclass LocalSet<T extends RangeValue> {\n  public index: number = 0\n  constructor(public offset: number,\n              public ranges: A<Range<T>>,\n              public next: IteratedSet<T>[] | null = null) {}\n\n  // Used to make this conform to Heapable\n  get heapPos(): number { return this.ranges[this.index].from + this.offset }\n  get value(): T { return this.ranges[this.index].value }\n}\n\nfunction iterRangeSet<T extends RangeValue>(stack: IteratedSet<T>[], skipTo: number = 0) {\n  for (;;) {\n    if (stack.length == 0) break\n    let top = stack[stack.length - 1]\n    if (top.index == top.set.children.length) {\n      stack.pop()\n    } else {\n      let next = top.set.children[top.index], start = top.offset\n      top.index++\n      top.offset += next.length\n      if (top.offset >= skipTo) {\n        stack.push(new IteratedSet(start, next))\n        break\n      }\n    }\n  }\n}\nfunction compareHeapable(a: Heapable, b: Heapable): number {\n  return a.heapPos - b.heapPos || a.value.bias - b.value.bias\n}\n\nfunction addIterToHeap<T extends RangeValue>(heap: Heapable[], stack: IteratedSet<T>[], skipTo: number = 0) {\n  for (;;) {\n    iterRangeSet<T>(stack, skipTo)\n    if (stack.length == 0) break\n    let next = stack[stack.length - 1], local = next.set.local\n    let leaf = next.set.children.length ? null : stack\n    if (local.length) addToHeap(heap, new LocalSet<T>(next.offset, local, leaf))\n    if (leaf) break\n  }\n}\n\nfunction addToHeap(heap: Heapable[], elt: Heapable) {\n  let index = heap.push(elt) - 1\n  while (index > 0) {\n    let parentIndex = index >> 1, parent = heap[parentIndex]\n    if (compareHeapable(elt, parent) >= 0) break\n    heap[index] = parent\n    heap[parentIndex] = elt\n    index = parentIndex\n  }\n}\n\nfunction takeFromHeap<T extends Heapable>(heap: T[]): T {\n  let elt = heap[0], replacement = heap.pop()!\n  if (heap.length == 0) return elt\n  heap[0] = replacement\n  for (let index = 0;;) {\n    let childIndex = (index << 1) + 1\n    if (childIndex >= heap.length) break\n    let child = heap[childIndex]\n    if (childIndex + 1 < heap.length && compareHeapable(child, heap[childIndex + 1]) >= 0) {\n      child = heap[childIndex + 1]\n      childIndex++\n    }\n    if (compareHeapable(replacement, child) < 0) break\n    heap[childIndex] = replacement\n    heap[index] = child\n    index = childIndex\n  }\n  return elt\n}\n\nfunction byPos(a: Range<RangeValue>, b: Range<RangeValue>): number {\n  return a.from - b.from || a.value.bias - b.value.bias\n}\n\nfunction insertSorted(target: Range<RangeValue>[], range: Range<RangeValue>) {\n  let i = target.length\n  while (i > 0 && byPos(target[i - 1], range) >= 0) i--\n  target.splice(i, 0, range)\n}\n\nfunction filterRanges<T extends RangeValue>(ranges: A<Range<T>>,\n                                            filter: RangeFilter<T> | null,\n                                            filterFrom: number, filterTo: number,\n                                            offset: number): Range<T>[] | null {\n  if (!filter) return null\n  let copy: Range<T>[] | null = null\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i], from = range.from + offset, to = range.to + offset\n    if (filterFrom > to || filterTo < from || filter(from, to, range.value)) {\n      if (copy != null) copy.push(range)\n    } else {\n      if (copy == null) copy = ranges.slice(0, i)\n    }\n  }\n  return copy\n}\n\nfunction collapseSet<T extends RangeValue>(\n  children: A<RangeSet<T>>, local: Range<T>[],\n  add: A<Range<T>>, start: number, offset: number, length: number\n): RangeSet<T> {\n  let mustSort = local.length > 0 && add.length > 0, off = 0\n  for (let child of children) {\n    child.collect(local, -off)\n    off += child.length\n  }\n  for (let added of add) local.push(added.move(-offset))\n  if (mustSort) local.sort(byPos)\n\n  return new RangeSet<T>(length, local.length, local, none)\n}\n\nfunction appendRanges<T extends RangeValue>(local: Range<T>[], children: RangeSet<T>[],\n                                            ranges: A<Range<T>>, start: number,\n                                            offset: number, length: number, pos: number, childSize: number) {\n  // Group added ranges after the current children into new\n  // children (will usually only happen when initially creating a\n  // node or adding stuff to the top-level node)\n  for (let i = start; i < ranges.length;) {\n    let add: Range<T>[] = []\n    let end = Math.min(i + childSize, ranges.length)\n    let endPos = end == ranges.length ? offset + length : ranges[end].from\n    for (; i < end; i++) {\n      let range = ranges[i]\n      if (range.to > endPos) insertSorted(local, range.move(-offset))\n      else add.push(range)\n    }\n    // Move locals that fit in this new child from `local` to `add`\n    for (let i = 0; i < local.length; i++) {\n      let range = local[i]\n      if (range.from >= pos && range.to <= endPos) {\n        local.splice(i--, 1)\n        insertSorted(add, range.move(offset))\n      }\n    }\n    if (add.length) {\n      if (add.length == ranges.length)\n        children.push(new RangeSet(endPos - pos, add.length, add.map(r => r.move(-pos)), none))\n      else\n        children.push(RangeSet.empty.updateInner(add, null, 0, 0, pos, endPos - pos))\n      pos = endPos\n    }\n  }\n}\n\n// FIXME try to clean this up\nfunction rebalanceChildren<T extends RangeValue>(local: Range<T>[], children: RangeSet<T>[], childSize: number) {\n  for (let i = 0, off = 0; i < children.length;) {\n    let child = children[i], next\n    if (child.size == 0 && (i > 0 || children.length == 1)) {\n      // Drop empty node\n      children.splice(i--, 1)\n      if (i >= 0) children[i] = children[i].grow(child.length)\n    } else if (child.size > (childSize << 1) && child.local.length < (child.length >> 1)) {\n      // Unwrap an overly big node\n      for (let range of child.local) insertSorted(local, range.move(off))\n      children.splice(i, 1, ...child.children)\n    } else if (child.children.length == 0 && i < children.length - 1 &&\n               (next = children[i + 1]).size + child.size <= BASE_NODE_SIZE &&\n               next.children.length == 0) {\n      // Join two small leaf nodes\n      children.splice(i, 2, new RangeSet<T>(child.length + next.length,\n                                            child.size + next.size,\n                                            child.local.concat(next.local.map(d => d.move(child.length))),\n                                            none))\n    } else {\n      // Join a number of nodes into a wrapper node\n      let joinTo = i + 1, size = child.size, length = child.length\n      if (child.size < (childSize >> 1)) {\n        for (; joinTo < children.length; joinTo++) {\n          let next = children[joinTo], totalSize = size + next.size\n          if (totalSize > childSize) break\n          size = totalSize\n          length += next.length\n        }\n      }\n      if (joinTo > i + 1) {\n        let joined = new RangeSet<T>(length, size, none, children.slice(i, joinTo))\n        let joinedLocals = []\n        for (let j = 0; j < local.length; j++) {\n          let range = local[j]\n          if (range.from >= off && range.to <= off + length) {\n            local.splice(j--, 1)\n            joinedLocals.push(range.move(-off))\n          }\n        }\n        if (joinedLocals.length) joined = joined.update(joinedLocals.sort(byPos))\n        children.splice(i, joinTo - i, joined)\n        i++\n        off += length\n      } else {\n        i++\n        off += child.length\n      }\n    }\n  }\n}\n\nconst SIDE_A = 1, SIDE_B = 2\n\nclass ComparisonSide<T extends RangeValue> {\n  heap: LocalSet<T>[] = []\n  active: T[] = []\n  activeTo: number[] = []\n  points: T[] = []\n  tip: LocalSet<T> | null = null\n  collapsedBy: T | null = null\n  collapsedTo: number = -1\n\n  constructor(readonly stack: IteratedSet<T>[]) {}\n\n  forward(start: number, next: IteratedSet<T>): boolean {\n    let newTip = false\n    if (next.set.local.length) {\n      let local = new LocalSet(next.offset, next.set.local)\n      addToHeap(this.heap, local)\n      if (!next.set.children.length) {\n        this.tip = local\n        newTip = true\n      }\n    }\n    iterRangeSet(this.stack, start)\n    return newTip\n  }\n\n  findActive(to: number, value: T): number {\n    for (let i = 0; i < this.active.length; i++)\n      if (this.activeTo[i] == to && this.active[i] == value) return i\n    return -1\n  }\n}\n\nclass RangeSetComparison<T extends RangeValue> {\n  a: ComparisonSide<T>\n  b: ComparisonSide<T>\n  pos: number\n  end: number\n\n  constructor(a: RangeSet<T>, startA: number,\n              b: RangeSet<T>, startB: number, endB: number,\n              private comparator: RangeComparator<T>) {\n    this.a = new ComparisonSide<T>([new IteratedSet<T>(startB - startA, a)])\n    this.b = new ComparisonSide<T>([new IteratedSet<T>(0, b)])\n    this.pos = startB\n    this.end = endB\n    this.forwardIter(SIDE_A | SIDE_B)\n  }\n\n  forwardIter(side: number) {\n    for (; side > 0;) {\n      let nextA = this.a.stack.length ? this.a.stack[this.a.stack.length - 1] : null\n      let nextB = this.b.stack.length ? this.b.stack[this.b.stack.length - 1] : null\n      if (nextA && nextB && nextA.offset == nextB.offset && nextA.set == nextB.set) {\n        iterRangeSet<T>(this.a.stack, this.pos)\n        iterRangeSet<T>(this.b.stack, this.pos)\n      } else if (nextA && (!nextB || (nextA.offset < nextB.offset ||\n                                      nextA.offset == nextB.offset && (this.a.stack.length == 1 ||\n                                                                       nextA.set.length >= nextB.set.length)))) {\n        if (this.a.forward(this.pos, nextA)) side = side & ~SIDE_A\n      } else if (nextB) {\n        if (this.b.forward(this.pos, nextB)) side = side & ~SIDE_B\n      } else {\n        break\n      }\n    }\n  }\n\n  run() {\n    let heapA = this.a.heap, heapB = this.b.heap\n    for (;;) {\n      if (heapA.length && (!heapB.length || compareHeapable(heapA[0], heapB[0]) < 0)) {\n        this.advance(this.a, this.b)\n      } else if (heapB.length) {\n        this.advance(this.b, this.a)\n      } else {\n        this.comparator.comparePoints(this.pos, this.a.points, this.b.points)\n        break\n      }\n    }\n  }\n\n  advancePos(pos: number) {\n    if (pos > this.end) pos = this.end\n    if (pos <= this.pos) return\n    this.handlePoints()\n    this.comparator.compareRange(this.pos, pos, this.a.active, this.b.active)\n    this.pos = pos\n  }\n\n  handlePoints() {\n    if (this.a.points.length || this.b.points.length) {\n      this.comparator.comparePoints(this.pos, this.a.points, this.b.points)\n      this.a.points.length = this.b.points.length = 0\n    }\n  }\n\n  advance(side: ComparisonSide<T>, otherSide: ComparisonSide<T>) {\n    let next = takeFromHeap(side.heap)!\n    if (next instanceof LocalSet) {\n      let range = next.ranges[next.index++]\n      if (range.from + next.offset > this.end) {\n        side.heap.length = 0\n        this.pos = this.end\n        return\n      }\n      if (range.from < range.to && range.to + next.offset > this.pos) {\n        this.advancePos(range.from + next.offset)\n        let collapsed = range.value.collapsed\n        if (collapsed) {\n          side.collapsedBy = range.value\n          side.collapsedTo = Math.max(side.collapsedTo, range.to + next.offset)\n          // Skip regions that are collapsed on both sides\n          let collapsedTo = Math.min(this.a.collapsedTo, this.b.collapsedTo)\n          if (collapsedTo > this.pos) {\n            this.handlePoints()\n            this.comparator.compareCollapsed(this.pos, collapsedTo, this.a.collapsedBy!, this.b.collapsedBy!)\n            this.pos = collapsedTo\n          }\n        }\n        this.addActiveRange(Math.min(this.end, range.to + next.offset), range.value, side, otherSide)\n      } else if (range.from == range.to) {\n        this.advancePos(range.from + next.offset)\n        let found = otherSide.points.indexOf(range.value)\n        if (found > -1) remove(otherSide.points, found)\n        else side.points.push(range.value)\n      }\n      if (next.index < next.ranges.length) addToHeap(side.heap, next)\n      else if (next == this.a.tip) this.forwardIter(SIDE_A)\n      else if (next == this.b.tip) this.forwardIter(SIDE_B)\n    } else {\n      let range = next as Range<T>\n      this.advancePos(range.to)\n      let found = side.findActive(range.to, range.value)\n      if (found > -1) { remove(side.active, found); remove(side.activeTo, found) }\n    }\n  }\n\n  addActiveRange(to: number, value: T, side: ComparisonSide<T>, otherSide: ComparisonSide<T>) {\n    let found = otherSide.findActive(to, value)\n    if (found > -1) {\n      remove(otherSide.active, found)\n      remove(otherSide.activeTo, found)\n    } else {\n      side.active.push(value)\n      side.activeTo.push(to)\n      addToHeap(side.heap, new Range(this.pos, to, value))\n    }\n  }\n}\n\nfunction remove<T>(array: T[], index: number) {\n  let last = array.pop()!\n  if (index != array.length) array[index] = last\n}\n\nconst enum touched {yes, no, covered}\n\nfunction touchesChanges(from: number, to: number, changes: A<Change>): touched {\n  let result = touched.no\n  for (let change of changes) {\n    if (change.to >= from && change.from <= to) {\n      if (change.from < from && change.to > to) result = touched.covered\n      else if (result == touched.no) result = touched.yes\n    }\n    let diff = change.length - (change.to - change.from)\n    if (from > change.from) from += diff\n    if (to > change.to) to += diff\n  }\n  return result\n}\n","export type Attrs = {[name: string]: string}\n\nexport function combineAttrs(source: Attrs, target: Attrs) {\n  for (let name in source) {\n    if (name == \"class\" && target.class) target.class += \" \" + source.class\n    else if (name == \"style\" && target.style) target.style += \";\" + source.style\n    else target[name] = source[name]\n  }\n  return target\n}\n\nexport function attrsEq(a: Attrs | null, b: Attrs | null): boolean {\n  if (a == b) return true\n  if (!a || !b) return false\n  let keysA = Object.keys(a), keysB = Object.keys(b)\n  if (keysA.length != keysB.length) return false\n  for (let key of keysA) {\n    if (keysB.indexOf(key) == -1 || a[key] !== b[key]) return false\n  }\n  return true\n}\n\nexport function updateAttrs(dom: HTMLElement, prev: Attrs | null, attrs: Attrs | null) {\n  if (prev) for (let name in prev) if (!(attrs && name in attrs)) dom.removeAttribute(name)\n  if (attrs) for (let name in attrs) if (!(prev && prev[name] == attrs[name])) dom.setAttribute(name, attrs[name])\n}\n","import {ChangeSet, ChangedRange} from \"../../state/src\"\nimport {RangeValue, Range, RangeSet, RangeComparator, RangeIterator} from \"../../rangeset/src/rangeset\"\nimport {Text} from \"../../doc/src/\"\nimport {attrsEq} from \"./attributes\"\n\nexport interface RangeDecorationSpec {\n  inclusiveStart?: boolean\n  inclusiveEnd?: boolean\n  attributes?: {[key: string]: string}\n  // Shorthand for {attributes: {class: value}}\n  class?: string\n  tagName?: string\n  collapsed?: boolean | WidgetType<any>\n}\n\nexport interface WidgetDecorationSpec {\n  widget: WidgetType<any>\n  side?: number\n}\n\nexport interface LineDecorationSpec {\n  attributes?: {[key: string]: string}\n  widget?: WidgetType<any>\n  side?: number\n}\n\nexport abstract class WidgetType<T> {\n  constructor(readonly value: T) {}\n  abstract toDOM(): HTMLElement;\n  eq(value: T): boolean { return this.value === value }\n\n  /** @internal */\n  compare(other: WidgetType<any>): boolean {\n    return this == other || this.constructor == other.constructor && this.eq(other.value)\n  }\n\n  get estimatedHeight(): number { return -1 }\n  ignoreEvent(event: Event): boolean { return true }\n}\n\nexport type DecorationSet = RangeSet<Decoration>\nexport type DecoratedRange = Range<Decoration>\n\nexport abstract class Decoration implements RangeValue {\n  // @internal\n  constructor(\n    // @internal\n    readonly bias: number,\n    // @internal\n    readonly widget: WidgetType<any> | null,\n    readonly spec: any) {}\n\n  abstract map(mapping: ChangeSet, from: number, to: number): DecoratedRange | null;\n\n  static range(from: number, to: number, spec: RangeDecorationSpec): DecoratedRange {\n    if (from >= to) throw new RangeError(\"Range decorations may not be empty\")\n    return new Range(from, to, new RangeDecoration(spec))\n  }\n\n  static widget(pos: number, spec: WidgetDecorationSpec): DecoratedRange {\n    return new Range(pos, pos, new WidgetDecoration(spec))\n  }\n\n  static line(pos: number, spec: LineDecorationSpec): DecoratedRange {\n    return new Range(pos, pos, new LineDecoration(spec))\n  }\n\n  static set(of: DecoratedRange | ReadonlyArray<DecoratedRange>): DecorationSet {\n    return RangeSet.of<Decoration>(of)\n  }\n\n  static none = RangeSet.empty as DecorationSet\n\n  // @internal\n  abstract sameEffect(other: Decoration): boolean\n}\n\nconst BIG_BIAS = 2e9\n\nexport class RangeDecoration extends Decoration {\n  readonly endBias: number\n  readonly collapsed: boolean\n\n  constructor(readonly spec: RangeDecorationSpec) {\n    super(spec.inclusiveStart === true ? -BIG_BIAS : BIG_BIAS,\n          spec.collapsed instanceof WidgetType ? spec.collapsed : null, spec)\n    this.endBias = spec.inclusiveEnd == true ? BIG_BIAS : -BIG_BIAS\n    this.collapsed = !!spec.collapsed\n  }\n\n  map(mapping: ChangeSet, from: number, to: number): DecoratedRange | null {\n    let newFrom = mapping.mapPos(from, this.bias, true), newTo = mapping.mapPos(to, this.endBias, true)\n    if (newFrom < 0) {\n      if (newTo < 0) return null\n      newFrom = this.bias >= 0 ? -(newFrom + 1) : mapping.mapPos(from, 1)\n    } else if (newTo < 0) {\n      newTo = this.endBias < 0 ? -(newTo + 1) : mapping.mapPos(to, -1)\n    }\n    return newFrom < newTo ? new Range(newFrom, newTo, this) : null\n  }\n\n  sameEffect(other: RangeDecoration): boolean {\n    return this == other ||\n      this.spec.tagName == other.spec.tagName &&\n      this.spec.class == other.spec.class &&\n      this.collapsed == other.collapsed &&\n      widgetsEq(this.widget, other.widget) &&\n      attrsEq(this.spec.attributes || null, other.spec.attributes || null)\n  }\n}\n\nexport class WidgetDecoration extends Decoration {\n  widget!: WidgetType<any>\n\n  constructor(readonly spec: WidgetDecorationSpec) {\n    super(spec.side || 0, spec.widget || null, spec)\n  }\n\n  map(mapping: ChangeSet, pos: number): DecoratedRange | null {\n    pos = mapping.mapPos(pos, this.bias, true)\n    return pos < 0 ? null : new Range(pos, pos, this)\n  }\n\n  sameEffect(other: Decoration): boolean {\n    return other instanceof WidgetDecoration && widgetsEq(this.widget, other.widget) && this.bias == other.bias\n  }\n}\n\nexport class LineDecoration extends Decoration {\n  constructor(spec: LineDecorationSpec) {\n    super(-BIG_BIAS, spec.widget || null, spec)\n  }\n\n  map(mapping: ChangeSet, pos: number): DecoratedRange | null {\n    for (let change of mapping.changes) {\n      // If the line break before was deleted, drop this decoration\n      if (change.from <= pos - 1 && change.to >= pos) return null\n      if (change.from < pos) pos += change.length - (change.to - change.from)\n    }\n    return new Range(pos, pos, this)\n  }\n\n  sameEffect(other: Decoration): boolean {\n    return other instanceof LineDecoration &&\n      attrsEq(this.spec.attributes, other.spec.attributes) &&\n      widgetsEq(this.widget, other.widget) &&\n      this.side == other.side\n  }\n\n  get side() { return this.spec.side || 0 }\n}\n\nexport function widgetsEq(a: WidgetType<any> | null, b: WidgetType<any> | null): boolean {\n  return a == b || !!(a && b && a.compare(b))\n}\n\nfunction compareSets(setA: Decoration[], setB: Decoration[]): boolean {\n  if (setA.length != setB.length) return false\n  search: for (let value of setA) {\n    for (let valueB of setB) if (value.sameEffect(valueB)) continue search\n    return false\n  }\n  return true\n}\n\nconst MIN_RANGE_GAP = 4\n\nfunction addRange(from: number, to: number, ranges: number[]) {\n  if (ranges[ranges.length - 1] + MIN_RANGE_GAP > from) ranges[ranges.length - 1] = to\n  else ranges.push(from, to)\n}\n\nexport function joinRanges(a: number[], b: number[]): number[] {\n  if (a.length == 0) return b\n  if (b.length == 0) return a\n  let result: number[] = []\n  for (let iA = 0, iB = 0;;) {\n    if (iA < a.length && (iB == b.length || a[iA] < b[iB]))\n      addRange(a[iA++], a[iA++], result)\n    else if (iB < b.length)\n      addRange(b[iB++], b[iB++], result)\n    else\n      break\n  }\n  return result\n}\n\nclass Changes {\n  content: number[] = []\n  height: number[] = []\n}\n\nclass DecorationComparator implements RangeComparator<Decoration> {\n  changes: Changes = new Changes\n  constructor() {}\n\n  compareRange(from: number, to: number, activeA: Decoration[], activeB: Decoration[]) {\n    if (!compareSets(activeA, activeB))\n      addRange(from, to, this.changes.content)\n  }\n\n  compareCollapsed(from: number, to: number, byA: Decoration, byB: Decoration) {\n    if (!widgetsEq(byA.widget, byB.widget)) {\n      addRange(from, to, this.changes.content)\n      addRange(from, to, this.changes.height)\n    }\n  }\n\n  comparePoints(pos: number, pointsA: Decoration[], pointsB: Decoration[]) {\n    if (!compareSets(pointsA, pointsB)) {\n      addRange(pos, pos, this.changes.content)\n      if (pointsA.some(d => !!(d.widget && d.widget.estimatedHeight > -1)) ||\n          pointsB.some(d => !!(d.widget && d.widget.estimatedHeight > -1)))\n        addRange(pos, pos, this.changes.height)\n    }\n  }\n}\n\nexport function findChangedRanges(a: DecorationSet, b: DecorationSet, diff: ReadonlyArray<ChangedRange>, docA: Text): Changes {\n  let comp = new DecorationComparator()\n  a.compare(b, diff, comp, docA.length)\n  return comp.changes\n}\n\nclass HeightDecoScanner implements RangeIterator<Decoration> {\n  ranges: number[] = []\n  pos: number = 0\n\n  advance(pos: number, active: ReadonlyArray<Decoration>) { this.pos = pos }\n  advanceCollapsed(pos: number) { addRange(this.pos, pos, this.ranges); this.pos = pos }\n  point(value: Decoration) { addRange(this.pos, this.pos, this.ranges) }\n  ignoreRange(value: Decoration) { return true }\n  ignorePoint(value: Decoration) { return !value.widget }\n}\n\nexport function heightRelevantDecorations(decorations: ReadonlyArray<DecorationSet>, ranges: ReadonlyArray<ChangedRange>): number[] {\n  let scanner = new HeightDecoScanner\n  for (let {fromB, toB} of ranges) if (fromB < toB) {\n    scanner.pos = fromB\n    RangeSet.iterateSpans(decorations, fromB, toB, scanner)\n  }\n  return scanner.ranges\n}\n","import {ContentView, dirty} from \"./contentview\"\nimport {WidgetType, widgetsEq} from \"./decoration\"\nimport {attrsEq} from \"./attributes\"\nimport {LineView} from \"./lineview\"\nimport {Text} from \"../../doc/src\"\nimport {Rect} from \"./dom\"\nimport browser from \"./browser\"\n\nconst none: any[] = []\n\nexport abstract class InlineView extends ContentView {\n  merge(other: InlineView, from?: number, to?: number) { return false }\n  match(other: InlineView) { return false }\n  get children() { return none }\n  abstract cut(from: number, to?: number): void\n  abstract slice(from: number, to?: number): InlineView\n  getSide() { return 0 }\n\n  static appendInline(a: InlineView[], b: InlineView[]): InlineView[] {\n    let i = 0\n    if (b.length && a.length) {\n      let last = a[a.length - 1]\n      if (last.merge(b[0], last.length)) i++\n    }\n    for (; i < b.length; i++) a.push(b[i])\n    return a\n  }\n}\n\nconst MAX_JOIN_LEN = 256\n\nexport class TextView extends InlineView {\n  textDOM: Node | null = null;\n  class: string | null;\n\n  constructor(public text: string,\n              public tagName: string | null,\n              clss: string | null,\n              public attrs: {[key: string]: string} | null) {\n    super()\n    this.class = clss\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    if (!this.dom) {\n      let tagName = this.tagName || (this.attrs || this.class ? \"span\" : null)\n      if (!tagName && pos && pos.nodeType == 3 && !nodeAlreadyInTree(this, pos)) this.textDOM = pos\n      else this.textDOM = document.createTextNode(this.text)\n      if (tagName) {\n        let dom = document.createElement(tagName)\n        dom.appendChild(this.textDOM)\n        if (this.class) dom.className = this.class\n        if (this.attrs) for (let name in this.attrs) dom.setAttribute(name, this.attrs[name])\n        this.setDOM(dom)\n      } else {\n        this.setDOM(this.textDOM)\n      }\n    }\n    return super.syncInto(parent, pos)\n  }\n\n  get length() { return this.text.length }\n\n  sync() {\n    if (this.dirty & dirty.node) {\n      if (this.textDOM!.nodeValue != this.text) this.textDOM!.nodeValue = this.text\n      let dom = this.dom!\n      if (this.textDOM != dom && (this.dom!.firstChild != this.textDOM || dom.lastChild != this.textDOM)) {\n        while (dom.firstChild) dom.removeChild(dom.firstChild)\n        dom.appendChild(this.textDOM!)\n      }\n    }\n    this.dirty = dirty.not\n  }\n\n  merge(other: InlineView, from: number = 0, to: number = this.length): boolean {\n    if (!(other instanceof TextView) ||\n        other.tagName != this.tagName || other.class != this.class ||\n        !attrsEq(other.attrs, this.attrs) || this.length - (to - from) + other.length > MAX_JOIN_LEN)\n      return false\n    this.text = this.text.slice(0, from) + other.text + this.text.slice(to)\n    this.markDirty()\n    return true\n  }\n\n  cut(from: number, to: number = this.length) {\n    this.text = this.text.slice(0, from) + this.text.slice(to)\n    this.markDirty()\n  }\n\n  slice(from: number, to: number = this.length) {\n    return new TextView(this.text.slice(from, to), this.tagName, this.class, this.attrs)\n  }\n\n  localPosFromDOM(node: Node, offset: number): number {\n    return node == this.textDOM ? offset : offset ? this.text.length : 0\n  }\n\n  domFromPos(pos: number) { return {node: this.textDOM!, offset: pos} }\n\n  domBoundsAround(from: number, to: number, offset: number) {\n    return {from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom!.nextSibling}\n  }\n\n  coordsAt(pos: number): Rect { return textCoords(this.textDOM!, pos) }\n\n  toCompositionView() {\n    let parent = this.parent!, view = new CompositionView(this.dom!, this.textDOM!, this.length)\n    this.markParentsDirty()\n    let parentIndex = parent.children.indexOf(this)\n    parent.children[parentIndex] = view\n    view.setParent(parent)\n    return view\n  }\n}\n\nfunction textCoords(text: Node, pos: number): Rect {\n  let range = document.createRange()\n  if (browser.chrome || browser.gecko) {\n    // These browsers reliably return valid rectangles for empty ranges\n    range.setEnd(text, pos)\n    range.setStart(text, pos)\n    return range.getBoundingClientRect()\n  } else {\n    // Otherwise, get the rectangle around a character and take one side\n    let extend = pos == 0 ? 1 : -1\n    range.setEnd(text, pos + (extend > 0 ? 1 : 0))\n    range.setStart(text, pos - (extend < 0 ? 1 : 0))\n    let rect = range.getBoundingClientRect()\n    let x = extend < 0 ? rect.right : rect.left\n    return {left: x, right: x, top: rect.top, bottom: rect.bottom}\n  }\n}\n\n// Also used for collapsed ranges that don't have a placeholder widget!\nexport class WidgetView extends InlineView {\n  dom!: HTMLElement | null\n\n  constructor(public length: number, readonly widget: WidgetType<any> | null, readonly side: number) {\n    super()\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    if (!this.dom) {\n      this.setDOM(this.widget ? this.widget.toDOM() : document.createElement(\"span\"))\n      this.dom!.contentEditable = \"false\"\n    }\n    return super.syncInto(parent, pos)\n  }\n\n  cut(from: number, to: number = this.length) { this.length -= to - from }\n  slice(from: number, to: number = this.length) { return new WidgetView(to - from, this.widget, this.side) }\n\n  sync() { this.dirty = dirty.not }\n\n  getSide() { return this.side }\n\n  merge(other: InlineView, from: number = 0, to: number = this.length): boolean {\n    if (!(other instanceof WidgetView) || this.widget || other.widget) return false\n    this.length = from + other.length + (this.length - to)\n    return true\n  }\n\n  match(other: InlineView): boolean {\n    return other.length == this.length && other instanceof WidgetView &&\n      widgetsEq(this.widget, other.widget)\n  }\n\n  ignoreMutation(): boolean { return true }\n  ignoreEvent(event: Event): boolean { return this.widget ? this.widget.ignoreEvent(event) : false }\n\n  get overrideDOMText() {\n    if (this.length == 0) return [\"\"]\n    let top: ContentView = this\n    while (top.parent) top = top.parent\n    let state = (top as any).state, text: Text | undefined = state && state.doc, start = this.posAtStart\n    return text ? text.sliceLines(start, start + this.length) : [\"\"]\n  }\n\n  domBoundsAround() { return null }\n\n  coordsAt(pos: number): Rect | null {\n    let rects = this.dom!.getClientRects()\n    for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n      let rect = rects[i]\n      if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom) return rects[i]\n    }\n    return null\n  }\n}\n\nexport class CompositionView extends InlineView {\n  constructor(dom: Node, public textDOM: Node, public length: number) {\n    super()\n    this.setDOM(dom)\n  }\n\n  updateLength(newLen: number) {\n    if (this.parent) (this.parent as LineView).length += newLen - this.length\n    this.length = newLen\n  }\n\n  cut(from: number, to: number = this.length) {\n    if (from != to || from > 0 && from < this.length)\n      throw new Error(\"bug: Cutting a composition node\")\n  }\n\n  slice(from: number, to: number = this.length): InlineView {\n    throw new Error(\"bug: Called slice on a composition node\")\n  }\n\n  sync() {}\n\n  localPosFromDOM(node: Node, offset: number): number {\n    return node == this.textDOM ? offset : offset ? this.length : 0\n  }\n\n  domFromPos(pos: number) { return {node: this.textDOM!, offset: pos} }\n\n  domBoundsAround(from: number, to: number, offset: number) {\n    return {from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom!.nextSibling}\n  }\n\n  coordsAt(pos: number): Rect { return textCoords(this.textDOM, pos) }\n}\n\nfunction nodeAlreadyInTree(view: ContentView, node: Node): boolean {\n  let v = node.cmView\n  return v ? v.rootView == view.rootView : false\n}\n","import {ContentView, ChildCursor, syncNodeInto} from \"./contentview\"\nimport {InlineView, TextView, CompositionView} from \"./inlineview\"\nimport {clientRectsFor, Rect, domIndex} from \"./dom\"\nimport {WidgetType, LineDecoration} from \"./decoration\"\nimport {combineAttrs, attrsEq, updateAttrs} from \"./attributes\"\n\nexport class LineView extends ContentView {\n  children: InlineView[] = []\n  widgets: LineWidget[] = none\n  length: number = 0\n  dom!: HTMLElement | null\n  prevAttrs: {[name: string]: string} | null | undefined = undefined\n  attrs: {[name: string]: string} | null = null\n\n  // Consumes source\n  merge(from: number, to: number = this.length, source: LineView, takeDeco: boolean, composition: CompositionView | null) {\n    if (takeDeco) this.setDeco(source)\n    if (!this.dom) source.transferDOM(this) // Reuse source.dom when appropriate\n\n    let elts = source.children\n    let cur = new ChildCursor(this.children, this.length)\n    let {i: toI, off: toOff} = cur.findPos(to, 1)\n    let {i: fromI, off: fromOff} = cur.findPos(from, -1)\n    let dLen = from - to\n    for (let view of elts) dLen += view.length\n    this.length += dLen\n\n    // Both from and to point into the same text view\n    if (fromI == toI && fromOff) {\n      let start = this.children[fromI]\n      // Maybe just update that view and be done\n      if (elts.length == 1 && start.merge(elts[0], fromOff, toOff)) return\n      if (elts.length == 0) return start.cut(fromOff, toOff)\n      // Otherwise split it, so that we don't have to worry about aliasting front/end afterwards\n      InlineView.appendInline(elts, [start.slice(toOff)])\n      toI++\n      toOff = 0\n    }\n\n    // Make sure start and end positions fall on node boundaries\n    // (fromOff/toOff are no longer used after this), and that if the\n    // start or end of the elts can be merged with adjacent nodes,\n    // this is done\n    if (toOff) {\n      let end = this.children[toI]\n      if (elts.length && end.merge(elts[elts.length - 1], 0, toOff)) elts.pop()\n      else end.cut(0, toOff)\n    } else if (toI < this.children.length && elts.length &&\n               this.children[toI].merge(elts[elts.length - 1], 0, 0)) {\n      elts.pop()\n    }\n    if (fromOff) {\n      let start = this.children[fromI]\n      if (elts.length && start.merge(elts[0], fromOff)) elts.shift()\n      else start.cut(fromOff)\n      fromI++\n    } else if (fromI && elts.length && this.children[fromI - 1].merge(elts[0], this.children[fromI - 1].length)) {\n      elts.shift()\n    }\n\n    // Then try to merge any mergeable nodes at the start and end of\n    // the changed range\n    while (fromI < toI && elts.length && this.children[toI - 1].match(elts[elts.length - 1])) {\n      elts.pop()\n      toI--\n    }\n    while (fromI < toI && elts.length && this.children[fromI].match(elts[0])) {\n      elts.shift()\n      fromI++\n    }\n\n    if (composition && fromI < toI) {\n      // If there's a zero-length composition on the edge of the update, don't overwrite it\n      if (this.children[toI - 1] instanceof CompositionView && this.children[toI - 1].length == 0) toI--\n      else if (this.children[fromI] instanceof CompositionView && this.children[fromI].length == 0) fromI++\n    }\n\n    // And if anything remains, splice the child array to insert the new elts\n    if (elts.length || fromI != toI) this.replaceChildren(fromI, toI, elts)\n  }\n\n  split(at: number) {\n    let end = new LineView\n    if (this.length == 0) return end\n    let {i, off} = new ChildCursor(this.children, this.length).findPos(at)\n    if (off) {\n      end.append(this.children[i].slice(off))\n      this.children[i].cut(off)\n      i++\n    }\n    for (let j = i; j < this.children.length; j++) end.append(this.children[j])\n    this.children.length = i\n    this.markDirty()\n    this.length = at\n    return end\n  }\n\n  transferDOM(other: LineView) {\n    if (!this.dom) return\n    other.setDOM(this.dom)\n    other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs\n    this.prevAttrs = undefined\n    this.dom = null\n  }\n\n  setDeco(source: LineView) {\n    if (!attrsEq(this.attrs, source.attrs)) {\n      if (this.dom) {\n        this.prevAttrs = this.attrs\n        this.markDirty()\n      }\n      this.attrs = source.attrs\n    }\n    // Reconcile the new widgets with the existing ones\n    for (let i = 0, j = 0;;) {\n      let a = i == this.widgets.length ? null : this.widgets[i]\n      let b = j == source.widgets.length ? null : source.widgets[j]\n      if (!a && !b) break\n      if (a && b && a.eq(b)) {\n        i++; j++\n      } else if (!a || (b && b.side <= a.side)) {\n        if (this.widgets == none) this.widgets = []\n        this.widgets.splice(i++, 0, b!.finish())\n        this.parent!.markDirty()\n        j++\n      } else {\n        this.widgets.splice(i, 1)\n        this.parent!.markDirty()\n      }\n    }\n  }\n\n  // Only called when building a line view in ContentBuilder\n  append(child: InlineView) {\n    this.children.push(child)\n    child.setParent(this)\n    this.length += child.length\n  }\n\n  // Only called when building a line view in ContentBuilder\n  addLineDeco(deco: LineDecoration) {\n    let attrs = deco.spec.attributes\n    if (attrs)\n      this.attrs = combineAttrs(attrs, this.attrs || {})\n    if (deco.widget) {\n      if (this.widgets == none) this.widgets = []\n      let pos = 0\n      while (pos < this.widgets.length && this.widgets[pos].side <= deco.side) pos++\n      this.widgets.splice(pos, 0, new LineWidget(deco.widget, deco.side))\n    }\n  }\n\n  domFromPos(pos: number): {node: Node, offset: number} {\n    let {i, off} = new ChildCursor(this.children, this.length).findPos(pos)\n    if (off) {\n      let textDOM: Node | null = (this.children[i] as any).textDOM\n      if (textDOM) return {node: textDOM, offset: off}\n    }\n    while (i > 0 && (this.children[i - 1].getSide() > 0 || this.children[i - 1].dom!.parentNode != this.dom)) i--\n    return {node: this.dom!, offset: i ? domIndex(this.children[i - 1].dom!) + 1 : 0}\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    if (!this.dom) {\n      this.setDOM(document.createElement(\"div\"))\n      this.dom!.className = \"codemirror-line\"\n      if (this.attrs) this.prevAttrs = null\n      for (let w of this.widgets) if (!w.dom) w.finish()\n    }\n    for (let i = 0, main = false;; i++) {\n      let widget = i == this.widgets.length ? null : this.widgets[i]\n      if (!main && (!widget || widget.side > 0)) {\n        main = true\n        pos = syncNodeInto(parent, pos, this.dom!)\n      }\n      if (!widget) break\n      pos = syncNodeInto(parent, pos, widget.dom!)\n    }\n    return pos\n  }\n\n  // FIXME might need another hack to work around Firefox's behavior\n  // of not actually displaying the cursor even though it's there in\n  // the DOM\n  sync() {\n    super.sync()\n    if (this.prevAttrs !== undefined) {\n      updateAttrs(this.dom!, this.prevAttrs, this.attrs)\n      this.dom!.classList.add(\"codemirror-line\")\n      this.prevAttrs = undefined\n    }\n    let last = this.dom!.lastChild\n    if (!last || last.nodeName == \"BR\") {\n      let hack = document.createElement(\"BR\")\n      hack.cmIgnore = true\n      this.dom!.appendChild(hack)\n    }\n  }\n\n  measureTextSize(): {lineHeight: number, charWidth: number} | null {\n    if (this.children.length == 0 || this.length > 20) return null\n    let totalWidth = 0\n    for (let child of this.children) {\n      if (!(child instanceof TextView)) return null\n      let rects = clientRectsFor(child.dom!)\n      if (rects.length != 1) return null\n      totalWidth += rects[0].width\n    }\n    return {lineHeight: this.dom!.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length}\n  }\n\n  coordsAt(pos: number): Rect | null {\n    if (this.length == 0) return (this.dom!.lastChild as HTMLElement).getBoundingClientRect()\n    return super.coordsAt(pos)\n  }\n\n  // Ignore mutations in line widgets\n  ignoreMutation(rec: MutationRecord): boolean {\n    return !this.dom!.contains(rec.target.nodeType == 1 ? rec.target : rec.target.parentNode!)\n  }\n\n  // Find the appropriate widget, and ask it whether an event needs to be ignored\n  ignoreEvent(event: Event): boolean {\n    if (this.widgets.length == 0 || this.dom!.contains(event.target as Node)) return false\n    for (let widget of this.widgets)\n      if (widget.dom!.contains(event.target as Node))\n        return widget.widget.ignoreEvent(event)\n    return true\n  }\n\n  createCompositionViewAround(textNode: Node): CompositionView {\n    let dom = textNode\n    while (dom.parentNode != this.dom) dom = dom.parentNode!\n    let prev = dom.previousSibling, index = 0\n    while (prev) {\n      let found = this.children.indexOf(prev.cmView as any)\n      if (found > -1) { index = found + 1; break }\n      prev = prev.previousSibling\n    }\n    let view = new CompositionView(dom, textNode, 0)\n    this.replaceChildren(index, index, [view])\n    return view\n  }\n}\n\nexport class LineWidget {\n  dom: HTMLElement | null = null\n  constructor(readonly widget: WidgetType<any>, readonly side: number) {}\n  eq(other: LineWidget) {\n    return this.widget.compare(other.widget) && this.side == other.side\n  }\n  finish() {\n    this.dom = this.widget.toDOM()\n    this.dom.cmIgnore = true\n    return this\n  }\n}\n\nconst none: any[] = []\n","import {RangeIterator, RangeSet} from \"../../rangeset/src/rangeset\"\nimport {DecorationSet, Decoration, RangeDecoration, WidgetDecoration, LineDecoration} from \"./decoration\"\nimport {LineView} from \"./lineview\"\nimport {WidgetView, TextView} from \"./inlineview\"\nimport {Text, TextIterator} from \"../../doc/src\"\n\nexport class ContentBuilder implements RangeIterator<Decoration> {\n  lines: LineView[]\n  cursor: TextIterator\n  text: string = \"\"\n  skip: number\n  textOff: number = 0\n  lineStart: boolean\n\n  constructor(text: Text, public pos: number) {\n    this.cursor = text.iter()\n    this.skip = pos\n    this.lines = [new LineView]\n    this.lineStart = text.lineAt(pos).start == pos\n  }\n\n  buildText(length: number, tagName: string | null, clss: string | null, attrs: {[key: string]: string} | null,\n            ranges: Decoration[]) {\n    while (length > 0) {\n      if (this.textOff == this.text.length) {\n        let {value, lineBreak, done} = this.cursor.next(this.skip)\n        this.skip = 0\n        if (done) throw new Error(\"Ran out of text content when drawing inline views\")\n        if (lineBreak) {\n          this.lines.push(new LineView)\n          this.lineStart = true\n          length--\n          continue\n        } else {\n          this.text = value\n          this.textOff = 0\n        }\n      }\n      let take = Math.min(this.text.length - this.textOff, length)\n      this.curLine.append(new TextView(this.text.slice(this.textOff, this.textOff + take), tagName, clss, attrs))\n      this.lineStart = false\n      length -= take\n      this.textOff += take\n    }\n  }\n\n  advance(pos: number, active: Decoration[]) {\n    if (pos <= this.pos) return\n\n    let tagName = null, clss = null\n    let attrs: {[key: string]: string} | null = null\n    for (let {spec} of active as RangeDecoration[]) {\n      if (spec.tagName) tagName = spec.tagName\n      if (spec.class) clss = clss ? clss + \" \" + spec.class : spec.class\n      if (spec.attributes) for (let name in spec.attributes) {\n        let value = spec.attributes[name]\n        if (value == null) continue\n        if (name == \"class\") {\n          clss = clss ? clss + \" \" + value : value\n        } else {\n          if (!attrs) attrs = {}\n          if (name == \"style\" && attrs.style) value = attrs.style + \";\" + value\n          attrs[name] = value\n        }\n      }\n    }\n\n    this.buildText(pos - this.pos, tagName, clss, attrs, active)\n    this.pos = pos\n  }\n\n  advanceCollapsed(pos: number, deco: Decoration) {\n    if (pos <= this.pos) return\n\n    let line = this.curLine\n    let widgetView = new WidgetView(pos - this.pos, deco.widget, 0)\n    if (line.children.length && line.children[line.children.length - 1].merge(widgetView))\n      line.length += widgetView.length\n    else\n      line.append(widgetView)\n    if (widgetView.length) this.lineStart = false\n\n    // Advance the iterator past the collapsed content\n    let length = pos - this.pos\n    if (this.textOff + length <= this.text.length) {\n      this.textOff += length\n    } else {\n      this.skip += length - (this.text.length - this.textOff)\n      this.text = \"\"\n      this.textOff = 0\n    }\n\n    this.pos = pos\n  }\n\n  point(deco: Decoration) {\n    if (deco instanceof WidgetDecoration)\n      this.curLine.append(new WidgetView(0, deco.widget, deco.bias))\n    else if (this.lineStart)\n      this.curLine.addLineDeco(deco as LineDecoration)\n  }\n\n  get curLine() { return this.lines[this.lines.length - 1] }\n\n  ignoreRange(deco: RangeDecoration): boolean { return false }\n  ignorePoint(deco: Decoration): boolean { return false }\n\n  static build(text: Text, from: number, to: number, decorations: ReadonlyArray<DecorationSet>): LineView[] {\n    let builder = new ContentBuilder(text, from)\n    RangeSet.iterateSpans(decorations, from, to, builder)\n    return builder.lines\n  }\n}\n","import {Text} from \"../../doc/src\"\nimport {HeightMap} from \"./heightmap\"\n\nfunction visiblePixelRange(dom: HTMLElement, paddingTop: number): {top: number, bottom: number} {\n  let rect = dom.getBoundingClientRect()\n  let top = Math.max(0, Math.min(innerHeight, rect.top)), bottom = Math.max(0, Math.min(innerHeight, rect.bottom))\n  for (let parent = dom.parentNode as any; parent;) { // (Cast to any because TypeScript is useless with Node types)\n    if (parent.nodeType == 1) {\n      if (parent.scrollHeight > parent.clientHeight) {\n        let parentRect = parent.getBoundingClientRect()\n        top = Math.min(parentRect.bottom, Math.max(parentRect.top, top))\n        bottom = Math.min(parentRect.bottom, Math.max(parentRect.top, bottom))\n      }\n      parent = parent.parentNode\n    } else if (parent.nodeType == 11) { // Shadow root\n      parent = parent.host\n    } else {\n      break\n    }\n  }\n  return {top: top - (rect.top + paddingTop), bottom: bottom - (rect.top + paddingTop)}\n}\n\nconst VIEWPORT_MARGIN = 1000 // FIXME look into appropriate value of this through benchmarking etc\nconst MIN_COVER_MARGIN = 10  // coveredBy requires at least this many extra pixels to be covered\nconst MAX_COVER_MARGIN = VIEWPORT_MARGIN / 4\n\nexport class ViewportState {\n  top: number = 0;\n  bottom: number = 0;\n\n  updateFromDOM(dom: HTMLElement, paddingTop: number): number {\n    let {top, bottom} = visiblePixelRange(dom, paddingTop)\n    let dTop = top - this.top, dBottom = bottom - this.bottom, bias = 0\n    if (dTop > 0 && dBottom > 0) bias = Math.max(dTop, dBottom)\n    else if (dTop < 0 && dBottom < 0) bias = Math.min(dTop, dBottom)\n    this.top = top; this.bottom = bottom\n    return bias\n  }\n\n  coverEverything() {\n    this.top = -2e9\n    this.bottom = 2e9\n  }\n\n  getViewport(doc: Text, heightMap: HeightMap, bias: number, scrollTo: number): Viewport {\n    // This will divide VIEWPORT_MARGIN between the top and the\n    // bottom, depending on the bias (the change in viewport position\n    // since the last update). It'll hold a number between 0 and 1\n    let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / VIEWPORT_MARGIN / 2))\n    let viewport = new Viewport(heightMap.lineAt(this.top - marginTop * VIEWPORT_MARGIN, doc).start,\n                                heightMap.lineAt(this.bottom + (1 - marginTop) * VIEWPORT_MARGIN, doc).end)\n    // If scrollTo is > -1, make sure the viewport includes that position\n    if (scrollTo > -1) {\n      if (scrollTo < viewport.from) {\n        let top = heightMap.heightAt(scrollTo, doc, -1)\n        viewport = new Viewport(heightMap.lineAt(top - VIEWPORT_MARGIN / 2, doc).start,\n                                heightMap.lineAt(top + (this.bottom - this.top) + VIEWPORT_MARGIN / 2, doc).end)\n      } else if (scrollTo > viewport.to) {\n        let bottom = heightMap.heightAt(scrollTo, doc, 1)\n        viewport = new Viewport(heightMap.lineAt(bottom - (this.bottom - this.top) - VIEWPORT_MARGIN / 2, doc).start,\n                                heightMap.lineAt(bottom + VIEWPORT_MARGIN / 2, doc).end)\n      }\n    }\n    return viewport\n  }\n\n  coveredBy(doc: Text, viewport: Viewport, heightMap: HeightMap, bias = 0) {\n    let top = heightMap.heightAt(viewport.from, doc, -1), bottom = heightMap.heightAt(viewport.to, doc, 1)\n    return (viewport.from == 0 || top <= this.top - Math.max(MIN_COVER_MARGIN, Math.min(-bias, MAX_COVER_MARGIN))) &&\n      (viewport.to == doc.length || bottom >= this.bottom + Math.max(MIN_COVER_MARGIN, Math.min(bias, MAX_COVER_MARGIN)))\n  }\n}\n\nexport class Viewport {\n  constructor(readonly from: number, readonly to: number) {}\n  clip(pos: number): number { return Math.max(this.from, Math.min(this.to, pos)) }\n  eq(b: Viewport) { return this.from == b.from && this.to == b.to }\n}\n","import browser from \"./browser\"\nimport {ContentView} from \"./contentview\"\nimport {DocView} from \"./docview\"\nimport {hasSelection, DOMSelection} from \"./dom\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n  characterDataOldValue: true\n}\n\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nexport class DOMObserver {\n  dom: HTMLElement\n\n  observer: MutationObserver\n  active: boolean = false\n  ignoreSelection: DOMSelection = new DOMSelection\n\n  onSelectionChange: any\n  onCharData: any\n\n  charDataQueue: MutationRecord[] = []\n  charDataTimeout: any = null\n\n  scrollTargets: HTMLElement[] = []\n  intersection: IntersectionObserver | null = null\n  intersecting: boolean = false\n\n  constructor(private docView: DocView,\n              private onChange: (from: number, to: number, typeOver: boolean) => boolean,\n              private onScrollChanged: () => void) {\n    this.dom = docView.dom\n    this.observer = new MutationObserver(mutations => this.flush(mutations))\n    if (useCharData)\n      this.onCharData = (event: MutationEvent) => {\n        this.charDataQueue.push({target: event.target,\n                                 type: \"characterData\",\n                                 oldValue: event.prevValue} as MutationRecord)\n        if (this.charDataTimeout == null) this.charDataTimeout = setTimeout(() => this.flush(), 20)\n      }\n    this.onSelectionChange = () => {\n      if (this.docView.root.activeElement == this.dom) this.flush()\n    }\n    this.start()\n\n    this.onScroll = this.onScroll.bind(this)\n    window.addEventListener(\"scroll\", this.onScroll)\n    if (typeof IntersectionObserver == \"function\") {\n      this.intersection = new IntersectionObserver(entries => {\n        if (entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n          this.intersecting = !this.intersecting\n          this.onScroll()\n        }\n      }, {})\n      this.intersection.observe(this.dom)\n    }\n    this.listenForScroll()\n  }\n\n  onScroll() {\n    if (this.intersecting) {\n      this.flush()\n      this.onScrollChanged()\n    }\n  }\n\n  listenForScroll() {\n    let i = 0, changed: HTMLElement[] | null = null\n    for (let dom = this.dom as any; dom;) {\n      if (dom.nodeType == 1) {\n        if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom) i++\n        else if (!changed) changed = this.scrollTargets.slice(0, i)\n        if (changed) changed.push(dom)\n        dom = dom.parentNode\n      } else if (dom.nodeType == 11) { // Shadow root\n        dom = dom.host\n      } else {\n        break\n      }\n    }\n    if (i < this.scrollTargets.length && !changed) changed = this.scrollTargets.slice(0, i)\n    if (changed) {\n      for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll)\n      for (let dom of this.scrollTargets = changed) dom.addEventListener(\"scroll\", this.onScroll)\n    }\n  }\n\n  ignore<T>(f: () => T): T {\n    if (!this.active) return f()\n    try {\n      this.stop()\n      return f()\n    } finally {\n      this.start()\n      this.clear()\n    }\n  }\n\n  start() {\n    if (this.active) return\n    this.observer.observe(this.dom, observeOptions)\n    // FIXME is this shadow-root safe?\n    this.dom.ownerDocument!.addEventListener(\"selectionchange\", this.onSelectionChange)\n    if (useCharData)\n      this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.active = true\n  }\n\n  stop() {\n    if (!this.active) return\n    this.active = false\n    this.observer.disconnect()\n    this.dom.ownerDocument!.removeEventListener(\"selectionchange\", this.onSelectionChange)\n    if (useCharData)\n      this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n  }\n\n  takeCharRecords(): MutationRecord[] {\n    let result = this.charDataQueue\n    if (result.length) {\n      this.charDataQueue = []\n      clearTimeout(this.charDataTimeout)\n      this.charDataTimeout = null\n    }\n    return result\n  }\n\n  clearSelection() {\n    this.ignoreSelection.set(this.docView.root.getSelection()!)\n  }\n\n  // Throw away any pending changes\n  clear() {\n    this.observer.takeRecords()\n    this.takeCharRecords()\n    this.clearSelection()\n  }\n\n  // Apply pending changes, if any\n  flush(records: MutationRecord[] = this.observer.takeRecords()) {\n    if (this.charDataQueue.length)\n      records = records.concat(this.takeCharRecords())\n    let selection = this.docView.root.getSelection()!\n    let newSel = !this.ignoreSelection.eq(selection) && hasSelection(this.dom, selection)\n    if (records.length == 0 && !newSel) return\n\n    let from = -1, to = -1, typeOver = false\n    for (let record of records) {\n      let range = this.readMutation(record)\n      if (!range) continue\n      if (range.typeOver) typeOver = true\n      if (from == -1) {\n        ;({from, to} = range)\n      } else {\n        from = Math.min(range.from, from)\n        to = Math.max(range.to, to)\n      }\n    }\n\n    let apply = from > -1 || newSel\n    if (!apply || !this.onChange(from, to, typeOver)) {\n      if (this.docView.dirty) this.ignore(() => this.docView.sync())\n      this.docView.updateSelection()\n    }\n    this.clearSelection()\n  }\n\n  readMutation(rec: MutationRecord): {from: number, to: number, typeOver: boolean} | null {\n    let cView = this.docView.nearest(rec.target)\n    if (!cView || cView.ignoreMutation(rec)) return null\n    cView.markDirty()\n\n    if (rec.type == \"childList\") {\n      let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1)\n      let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1)\n      return {from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n              to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false}\n    } else { // \"characterData\"\n      return {from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue}\n    }\n  }\n\n  destroy() {\n    this.stop()\n    if (this.intersection) this.intersection.disconnect()\n    for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll)\n    window.removeEventListener(\"scroll\", this.onScroll)\n  }\n}\n\nfunction findChild(cView: ContentView, dom: Node | null, dir: number): ContentView | null {\n  while (dom) {\n    let curView = dom.cmView\n    if (curView && curView.parent == cView) return curView\n    let parent = dom.parentNode\n    dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling\n  }\n  return null\n}\n","import {Text} from \"../../doc/src\"\nimport {ChangedRange} from \"../../state/src\"\nimport {RangeSet, RangeIterator} from \"../../rangeset/src/rangeset\"\nimport {DecorationSet, RangeDecoration, Decoration, LineDecoration} from \"./decoration\"\nimport {Viewport} from \"./viewport\"\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\"]\n\nexport class HeightOracle {\n  doc: Text = Text.of([\"\"])\n  lineWrapping: boolean = false\n  heightSamples: {[key: number]: boolean} = {}\n  lineHeight: number = 14\n  charWidth: number = 7\n  lineLength: number = 30\n  // Used to track, during updateHeight, if any actual heights changed\n  heightChanged: boolean = false\n\n  heightForGap(from: number, to: number): number {\n    let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1\n    if (this.lineWrapping)\n      lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength)\n    return this.lineHeight * lines\n  }\n\n  heightForLine(length: number): number {\n    if (!this.lineWrapping) return this.lineHeight\n    let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)))\n    return lines * this.lineHeight\n  }\n\n  setDoc(doc: Text): this { this.doc = doc; return this }\n\n  mustRefresh(lineHeights: number[]): boolean {\n    let newHeight = false\n    for (let i = 0; i < lineHeights.length; i++) {\n      let h = lineHeights[i]\n      if (h < 0) {\n        i++\n      } else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n        newHeight = true\n        this.heightSamples[Math.floor(h * 10)] = true\n      }\n    }\n    return newHeight\n  }\n\n  refresh(whiteSpace: string, lineHeight: number, charWidth: number, lineLength: number, knownHeights: number[]): boolean {\n    let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1\n    let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping\n    this.lineWrapping = lineWrapping\n    this.lineHeight = lineHeight\n    this.charWidth = charWidth\n    this.lineLength = lineLength\n    if (changed) {\n      this.heightSamples = {}\n      for (let i = 0; i < knownHeights.length; i++) {\n        let h = knownHeights[i]\n        if (h < 0) i++\n        else this.heightSamples[Math.floor(h * 10)] = true\n      }\n    }\n    return changed\n  }\n}\n\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right lines. The `heights` array is a sequence of\n// line heights, starting from position `from`. When the lines have\n// line widgets, their height may be followed by a -1 or -2\n// (indicating whether the height is below or above the line) and then\n// a total widget height.\nexport class MeasuredHeights {\n  public index = 0\n  constructor(readonly from: number, readonly heights: number[]) {}\n  get more() { return this.index < this.heights.length }\n}\n\nexport class LineHeight {\n  constructor(readonly start: number, readonly end: number,\n              readonly top: number, readonly height: number,\n              // @internal\n              readonly line: HeightMapLine | null) {}\n\n  get bottom() { return this.top + this.height }\n  get textTop() { return this.top + (this.line ? lineWidgetHeight(this.line.deco, -2) : 0) }\n  get textBottom() { return this.bottom - (this.line ? lineWidgetHeight(this.line.deco, -1) : 0) }\n  get hasCollapsedRanges() {\n    if (this.line)\n      for (let i = 1; i < this.line.deco.length; i += 2)\n        if (this.line.deco[i] < 0) return true\n    return false\n  }\n}\n\nexport abstract class HeightMap {\n  constructor(\n    public length: number, // The number of characters covered\n    public height: number, // Height of this part of the document\n    public outdated: boolean = true // Tracks whether the height needs to be recomputed\n  ) {}\n\n  abstract size: number\n\n  abstract heightAt(pos: number, doc: Text, bias?: -1 | 1, offset?: number): number\n  abstract lineAt(height: number, doc: Text, offset?: number): LineHeight\n  abstract lineViewport(pos: number, doc: Text, offset?: number): Viewport\n  abstract decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number): void\n  abstract decomposeRight(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number): void\n  abstract updateHeight(oracle: HeightOracle, offset?: number, force?: boolean, measured?: MeasuredHeights): HeightMap\n  abstract toString(): void\n  abstract forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void): void\n\n  setHeight(oracle: HeightOracle, height: number) {\n    if (this.height != height) {\n      this.height = height\n      oracle.heightChanged = true\n    }\n  }\n\n  // from/to are node-relative positions pointing into the node itself\n  // newFrom/newTo are document-relative positions in the updated\n  // document, used for querying line endings and such\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    let result: HeightMap[] = []\n    this.decomposeLeft(from, result, nodes[0], oracle, newFrom)\n    let last\n    if (nodes.length == 1) {\n      last = result.pop()!\n    } else {\n      for (let i = 1; i < nodes.length - 1; i++) result.push(nodes[i])\n      last = nodes[nodes.length - 1]\n    }\n    this.decomposeRight(to, result, last, oracle, newTo)\n    return HeightMap.of(result)\n  }\n\n  applyChanges(decorations: ReadonlyArray<DecorationSet>, oracle: HeightOracle, changes: ReadonlyArray<ChangedRange>): HeightMap {\n    let me: HeightMap = this, off = 0\n    for (let i = 0; i < changes.length; i++) {\n      let range = changes[i]\n      let nodes = buildChangedNodes(oracle, decorations, range.fromB, range.toB)\n      me = me.replace(range.fromA + off, range.toA + off, nodes, oracle, range.fromB, range.toB)\n      off += range.lenDiff\n    }\n    return me\n  }\n\n  static empty() { return new HeightMapLine(0, 0) }\n\n  static of(nodes: HeightMap[]): HeightMap {\n    if (nodes.length == 1) return nodes[0]\n\n    let i = 0, j = nodes.length, before = 0, after = 0\n    while (i < j) {\n      if (before < after) before += nodes[i++].size\n      else after += nodes[--j].size\n    }\n    for (;;) {\n      if (before > after * 2) {\n        let {left, right} = nodes[i - 1] as HeightMapBranch\n        nodes.splice(i - 1, 1, left, right)\n        before -= right.size\n        after += right.size\n      } else if (after > before * 2) {\n        let {left, right} = nodes[i] as HeightMapBranch\n        nodes.splice(i++, 1, left, right)\n        after -= left.size\n        before += left.size\n      } else {\n        break\n      }\n    }\n    return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), HeightMap.of(nodes.slice(i)))\n  }\n}\n\nconst noDeco: number[] = []\n\nclass HeightMapLine extends HeightMap {\n  // Decoration information is stored in a somewhat obscure format—the\n  // array of numbers in `deco` encodes all of collapsed ranges,\n  // inline widgets, and widgets above/below the line. It contains a\n  // series of pairs of numbers.\n  //\n  //  - The first number indicates the position of the decoration, or\n  //    -2 for widget height above the line, or -1 for widget height\n  //    below the line (see `lineWidgetHeight` and\n  //    `setLineWidgetHeight`)\n  //\n  //  - The second number is the height of a widget when positive, or\n  //    the number of collapse code points if negative.\n  //\n  // These are the pieces of information that need to be stored about\n  // lines to somewhat effectively estimate their height when they are\n  // not actually in view and thus can not be measured. Widget size\n  // above/below is also necessary in heightAt, to skip it.\n  //\n  // The somewhat awkward format is there to reduce the amount of\n  // space required—you can have a huge number of line heightmap\n  // objects when scrolling through a big document, and most of them\n  // don't need any extra data, and thus can just store a single\n  // pointer to `noDeco`.\n  constructor(length: number, height: number, public deco: number[] = noDeco) { super(length, height) }\n\n  get size(): number { return 1 }\n\n  heightAt(pos: number, doc: Text, bias: 1 | -1): number {\n    return bias < 0 ? lineWidgetHeight(this.deco, -2) : this.height - lineWidgetHeight(this.deco, -1)\n  }\n\n  lineAt(height: number, doc: Text, offset: number = 0) {\n    return new LineHeight(offset, offset + this.length, -height, this.height, this)\n  }\n\n  lineViewport(pos: number, doc: Text, offset: number = 0): Viewport {\n    return new Viewport(offset, offset + this.length)\n  }\n\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    if (nodes.length != 1 || (nodes[0] instanceof HeightMapGap && oracle.doc.lineAt(newFrom).end < newTo))\n      return super.replace(from, to, nodes, oracle, newFrom, newTo)\n    this.deco = offsetDeco(this.deco, from, to, nodes[0].length)\n    if (nodes[0] instanceof HeightMapLine) this.deco = insertDeco(this.deco, (nodes[0] as HeightMapLine).deco, from)\n    this.length += nodes[0].length - (to - from)\n    this.outdated = true\n    return this\n  }\n\n  decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number) {\n    if (to == 0) {\n      target.push(node)\n    } else if (node instanceof HeightMapLine) {\n      target.push(this.joinLine(to, this.length, node))\n    } else {\n      let nextEnd = oracle.doc.lineAt(newTo).end, breakInside = nextEnd < newTo + node.length\n      let newLen = to + (breakInside ? nextEnd - newTo : node.length)\n      target.push(new HeightMapLine(newLen, this.height, offsetDeco(this.deco, to, this.length, 0)))\n      if (breakInside)\n        target.push(new HeightMapGap(nextEnd + 1, newTo + node.length, oracle))\n    }\n  }\n\n  decomposeRight(from: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number) {\n    if (from == this.length) {\n      target.push(node)\n    } else if (node instanceof HeightMapLine) {\n      target.push(this.joinLine(0, from, node))\n    } else {\n      let prevStart = oracle.doc.lineAt(newFrom).start, breakInside = prevStart > newFrom - node.length\n      if (breakInside)\n        target.push(new HeightMapGap(newFrom - node.length, prevStart - 1, oracle))\n      let newLen = (breakInside ? newFrom - prevStart : node.length) + (this.length - from)\n      target.push(new HeightMapLine(newLen, this.height, offsetDeco(this.deco, 0, from, newLen - this.length)))\n    }\n  }\n\n  joinLine(from: number, to: number, node: HeightMapLine): HeightMap {\n    let deco = insertDeco(offsetDeco(this.deco, from, to, node.length), node.deco, from)\n    return new HeightMapLine(this.length + node.length - (to - from), Math.max(this.height, node.height), deco)\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights) {\n    if (measured && measured.from <= offset && measured.more) {\n      let height = measured.heights[measured.index++]\n      // If either this line's deco data or the measured heights contain info about\n      if (this.deco.length && this.deco[0] < 0 || measured.more && measured.heights[measured.index] < 0) {\n        let above = measured.more && measured.heights[measured.index] == -2\n          ? measured.heights[(measured.index += 2) - 1] : 0\n        let below = measured.more && measured.heights[measured.index] == -1\n          ? measured.heights[(measured.index += 2) - 1] : 0\n        this.deco = setLineWidgetHeight(setLineWidgetHeight(this.deco.slice(), -2, above), -1, below)\n        height += above + below\n      }\n      this.setHeight(oracle, height)\n    } else if (force || this.outdated) {\n      let len = this.length, minH = 0, add = 0\n      for (let i = 1; i < this.deco.length; i += 2) {\n        let val = this.deco[i]\n        if (val < 0) len += val\n        else if (this.deco[i - 1] < 0) add += val\n        else minH = Math.max(val, minH)\n      }\n      this.setHeight(oracle, Math.max(oracle.heightForLine(len), minH) + add)\n    }\n    this.outdated = false\n    return this\n  }\n\n  toString() { return `line(${this.length}${this.deco.length ? \":\" + this.deco.join(\",\") : \"\"})` }\n\n  forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void) {\n    f(new LineHeight(offset, offset + this.length, 0, this.height, this))\n  }\n\n  get hasCollapsedRanges(): boolean {\n    for (let i = 1; i < this.deco.length; i += 2) if (this.deco[i] < 0) return true\n    return false\n  }\n}\n\nfunction offsetDeco(deco: number[], from: number, to: number, length: number): number[] {\n  let result: number[] | null = null\n  let off = length - (to - from)\n  for (let i = 0; i < deco.length; i += 2) {\n    let pos = deco[i]\n    if (Math.max(0, pos) < from || pos > to && off == 0) continue\n    if (!result) result = deco.slice(0, i)\n    if (pos > to) result.push(pos + off, deco[i + 1])\n  }\n  return !result ? deco : result.length ? result : noDeco\n}\n\nfunction insertDeco(deco: number[], newDeco: number[], pos: number): number[] {\n  if (newDeco.length == 0) return deco\n  let result = [], inserted = false\n  for (let i = 0;; i += 2) {\n    let next = i == deco.length ? 2e9 : deco[i]\n    if (!inserted && next > pos) {\n      for (let j = 0; j < newDeco.length; j += 2)\n        if (pos == 0 || newDeco[j] >= 0) result.push(newDeco[j] + pos, newDeco[j + 1])\n      inserted = true\n    }\n    if (next == 2e9) return result\n    result.push(next, deco[i + 1])\n  }\n}\n\nfunction lineWidgetHeight(deco: number[], type: -1 | -2) {\n  for (let i = 0; i < deco.length; i += 2) {\n    let pos = deco[i]\n    if (pos >= 0) break\n    if (pos == type) return deco[i + 1]\n  }\n  return 0\n}\n\nfunction setLineWidgetHeight(deco: number[], type: -1 | -2, height: number): number[] {\n  let i = 0\n  for (; i < deco.length; i += 2) {\n    let pos = deco[i]\n    if (pos > type) break\n    if (pos == type) {\n      deco[i + 1] = height\n      return deco\n    }\n  }\n  if (height > 0) deco.splice(i, 0, type, height)\n  return deco\n}\n\nclass HeightMapGap extends HeightMap {\n  constructor(from: number, to: number, oracle: HeightOracle) {\n    super(to - from, oracle.heightForGap(from, to), false)\n  }\n\n  get size(): number { return 1 }\n\n  heightAt(pos: number, doc: Text, bias: 1 | -1, offset: number = 0) {\n    let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number\n    let lines = lastLine - firstLine + 1\n    return (doc.lineAt(pos).number - firstLine + (bias > 0 ? 1 : 0)) * (this.height / lines)\n  }\n\n  lineAt(height: number, doc: Text, offset: number = 0) {\n    let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number\n    let lines = lastLine - firstLine, line = Math.floor(lines * Math.max(0, Math.min(1, height / this.height)))\n    let heightPerLine = this.height / (lines + 1), top = heightPerLine * line - height\n    let {start, end} = doc.line(firstLine + line)\n    return new LineHeight(start, end, top, heightPerLine, null)\n  }\n\n  lineViewport(pos: number, doc: Text, offset: number = 0): Viewport {\n    let {start, end} = doc.lineAt(pos + offset)\n    return new Viewport(start, end)\n  }\n\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    if (nodes.length != 1 || !(nodes[0] instanceof HeightMapGap))\n      return super.replace(from, to, nodes, oracle, newFrom, newTo)\n    this.length += (newTo - newFrom) - (to - from)\n    let newStart = newFrom - from\n    // FIXME the Math.min is a kludge to deal with the fact that, if\n    // there are further changes that'll be applied by applyChanges,\n    // the estimated length here may extend past the end of the document\n    this.setHeight(oracle, oracle.heightForGap(newStart, Math.min(oracle.doc.length, newStart + this.length)))\n    return this\n  }\n\n  decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number) {\n    let newOffset = newTo - to\n    if (node instanceof HeightMapGap) {\n      target.push(new HeightMapGap(newOffset, newTo + node.length, oracle))\n    } else {\n      let lineStart = oracle.doc.lineAt(newTo).start\n      if (lineStart > newOffset) target.push(new HeightMapGap(newOffset, lineStart - 1, oracle))\n      let deco = offsetDeco((node as HeightMapLine).deco, 0, 0, newTo - lineStart)\n      target.push(new HeightMapLine(newTo + node.length - lineStart, node.height, deco))\n    }\n  }\n\n  decomposeRight(from: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number) {\n    let newEnd = newFrom + (this.length - from)\n    if (node instanceof HeightMapGap) {\n      target.push(new HeightMapGap(newFrom - node.length, newEnd, oracle))\n    } else {\n      let lineEnd = oracle.doc.lineAt(newFrom).end\n      target.push(new HeightMapLine(node.length + (lineEnd - newFrom), node.height, (node as HeightMapLine).deco))\n      if (newEnd > lineEnd) target.push(new HeightMapGap(lineEnd + 1, newEnd, oracle))\n    }\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights): HeightMap {\n    let end = offset + this.length\n    if (measured && measured.from <= offset + this.length && measured.more) {\n      let nodes = [], pos = Math.max(offset, measured.from)\n      if (measured.from > offset) nodes.push(new HeightMapGap(offset, measured.from - 1, oracle))\n      while (pos <= end && measured.more) {\n        let height = measured.heights[measured.index++], deco = undefined, wType!: -1 | -2\n        while (measured.more && (wType = measured.heights[measured.index] as (-1 | -2)) < 0) {\n          let wHeight = measured.heights[(measured.index += 2) - 1]\n          height += wHeight\n          deco = setLineWidgetHeight(deco || [], wType, wHeight)\n        }\n        let len = oracle.doc.lineAt(pos).length\n        nodes.push(new HeightMapLine(len, height, deco))\n        pos += len + 1\n      }\n      if (pos < end) nodes.push(new HeightMapGap(pos, end, oracle))\n      for (let node of nodes) node.outdated = false\n      oracle.heightChanged = true\n      return HeightMap.of(nodes)\n    } else if (force || this.outdated) {\n      this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length))\n      this.outdated = false\n    }\n    return this\n  }\n\n  toString() { return `gap(${this.length})` }\n\n  forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void) {\n    for (let pos = Math.max(from, offset), end = Math.min(to, offset + this.length); pos <= end;) {\n      let end = oracle.doc.lineAt(pos).end\n      f(new LineHeight(pos, end, 0, oracle.heightForLine(end - pos), null))\n      pos = end + 1\n    }\n  }\n}\n\nclass HeightMapBranch extends HeightMap {\n  size: number\n\n  constructor(public left: HeightMap, public right: HeightMap) {\n    super(left.length + 1 + right.length, left.height + right.height, left.outdated || right.outdated)\n    this.size = left.size + right.size\n  }\n\n  heightAt(pos: number, doc: Text, bias: 1 | -1, offset: number = 0): number {\n    let rightStart = offset + this.left.length + 1\n    return pos < rightStart ? this.left.heightAt(pos, doc, bias, offset)\n      : this.left.height + this.right.heightAt(pos, doc, bias, rightStart)\n  }\n\n  lineAt(height: number, doc: Text, offset: number = 0) {\n    let right = height - this.left.height\n    if (right < 0) return this.left.lineAt(height, doc, offset)\n    return this.right.lineAt(right, doc, offset + this.left.length + 1)\n  }\n\n  lineViewport(pos: number, doc: Text, offset: number = 0): Viewport {\n    let rightStart = this.left.length + 1\n    return pos < rightStart ? this.left.lineViewport(pos, doc, offset)\n      : this.right.lineViewport(pos - rightStart, doc, offset + rightStart)\n  }\n\n  replace(from: number, to: number, nodes: HeightMap[], oracle: HeightOracle, newFrom: number, newTo: number): HeightMap {\n    let rightStart = this.left.length + 1\n    if (to < rightStart)\n      return this.balanced(this.left.replace(from, to, nodes, oracle, newFrom, newTo), this.right)\n    else if (from >= rightStart)\n      return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes, oracle, newFrom, newTo))\n    else\n      return super.replace(from, to, nodes, oracle, newFrom, newTo)\n  }\n\n  decomposeLeft(to: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newTo: number) {\n    let rightStart = this.left.length + 1\n    if (to < rightStart) {\n      this.left.decomposeLeft(to, target, node, oracle, newTo)\n    } else {\n      target.push(this.left)\n      this.right.decomposeLeft(to - rightStart, target, node, oracle, newTo)\n    }\n  }\n\n  decomposeRight(from: number, target: HeightMap[], node: HeightMap, oracle: HeightOracle, newFrom: number) {\n    let rightStart = this.left.length + 1\n    if (from < rightStart) {\n      this.left.decomposeRight(from, target, node, oracle, newFrom)\n      target.push(this.right)\n    } else {\n      this.right.decomposeRight(from - rightStart, target, node, oracle, newFrom)\n    }\n  }\n\n  balanced(left: HeightMap, right: HeightMap): HeightMap {\n    if (left.size > 2 * right.size || right.size > 2 * left.size) return HeightMap.of([left, right])\n    this.left = left; this.right = right\n    this.height = left.height + right.height\n    this.outdated = left.outdated || right.outdated\n    this.size = left.size + right.size\n    this.length = left.length + 1 + right.length\n    return this\n  }\n\n  updateHeight(oracle: HeightOracle, offset: number = 0, force: boolean = false, measured?: MeasuredHeights): HeightMap {\n    let {left, right} = this, rightStart = offset + left.length + 1, rebalance: any = null\n    if (measured && measured.from <= offset + left.length && measured.more)\n      rebalance = left = left.updateHeight(oracle, offset, force, measured)\n    else\n      left.updateHeight(oracle, offset, force)\n    if (measured && measured.from <= rightStart + right.length && measured.more)\n      rebalance = right = right.updateHeight(oracle, rightStart, force, measured)\n    else\n      right.updateHeight(oracle, rightStart, force)\n    if (rebalance) return this.balanced(left, right)\n    this.height = this.left.height + this.right.height\n    this.outdated = false\n    return this\n  }\n\n  toString() { return this.left + \" \" + this.right }\n\n  forEachLine(from: number, to: number, offset: number, oracle: HeightOracle, f: (height: LineHeight) => void) {\n    let rightStart = offset + this.left.length + 1\n    if (from < rightStart) this.left.forEachLine(from, to, offset, oracle, f)\n    if (to >= rightStart) this.right.forEachLine(from, to, rightStart, oracle, f)\n  }\n}\n\nclass NodeBuilder implements RangeIterator<Decoration> {\n  nodes: HeightMap[] = []\n  writtenTo: number\n  lineStart: number = -1\n  lineEnd: number = -1\n  curLine: HeightMapLine | null = null\n\n  constructor(public pos: number, public oracle: HeightOracle) {\n    this.writtenTo = pos\n  }\n\n  advance(pos: number) {\n    if (pos <= this.pos) return\n    if (this.curLine) {\n      if (this.lineEnd < 0) this.lineEnd = this.oracle.doc.lineAt(this.pos).end\n      if (pos > this.lineEnd) {\n        this.curLine.length += (this.lineEnd - this.pos)\n        this.curLine.updateHeight(this.oracle, this.lineEnd - this.curLine.length)\n        this.curLine = null\n        this.writtenTo = this.lineEnd + 1\n        this.lineEnd = -1\n      } else {\n        this.curLine.length += (pos - this.pos)\n        this.writtenTo = pos\n      }\n    } else if (this.lineEnd > -1 && pos > this.lineEnd) {\n      this.lineEnd = -1\n    }\n    this.pos = pos\n  }\n\n  advanceCollapsed(pos: number, deco: Decoration) {\n    if (pos <= this.pos) return\n    if (deco.widget && deco.widget.estimatedHeight >= 0)\n      this.addDeco(deco.widget.estimatedHeight)\n    this.addDeco(this.pos - pos)\n    if (this.curLine) {\n      this.curLine.length += pos - this.pos\n      this.writtenTo = pos\n      if (this.lineEnd < pos) this.lineEnd = -1\n    }\n    this.pos = pos\n  }\n\n  point(deco: Decoration) {\n    this.addDeco(deco.widget!.estimatedHeight,\n                 deco instanceof LineDecoration ? (deco.side > 0 ? -1 : -2) : undefined)\n  }\n\n  flushTo(pos: number) {\n    if (pos > this.writtenTo) {\n      this.nodes.push(new HeightMapGap(this.writtenTo, pos, this.oracle))\n      this.writtenTo = pos\n    }\n  }\n\n  addDeco(val: number, lineWidget?: -1 | -2) {\n    if (!this.curLine) {\n      this.lineStart = Math.max(this.writtenTo, this.oracle.doc.lineAt(this.pos).start)\n      this.flushTo(this.lineStart - 1)\n      this.nodes.push(this.curLine = new HeightMapLine(this.pos - this.lineStart, 0, []))\n      this.writtenTo = this.pos\n    }\n    if (lineWidget == null)\n      this.curLine.deco.push(this.pos - this.lineStart, val)\n    else\n      setLineWidgetHeight(this.curLine.deco, lineWidget, val + lineWidgetHeight(this.curLine.deco, lineWidget))\n  }\n\n  ignoreRange(value: Decoration) { return !(value as RangeDecoration).collapsed }\n  ignorePoint(value: Decoration) { return !(value.widget && value.widget.estimatedHeight > 0) }\n}\n\nfunction buildChangedNodes(oracle: HeightOracle, decorations: ReadonlyArray<DecorationSet>, from: number, to: number): HeightMap[] {\n  let builder = new NodeBuilder(from, oracle)\n  RangeSet.iterateSpans(decorations, from, to, builder)\n  if (builder.curLine) builder.curLine.updateHeight(oracle, builder.pos - builder.curLine.length)\n  else builder.flushTo(builder.pos)\n  if (builder.nodes.length == 0) builder.nodes.push(new HeightMapGap(0, 0, oracle))\n  return builder.nodes\n}\n","import {EditorState, Transaction} from \"../../state/src\"\nimport {StyleModule} from \"style-mod\"\nimport {Viewport} from \"./viewport\"\nimport {DecorationSet, Decoration} from \"./decoration\"\nimport {Extension, Slot, SlotType} from \"../../extension/src/extension\"\nimport {EditorView} from \"./editorview\"\nimport {Attrs} from \"./attributes\"\n\nexport type Effect<T> = SlotType<(field: any) => T>\n\nexport class ViewField<V> {\n  readonly create: (view: EditorView) => V\n  readonly update: (value: V, update: ViewUpdate) => V\n  readonly effects: Slot<(field: V) => any>[]\n  \n  constructor({create, update, effects = []}: {\n    create: (view: EditorView) => V\n    update: (value: V, update: ViewUpdate) => V,\n    effects?: Slot<(field: V) => any>[]\n  }) {\n    this.create = create; this.update = update; this.effects = effects\n  }\n\n  get extension() { return viewField(this) }\n\n  static decorationEffect = Slot.define<(field: any) => DecorationSet>()\n  static editorAttributeEffect = Slot.define<(field: any) => (Attrs | null)>()\n  static contentAttributeEffect = Slot.define<(field: any) => (Attrs | null)>()\n\n  static decorations({create, update, map}: {\n    create?: (view: EditorView) => DecorationSet,\n    update: (deco: DecorationSet, update: ViewUpdate) => DecorationSet,\n    map?: boolean\n  }) {\n    return new ViewField<DecorationSet>({\n      create: create || (() => Decoration.none),\n      update(deco: DecorationSet, u: ViewUpdate) {\n        if (map) for (let tr of u.transactions) deco = deco.map(tr.changes)\n        return update(deco, u)\n      },\n      effects: [ViewField.decorationEffect(d => d)]\n    }).extension\n  }\n\n  static editorAttributes = attributeField(ViewField.editorAttributeEffect)\n  static contentAttributes = attributeField(ViewField.contentAttributeEffect)\n}\n\nfunction attributeField(effect: Effect<Attrs | null>) {\n  return function(value: Attrs | ((view: EditorView) => Attrs | null),\n                  update?: (value: Attrs | null, update: ViewUpdate) => Attrs | null) {\n    return new ViewField<Attrs | null>({\n      create: value instanceof Function ? value : () => value,\n      update: update || (a => a), effects: [effect(a => a)]\n    }).extension\n  }\n}\n\nexport class ViewExtension extends Extension {}\n\nexport const viewField = ViewExtension.defineBehavior<ViewField<any>>()\n\nexport const handleDOMEvents = ViewExtension.defineBehavior<{[key: string]: (view: EditorView, event: any) => boolean}>()\n\nexport type ViewPlugin = {\n  update?: (update: ViewUpdate) => void\n  destroy?: () => void\n}\n\nexport const viewPlugin = ViewExtension.defineBehavior<(view: EditorView) => ViewPlugin>()\n\nexport const styleModule = ViewExtension.defineBehavior<StyleModule>()\n\nexport class ViewSnapshot {\n  public state: EditorState\n  public fields: ReadonlyArray<ViewField<any>>\n  public fieldValues: ReadonlyArray<any>\n  public viewport: Viewport\n  constructor(view: EditorView) {\n    this.state = view.state\n    this.fields = view.fields\n    this.fieldValues = view.fieldValues\n    this.viewport = view.viewport\n  }\n}\n\nexport const focusChange = Slot.define<boolean>()\n\nexport class ViewUpdate {\n  constructor(private prev: ViewSnapshot,\n              public readonly transactions: ReadonlyArray<Transaction>,\n              public readonly view: EditorView,\n              private metadata: ReadonlyArray<Slot>) {}\n\n  get prevState() { return this.prev.state }\n  get state() { return this.view.state }\n  get prevViewport() { return this.prev.viewport }\n  get viewport() { return this.view.viewport }\n\n  prevField<T>(field: ViewField<T>): T\n  prevField<T, D = undefined>(field: ViewField<T>, defaultValue?: D): T | D {\n    return getField(field, this.prev.fields, this.prev.fieldValues, defaultValue)\n  }\n\n  get viewportChanged() {\n    return this.prev.viewport.eq(this.view.viewport)\n  }\n\n  get docChanged() {\n    return this.transactions.some(tr => tr.docChanged)\n  }\n\n  getMeta<T>(type: SlotType<T>): T | undefined {\n    for (let i = this.transactions.length; i >= 0; i--) {\n      let found = i == this.transactions.length ? Slot.get(type, this.metadata) : this.transactions[i].getMeta(type)\n      if (found !== undefined) return found\n    }\n    return undefined\n  }\n}\n\nexport function getField<T, D = undefined>(field: ViewField<T>, fields: ReadonlyArray<ViewField<any>>,\n                                           values: ReadonlyArray<any>, defaultValue?: D): T | D {\n  let index = fields.indexOf(field)\n  if (index < 0) {\n    if (defaultValue === undefined) throw new RangeError(\"Field isn't present\")\n    else return defaultValue\n  }\n  if (index >= values.length) throw new RangeError(\"Accessing a field that isn't initialized yet\")\n  return values[index] as T\n}\n","import {ContentView, ChildCursor, dirty} from \"./contentview\"\nimport {LineView} from \"./lineview\"\nimport {TextView, CompositionView} from \"./inlineview\"\nimport {ContentBuilder} from \"./buildview\"\nimport {Viewport, ViewportState} from \"./viewport\"\nimport browser from \"./browser\"\nimport {Text} from \"../../doc/src\"\nimport {DOMObserver} from \"./domobserver\"\nimport {EditorState, ChangeSet, ChangedRange, Transaction} from \"../../state/src\"\nimport {HeightMap, HeightOracle, MeasuredHeights, LineHeight} from \"./heightmap\"\nimport {Decoration, DecorationSet, joinRanges, findChangedRanges, heightRelevantDecorations} from \"./decoration\"\nimport {clientRectsFor, isEquivalentPosition, scrollRectIntoView, maxOffset} from \"./dom\"\nimport {ViewUpdate, ViewSnapshot, ViewField} from \"./extension\"\nimport {EditorView} from \"./editorview\"\nimport {Slot} from \"../../extension/src/extension\"\n\ntype A<T> = ReadonlyArray<T>\nconst none = [] as any\n\nconst enum Composing { no, starting, yes, ending }\n\nexport class DocView extends ContentView {\n  children: (LineView | GapView)[] = []\n  viewports: Viewport[] = none\n\n  decorations!: A<DecorationSet>\n  selectionDirty: any = null\n\n  observer: DOMObserver\n  forceSelectionUpdate: boolean = false\n\n  viewportState: ViewportState\n  heightMap!: HeightMap\n  heightOracle: HeightOracle = new HeightOracle\n\n  layoutCheckScheduled: number = -1\n  // A document position that has to be scrolled into view at the next layout check\n  scrollIntoView: number = -1\n\n  composing: Composing = Composing.no\n  composition: CompositionView | null = null\n  composeTimeout: any = -1\n\n  paddingTop: number = 0\n  paddingBottom: number = 0\n\n  dom!: HTMLElement\n\n  get length() { return this.state.doc.length }\n\n  get state() { return this.view.state }\n\n  get viewport() { return this.view.viewport }\n\n  get childGap() { return 1 }\n\n  get root() { return this.view.root }\n\n  constructor(private view: EditorView, onDOMChange: (from: number, to: number, typeOver: boolean) => boolean) {\n    super()\n    this.setDOM(view.contentDOM)\n\n    this.viewportState = new ViewportState\n    this.observer = new DOMObserver(this, onDOMChange, () => this.checkLayout())\n  }\n\n  init(state: EditorState) {\n    let changedRanges = [new ChangedRange(0, 0, 0, state.doc.length)]\n    this.heightMap = HeightMap.empty().applyChanges(none, this.heightOracle.setDoc(state.doc), changedRanges)\n    this.children = []\n    this.viewports = this.decorations = none\n    let contentChanges = this.computeUpdate(none, state, none, changedRanges, 0, -1)\n    this.updateInner(contentChanges, 0)\n    this.cancelLayoutCheck()\n    this.layoutCheckScheduled = requestAnimationFrame(() => this.checkLayout())\n  }\n\n  // Update the document view to a given state. scrollIntoView can be\n  // used as a hint to compute a new viewport that includes that\n  // position, if we know the editor is going to scroll that position\n  // into view.\n  update(transactions: A<Transaction>, state: EditorState, metadata: Slot[], scrollIntoView: number = -1) {\n    // FIXME need some way to stabilize viewport—if a change causes the\n    // top of the visible viewport to move, scroll position should be\n    // adjusted to keep the content in place\n\n    let prevLen = this.state.doc.length\n    let changes = transactions.length == 1 ? transactions[0].changes :\n      transactions.reduce((chs, tr) => chs.appendSet(tr.changes), ChangeSet.empty)\n    let changedRanges = changes.changedRanges()\n    // When the DOM nodes around the selection are moved to another\n    // parent, Chrome sometimes reports a different selection through\n    // getSelection than the one that it actually shows to the user.\n    // This forces a selection update when lines are joined to work\n    // around that. Issue #54\n    if (browser.chrome && !this.composition && changes.changes.some(ch => ch.text.length > 1))\n      this.forceSelectionUpdate = true\n    this.heightMap = this.heightMap.applyChanges(none, this.heightOracle.setDoc(state.doc), changedRanges)\n\n    let contentChanges = this.computeUpdate(transactions, state, metadata, changedRanges, 0, scrollIntoView)\n\n    if (this.dirty == dirty.not && contentChanges.length == 0 &&\n        this.state.selection.primary.from >= this.viewport.from &&\n        this.state.selection.primary.to <= this.viewport.to) {\n      this.updateSelection()\n      if (scrollIntoView > -1) this.scrollPosIntoView(scrollIntoView)\n    } else {\n      this.updateInner(contentChanges, prevLen)\n      this.cancelLayoutCheck()\n      if (scrollIntoView > -1) this.scrollIntoView = scrollIntoView\n      this.layoutCheckScheduled = requestAnimationFrame(() => this.checkLayout())\n    }\n  }\n\n  // Used both by update and checkLayout do perform the actual DOM\n  // update\n  private updateInner(changes: A<ChangedRange>, oldLength: number) {\n    changes = this.commitComposition(changes)\n\n    let visible = this.viewport, viewports: Viewport[] = [visible]\n    let {head, anchor} = this.state.selection.primary\n    if (head < visible.from || head > visible.to)\n      viewports.push(this.heightMap.lineViewport(head, this.state.doc))\n    if (!viewports.some(({from, to}) => anchor >= from && anchor <= to))\n      viewports.push(this.heightMap.lineViewport(anchor, this.state.doc))\n    viewports.sort((a, b) => a.from - b.from)\n\n    let compositionRange = null\n    // FIXME changes also contains decoration changes, so this could\n    // interrupt compositions due to styling updates (such as highlighting)\n    // FIXME we do want to interrupt compositions when they overlap\n    // with collapsed decorations (not doing so will break rendering\n    // code further down, since the decorations aren't drawn in one piece)\n    if (this.composition && this.composition.rootView == this) {\n      let from = this.composition.posAtStart, to = from + this.composition.length\n      let newFrom = ChangedRange.mapPos(from, -1, changes), newTo = ChangedRange.mapPos(to, 1, changes)\n      if (changes.length == 0 || changes.length == 1 &&\n          changes[0].fromA >= from && changes[0].toA <= to &&\n          this.composition.textDOM.nodeValue == this.state.doc.slice(newFrom, newTo)) {\n        // No change, or the change falls entirely inside the\n        // composition and the new text corresponds to what the\n        // composition DOM contains\n        compositionRange = new ChangedRange(from, to, from, to + (changes.length ? changes[0].lenDiff : 0))\n      } else if (changes.every(ch => ch.fromA >= to || ch.toA <= from)) {\n        // Entirely outside\n        compositionRange = new ChangedRange(from, to, newFrom, newFrom + (to - from))\n      } else {\n        // Overlaps with the composition, must make sure it is\n        // overwritten so that we get rid of the node\n        changes = new ChangedRange(from, to, newFrom, newTo).addToSet(changes.slice())\n        this.composition = null\n      }\n    }\n\n    this.updateParts(changes, viewports, compositionRange, oldLength)\n\n    this.viewports = viewports\n    this.observer.ignore(() => {\n      // Lock the height during redrawing, since Chrome sometimes\n      // messes with the scroll position during DOM mutation (though\n      // no relayout is triggered and I cannot imagine how it can\n      // recompute the scroll position without a layout)\n      this.dom.style.height = this.heightMap.height + \"px\"\n      this.sync()\n      this.updateSelection()\n      this.dom.style.height = \"\"\n    })\n\n    if (this.composition && this.composition.rootView != this) this.composition = null\n  }\n\n  private updateParts(changes: A<ChangedRange>, viewports: A<Viewport>, compositionRange: ChangedRange | null,\n                      oldLength: number) {\n    let redraw = rangesToUpdate(this.viewports, viewports, changes, this.length)\n    if (compositionRange) compositionRange.subtractFromSet(redraw)\n    let cursor = new ChildCursor(this.children, oldLength, 1)\n    for (let i = redraw.length - 1, posA = this.length;; i--) {\n      let next = i < 0 ? null : redraw[i], nextA = next ? next.toA : 0\n      if (compositionRange && compositionRange.fromA <= posA && compositionRange.toA >= nextA) {\n        cursor.findPos(nextA) // Must move cursor past the stuff we modify\n        this.composition!.updateLength(compositionRange.toB - compositionRange.fromB)\n      }\n      if (!next) break\n      let {fromA, toA, fromB, toB} = next\n      posA = fromA\n      if (fromA == toA && fromB == toB && !changes.some(ch => fromB <= ch.toB && toB >= ch.fromB))\n        continue\n\n      let fromI, fromOff, toI: number, toOff\n      if (toA == oldLength) { toI = this.children.length; toOff = -1 }\n      else ({i: toI, off: toOff} = cursor.findPos(toA))\n      if (fromA == 0) { fromI = 0; fromOff = -1 }\n      else ({i: fromI, off: fromOff} = cursor.findPos(fromA))\n      let searchGap = fromI, content = this.contentBetween(fromB, toB, viewports, (from, to) => {\n        let height = this.heightAt(to, 1) - this.heightAt(from, -1)\n        while (searchGap < toI) {\n          let ch = this.children[searchGap++]\n          if (ch instanceof GapView) return ch.update(to - from, height)\n        }\n        return new GapView(to - from, height)\n      })\n      // If the range starts at the start of the document but both\n      // the current content and the new content start with a line\n      // view, reuse that to avoid a needless DOM reset.\n      if (fromOff == -1 && this.children[fromI] instanceof LineView && content[0] instanceof LineView)\n        fromOff = 0\n      if (toOff == -1 && toI > 0 && this.children[toI - 1] instanceof LineView &&\n          content[content.length - 1] instanceof LineView)\n        toOff = this.children[--toI].length\n      if (compositionRange && toOff > -1 && this.composition!.parent == this.children[toI])\n        (this.children[toI] as LineView).transferDOM(content[content.length - 1] as LineView)\n      this.replaceRange(fromI, fromOff, toI, toOff, content)\n    }\n  }\n\n  private contentBetween(from: number, to: number, viewports: A<Viewport>,\n                         mkGap: (from: number, to: number) => GapView): (GapView | LineView)[] {\n    let result: (GapView | LineView)[] = []\n    for (let i = 0, pos = 0; pos <= to; i++) {\n      let next = i < viewports.length ? viewports[i] : null\n      let start = next ? next.from : this.length\n      if (pos < to && start > from)\n        // Gap are always entirely in range because of the way this is\n        // called (between unchanged slices of text)\n        result.push(mkGap(pos + (i > 0 ? 1 : 0), start - (next ? 1 : 0)))\n      if (!next) break\n      let vpFrom = Math.max(from, next.from), vpTo = Math.min(to, next.to)\n      if (vpFrom <= vpTo) {\n        let content = ContentBuilder.build(this.state.doc, vpFrom, vpTo, this.decorations)\n        if (result.length == 0) result = content\n        else for (let line of content) result.push(line)\n      }\n      pos = next.to\n    }\n    return result\n  }\n\n  // Update a range by replacing it with new content. The caller is\n  // responsible for making sure that the inserted content 'fits'—that\n  // nodes on the sides match the type (gap or line) of the existing\n  // nodes there.\n  // When *Off is -1, that means \"this points at the position before\n  // *I, not actually into an existing node\"\n  private replaceRange(fromI: number, fromOff: number, toI: number, toOff: number,\n                       content: (GapView | LineView)[]) {\n    let start = fromOff > -1 ? this.children[fromI] as LineView : null\n    if (start && fromI == toI && content.length == 1) { // Change within single child\n      start.merge(fromOff, toOff, content[0] as LineView, fromOff == 0, this.composition)\n    } else {\n      let end = toOff > -1 ? this.children[toI] as LineView : null\n      if (end) {\n        let cLast = content[content.length - 1] as LineView, endPart = end\n        if (toOff > 0 || fromI == toI) {\n          endPart = end.split(toOff)\n          if (fromI != toI) end.transferDOM(endPart)\n        }\n        cLast.merge(cLast.length, cLast.length, endPart, false, this.composition)\n        toI++\n      }\n      if (start) {\n        start.merge(fromOff, start.length, content[0] as LineView, fromOff == 0, this.composition)\n        fromI++\n        content.shift()\n      }\n      if (fromI < toI || content.length)\n        this.replaceChildren(fromI, toI, content)\n    }\n  }\n\n  // Sync the DOM selection to this.state.selection\n  updateSelection(takeFocus: boolean = false) {\n    this.clearSelectionDirty()\n    if (!takeFocus && this.root.activeElement != this.dom) return\n\n    let primary = this.state.selection.primary\n    let anchor = this.domFromPos(primary.anchor)!\n    let head = this.domFromPos(primary.head)!\n\n    let domSel = this.root.getSelection()!\n    // If the selection is already here, or in an equivalent position, don't touch it\n    if (!this.forceSelectionUpdate &&\n        isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    this.forceSelectionUpdate = false\n\n    this.observer.ignore(() => {\n      // Selection.extend can be used to create an 'inverted' selection\n      // (one where the focus is before the anchor), but not all\n      // browsers support it yet.\n      if (domSel.extend) {\n        domSel.collapse(anchor.node, anchor.offset)\n        if (!primary.empty) domSel.extend(head.node, head.offset)\n      } else {\n        let range = document.createRange()\n        if (primary.anchor > primary.head) [anchor, head] = [head, anchor]\n        range.setEnd(head.node, head.offset)\n        range.setStart(anchor.node, anchor.offset)\n        domSel.removeAllRanges()\n        domSel.addRange(range)\n      }\n    })\n  }\n\n  heightAt(pos: number, bias: 1 | -1) {\n    return this.heightMap.heightAt(pos, this.state.doc, bias) + this.paddingTop\n  }\n\n  lineAtHeight(height: number): LineHeight {\n    return this.heightMap.lineAt(height - this.paddingTop, this.state.doc)\n  }\n\n  // Compute the new viewport and set of decorations, while giving\n  // plugin views the opportunity to respond to state and viewport\n  // changes. Might require more than one iteration to become stable.\n  // Passing update == null means the state didn't change\n  computeUpdate(transactions: A<Transaction>, state: EditorState, metadata: Slot[],\n                contentChanges: A<ChangedRange> = none,\n                bias: number, scrollIntoView: number): A<ChangedRange> {\n    for (let i = 0;; i++) {\n      let viewport = this.viewportState.getViewport(state.doc, this.heightMap, bias, scrollIntoView)\n      let viewportChange = this.viewport ? !viewport.eq(this.viewport) : true\n      // After 5 tries, or when the viewport is stable and no more iterations are needed, return\n      if (i == 5 || !(viewportChange || transactions.length || metadata.length)) {\n        if (i == 5) console.warn(\"Viewport and decorations failed to converge\")\n        return contentChanges\n      }\n      let prevState = this.state || state\n      this.view.updateStateInner(state, viewport, transactions, metadata)\n\n      let decorations = this.view.getEffect(ViewField.decorationEffect)\n      // If the decorations are stable, stop.\n      if (transactions.length == 0 && sameArray(decorations, this.decorations))\n        return contentChanges\n      // Compare the decorations (between document changes)\n      let {content, height} = decoChanges(transactions.length ? contentChanges : none, decorations,\n                                          this.decorations, prevState.doc)\n      this.decorations = decorations\n      // Update the heightmap with these changes. If this is the first\n      // iteration and the document changed, also include decorations\n      // for inserted ranges.\n      let heightChanges = extendWithRanges(none, height)\n      if (transactions.length) heightChanges = extendWithRanges(heightChanges, heightRelevantDecorations(decorations, contentChanges))\n      this.heightMap = this.heightMap.applyChanges(decorations, this.heightOracle, heightChanges)\n      // Accumulate content changes so that they can be redrawn\n      contentChanges = extendWithRanges(contentChanges, content)\n      // Make sure only one iteration is marked as required / state changing\n      transactions = metadata = none\n    }\n  }\n\n  focus() {\n    this.updateSelection(true)\n  }\n\n  cancelLayoutCheck() {\n    if (this.layoutCheckScheduled > -1) {\n      cancelAnimationFrame(this.layoutCheckScheduled)\n      this.layoutCheckScheduled = -1\n    }\n  }\n\n  forceLayout() {\n    if (this.layoutCheckScheduled > -1 && !this.view.updating) this.checkLayout()\n  }\n\n  checkLayout(forceFull = false) {\n    this.cancelLayoutCheck()\n    this.measureVerticalPadding()\n    let scrollIntoView = Math.min(this.scrollIntoView, this.state.doc.length)\n    this.scrollIntoView = -1\n    let scrollBias = 0\n    if (forceFull) this.viewportState.coverEverything()\n    else scrollBias = this.viewportState.updateFromDOM(this.dom, this.paddingTop)\n    if (this.viewportState.top >= this.viewportState.bottom) return // We're invisible!\n\n    let lineHeights: number[] | null = this.measureVisibleLineHeights(), refresh = false\n    if (this.heightOracle.mustRefresh(lineHeights)) {\n      let {lineHeight, charWidth} = this.measureTextSize()\n      refresh = this.heightOracle.refresh(getComputedStyle(this.dom).whiteSpace!,\n                                          lineHeight, charWidth, (this.dom).clientWidth / charWidth, lineHeights)\n    }\n\n    if (scrollIntoView > -1) this.scrollPosIntoView(scrollIntoView)\n\n    this.view.withUpdating(() => {\n      let updated: ViewSnapshot | null = null\n      for (let i = 0;; i++) {\n        this.heightOracle.heightChanged = false\n        this.heightMap = this.heightMap.updateHeight(\n          this.heightOracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights || this.measureVisibleLineHeights()))\n        let covered = this.viewportState.coveredBy(this.state.doc, this.viewport, this.heightMap, scrollBias)\n        if (covered && !this.heightOracle.heightChanged) break\n        if (!updated) updated = new ViewSnapshot(this.view)\n        if (i > 10) throw new Error(\"Layout failed to converge\")\n        let contentChanges = covered ? none : this.computeUpdate(none, this.state, none, none, scrollBias, -1)\n        this.updateInner(contentChanges, this.length)\n        lineHeights = null\n        refresh = false\n        scrollBias = 0\n        this.viewportState.updateFromDOM(this.dom, this.paddingTop)\n      }\n      if (updated) {\n        this.observer.listenForScroll()\n        this.view.updatePlugins(new ViewUpdate(updated, none, this.view, none))\n      }\n    })\n  }\n\n  scrollPosIntoView(pos: number) {\n    let rect = this.coordsAt(pos)\n    if (rect) scrollRectIntoView(this.dom, rect)\n  }\n\n  nearest(dom: Node): ContentView | null {\n    for (let cur: Node | null = dom; cur;) {\n      let domView = cur.cmView\n      if (domView && domView.rootView == this) return domView\n      cur = cur.parentNode\n    }\n    return null\n  }\n\n  posFromDOM(node: Node, offset: number): number {\n    let view = this.nearest(node)\n    if (!view) throw new RangeError(\"Trying to find position for a DOM position outside of the document\")\n    return view.localPosFromDOM(node, offset) + view.posAtStart\n  }\n\n  domFromPos(pos: number): {node: Node, offset: number} | null {\n    let {i, off} = new ChildCursor(this.children, this.length, 1).findPos(pos)\n    return this.children[i].domFromPos(off)\n  }\n\n  measureVisibleLineHeights() {\n    let result = [], {from, to} = this.viewport\n    for (let pos = 0, i = 0; pos <= to && i < this.children.length; i++) {\n      let child = this.children[i] as LineView\n      if (pos >= from) {\n        result.push(child.dom!.getBoundingClientRect().height)\n        let before = 0, after = 0\n        for (let w of child.widgets) {\n          let h = w.dom!.getBoundingClientRect().height\n          if (w.side > 0) after += h\n          else before += h\n        }\n        if (before) result.push(-2, before)\n        if (after) result.push(-1, after)\n      }\n      pos += child.length + 1\n    }\n    return result\n  }\n\n  measureVerticalPadding() {\n    let style = window.getComputedStyle(this.dom)\n    this.paddingTop = parseInt(style.paddingTop!) || 0\n    this.paddingBottom = parseInt(style.paddingBottom!) || 0\n  }\n\n  measureTextSize(): {lineHeight: number, charWidth: number} {\n    for (let child of this.children) {\n      if (child instanceof LineView) {\n        let measure = child.measureTextSize()\n        if (measure) return measure\n      }\n    }\n    // If no workable line exists, force a layout of a measurable element\n    let dummy = document.createElement(\"div\"), lineHeight!: number, charWidth!: number\n    dummy.style.cssText = \"contain: strict\"\n    dummy.textContent = \"abc def ghi jkl mno pqr stu\"\n    this.observer.ignore(() => {\n      this.dom.appendChild(dummy)\n      let rect = clientRectsFor(dummy.firstChild!)[0]\n      lineHeight = dummy.getBoundingClientRect().height\n      charWidth = rect ? rect.width / 27 : 7\n      dummy.remove()\n    })\n    return {lineHeight, charWidth}\n  }\n\n  destroy() {\n    cancelAnimationFrame(this.layoutCheckScheduled)\n    this.observer.destroy()\n  }\n\n  clearSelectionDirty() {\n    if (this.selectionDirty != null) {\n      cancelAnimationFrame(this.selectionDirty)\n      this.selectionDirty = null\n    }\n  }\n\n  setSelectionDirty() {\n    this.observer.clearSelection()\n    if (this.selectionDirty == null)\n      this.selectionDirty = requestAnimationFrame(() => this.updateSelection())\n  }\n\n  startComposition() {\n    if (this.composing == Composing.ending) {\n      this.observer.flush()\n      if (this.composing == Composing.ending) {\n        clearTimeout(this.composeTimeout)\n        this.exitComposition()\n      }\n    }\n    if (this.composing == Composing.no) {\n      this.composing = Composing.starting\n      this.composeTimeout = setTimeout(() => this.enterComposition(), 20)\n    }\n  }\n\n  endComposition() {\n    if (this.composing == Composing.yes) {\n      this.composing = Composing.ending\n      this.composeTimeout = setTimeout(() => this.exitComposition(), 20)\n    } else if (this.composing == Composing.starting) {\n      clearTimeout(this.composeTimeout)\n      this.composing = Composing.no\n    }\n  }\n\n  commitComposition(changes: A<ChangedRange>): A<ChangedRange> {\n    if (this.composing == Composing.starting) {\n      clearTimeout(this.composeTimeout)\n      this.enterComposition()\n    } else if (this.composing == Composing.ending) {\n      clearTimeout(this.composeTimeout)\n      changes = this.clearComposition(changes)\n    }\n    return changes\n  }\n\n  enterComposition() {\n    // FIXME schedule a timeout that ends the composition (or at least\n    // our view of it) after a given inactive time?\n    let {focusNode, focusOffset} = this.root.getSelection()!\n    if (focusNode) {\n      // Enter adjacent nodes when necessary, looking for a text node\n      while (focusNode.nodeType == 1) {\n        if (focusOffset > 0) {\n          focusNode = focusNode.childNodes[focusOffset - 1]\n          focusOffset = maxOffset(focusNode)\n        } else if (focusOffset < focusNode.childNodes.length) {\n          focusNode = focusNode.childNodes[focusOffset]\n          focusOffset = 0\n        } else {\n          break\n        }\n      }\n      let view = this.nearest(focusNode)\n      if (view instanceof TextView)\n        this.composition = view.toCompositionView()\n      else if (focusNode.nodeType == 3 && view instanceof LineView)\n        this.composition = view.createCompositionViewAround(focusNode)\n    }\n    this.composing = this.composition ? Composing.yes : Composing.no\n  }\n\n  // Remove this.composition, if present, and set this.composing to\n  // no. Return a range that covers the composition's extent (which'll\n  // have to be redrawn to turn it into regular view nodes) when a\n  // composition was removed.\n  clearComposition(changes: A<ChangedRange>): A<ChangedRange> {\n    let composition = this.composition\n    this.composition = null\n    this.composing = Composing.no\n    if (composition && composition.rootView == this) {\n      let from = composition.posAtStart, to = from + composition.length\n      changes = new ChangedRange(from, to, ChangedRange.mapPos(from, -1, changes),\n                                 ChangedRange.mapPos(to, 1, changes)).addToSet(changes.slice())\n    }\n    return changes\n  }\n\n  exitComposition() {\n    let ranges = this.clearComposition(none)\n    if (ranges.length) this.observer.ignore(() => {\n      this.updateInner(ranges, this.length)\n    })\n  }\n}\n\n// Browsers appear to reserve a fixed amount of bits for height\n// styles, and ignore or clip heights above that. For Chrome and\n// Firefox, this is in the 20 million range, so we try to stay below\n// that.\nconst MAX_NODE_HEIGHT = 1e7\n\nexport class GapView extends ContentView {\n  dom!: HTMLElement | null\n  parent!: DocView | null\n\n  constructor(public length: number, public height: number) { super() }\n\n  get children() { return none }\n\n  update(length: number, height: number) {\n    this.length = length\n    if (this.height != height) {\n      this.height = height\n      this.markDirty()\n    }\n    return this\n  }\n\n  syncInto(parent: HTMLElement, pos: Node | null): Node | null {\n    if (!this.dom) {\n      this.setDOM(document.createElement(\"div\"))\n      this.dom!.contentEditable = \"false\"\n    }\n    return super.syncInto(parent, pos)\n  }\n\n  sync() {\n    if (this.dirty) {\n      if (this.height < MAX_NODE_HEIGHT) {\n        this.dom!.style.height = this.height + \"px\"\n        while (this.dom!.firstChild) (this.dom!.firstChild as HTMLElement).remove()\n      } else {\n        this.dom!.style.height = \"\"\n        while (this.dom!.firstChild) (this.dom!.firstChild as HTMLElement).remove()\n        for (let remaining = this.height; remaining > 0; remaining -= MAX_NODE_HEIGHT) {\n          let elt = this.dom!.appendChild(document.createElement(\"div\"))\n          elt.style.height = Math.min(remaining, MAX_NODE_HEIGHT) + \"px\"\n        }\n      }\n      this.dirty = dirty.not\n    }\n  }\n\n  get overrideDOMText() {\n    return this.parent ? this.parent!.state.doc.sliceLines(this.posAtStart, this.posAtEnd) : [\"\"]\n  }\n\n  domBoundsAround() { return null }\n}\n\nfunction decoChanges(diff: A<ChangedRange>, decorations: A<DecorationSet>,\n                     oldDecorations: A<DecorationSet>, oldDoc: Text): {content: number[], height: number[]} {\n  let contentRanges: number[] = [], heightRanges: number[] = []\n  for (let i = decorations.length - 1; i >= 0; i--) {\n    let deco = decorations[i], oldDeco = i < oldDecorations.length ? oldDecorations[i] : Decoration.none\n    if (deco.size == 0 && oldDeco.size == 0) continue\n    let newRanges = findChangedRanges(oldDeco, deco, diff, oldDoc)\n    contentRanges = joinRanges(contentRanges, newRanges.content)\n    heightRanges = joinRanges(heightRanges, newRanges.height)\n  }\n  return {content: contentRanges, height: heightRanges}\n}\n\nfunction extendWithRanges(diff: A<ChangedRange>, ranges: number[]): A<ChangedRange> {\n  let result: ChangedRange[] = []\n  for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n    let next = dI == diff.length ? null : diff[dI], off = posA - posB\n    let end = next ? next.fromB : 2e9\n    while (rI < ranges.length && ranges[rI] < end) {\n      let from = ranges[rI], to = ranges[rI + 1]\n      let fromB = Math.max(posB, from), toB = Math.min(end, to)\n      if (fromB <= toB) new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result)\n      if (to > end) break\n      else rI += 2\n    }\n    if (!next) return result\n    new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result)\n    posA = next.toA; posB = next.toB\n  }\n}\n\nfunction sameArray<T>(a: A<T>, b: A<T>) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false\n  return true\n}\n\nfunction nextRange(viewports: A<Viewport>, pos: number): [boolean, number] {\n  for (let i = 0; i < viewports.length; i++) {\n    let {from, to} = viewports[i]\n    if (from > pos) return [false, from]\n    if (to > pos) return [true, to]\n  }\n  return [false, 2e9]\n}\n\n// Grows a set of ranges to include anything that wasn't drawn (as\n// lines) in both the old and new viewports.\nfunction rangesToUpdate(vpA: A<Viewport>, vpB: A<Viewport>, changes: A<ChangedRange>,\n                        lenB: number): ChangedRange[]  {\n  for (let i = 0, posA = 0, posB = 0, found: ChangedRange[] = [];; i++) {\n    let change = i < changes.length ? changes[i] : null\n    let nextB = change ? change.fromB : lenB\n    // Unchanged range posB to nextB\n    while (posB < nextB) {\n      let [insideA, toA] = nextRange(vpA, posA), [insideB, toB] = nextRange(vpB, posB)\n      let newB = Math.min(nextB, posB + (toA - posA), toB), newA = posA + (newB - posB)\n      if (!insideA || !insideB) new ChangedRange(posA, newA, posB, newB).addToSet(found)\n      posA = newA; posB = newB\n    }\n\n    if (!change) return found\n    change.addToSet(found)\n    posA = change.toA; posB = change.toB\n  }\n}\n","import {EditorView} from \"./editorview\"\nimport {LineView} from \"./lineview\"\nimport {InlineView, TextView, WidgetView} from \"./inlineview\"\nimport {Text as Doc, findColumn, countColumn, isExtendingChar} from \"../../doc/src\"\nimport {SelectionRange} from \"../../state/src\"\nimport {isEquivalentPosition, clientRectsFor} from \"./dom\"\nimport browser from \"./browser\"\n\ndeclare global {\n  interface Selection { modify(action: string, direction: string, granularity: string): void }\n  interface Document { caretPositionFromPoint(x: number, y: number): {offsetNode: Node, offset: number} }\n}\n\n// FIXME rename \"word\" to something more descriptive of what it actually does?\nexport function movePos(view: EditorView, start: number,\n                        direction: \"forward\" | \"backward\" | \"left\" | \"right\",\n                        granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\" = \"character\",\n                        action: \"move\" | \"extend\"): number {\n  let sel = view.root.getSelection()!\n  let context = LineContext.get(view, start)\n  let dir: 1 | -1 = direction == \"forward\" || direction == \"right\" ? 1 : -1\n  // Can only query native behavior when Selection.modify is\n  // supported, the cursor is well inside the rendered viewport, and\n  // we're not doing by-line motion on Gecko (which will mess up goal\n  // column motion)\n  if (sel.modify && context && !context.nearViewportEnd(view) && view.hasFocus() &&\n      granularity != \"word\" &&\n      !(granularity == \"line\" && (browser.gecko || view.state.selection.ranges.length > 1))) {\n    return view.docView.observer.ignore(() => {\n      let prepared = context!.prepareForQuery(view, start)\n      let startDOM = view.docView.domFromPos(start)!\n      let equiv = (!browser.chrome || prepared.lines.length == 0) &&\n        isEquivalentPosition(startDOM.node, startDOM.offset, sel.focusNode, sel.focusOffset) && false\n      // Firefox skips an extra character ahead when extending across\n      // an uneditable element (but not when moving)\n      if (prepared.atWidget && browser.gecko && action == \"extend\") action = \"move\"\n      if (action == \"move\" && !(equiv && sel.isCollapsed)) sel.collapse(startDOM.node, startDOM.offset)\n      else if (action == \"extend\" && !equiv) sel.extend(startDOM.node, startDOM.offset)\n      sel.modify(action, direction, granularity)\n      view.docView.setSelectionDirty()\n      let result = view.docView.posFromDOM(sel.focusNode, sel.focusOffset)\n      context!.undoQueryPreparation(view, prepared)\n      return result\n    })\n  } else if (granularity == \"character\") {\n    return moveCharacterSimple(start, dir, context, view.state.doc)\n  } else if (granularity == \"lineboundary\") {\n    if (context) return context.start + (dir < 0 ? 0 : context.line.length)\n    let line = view.state.doc.lineAt(start)\n    return dir < 0 ? line.start : line.end\n  } else if (granularity == \"line\") {\n    if (context && !context.nearViewportEnd(view, dir)) {\n      let startCoords = view.docView.coordsAt(start)!\n      let goal = getGoalColumn(view, start, startCoords.left)\n      for (let startY = dir < 0 ? startCoords.top : startCoords.bottom, dist = 5; dist < 50; dist += 10) {\n        let pos = posAtCoords(view, {x: goal.column, y: startY + dist * dir}, dir)\n        if (pos < 0) break\n        if (pos != start) {\n          goal.pos = pos\n          return pos\n        }\n      }\n    }\n    // Can't do a precise one based on DOM positions, fall back to per-column\n    return moveLineByColumn(view.state.doc, view.state.tabSize, start, dir)\n  } else if (granularity == \"word\") {\n    return moveWord(view, start, direction)\n  } else {\n    throw new RangeError(\"Invalid move granularity: \" + granularity)\n  }\n}\n\nfunction moveLineByColumn(doc: Doc, tabSize: number, pos: number, dir: -1 | 1): number {\n  let line = doc.lineAt(pos)\n  // FIXME also needs goal column?\n  let col = 0\n  for (const iter = doc.iterRange(line.start, pos); !iter.next().done;)\n    col = countColumn(iter.value, col, tabSize)\n  if (dir < 0 && line.start == 0) return 0\n  else if (dir > 0 && line.end == doc.length) return line.end\n  let otherLine = doc.line(line.number + dir)\n  let result = otherLine.start\n  let seen = 0\n  for (const iter = doc.iterRange(otherLine.start, otherLine.end); seen >= col && !iter.next().done;) {\n    const {offset, leftOver} = findColumn(iter.value, seen, col, tabSize)\n    seen = col - leftOver\n    result += offset\n  }\n  return result\n}\n\nfunction moveCharacterSimple(start: number, dir: 1 | -1, context: LineContext | null, doc: Doc): number {\n  if (context == null) {\n    for (let pos = start;; pos += dir) {\n      if (pos == 0 || pos == doc.length) return pos\n      if (!isExtendingChar((dir < 0 ? doc.slice(pos - 1, pos) : doc.slice(pos, pos + 1)))) {\n        if (dir < 0) return pos - 1\n        else if (pos != start) return pos\n      }\n    }\n  }\n  for (let {i, off} = context.line.childPos(start - context.start), {children} = context.line, pos = start;;) {\n    if (off == (dir < 0 || i == children.length ? 0 : children[i].length)) {\n      i += dir\n      if (i < 0 || i >= children.length) // End/start of line\n        return Math.max(0, Math.min(doc.length, pos + (start == pos ? dir : 0)))\n      off = dir < 0 ? children[i].length : 0\n    }\n    let inline = children[i]\n    if (inline instanceof TextView) {\n      if (!isExtendingChar(inline.text.charAt(off - (dir < 0 ? 1 : 0)))) {\n        if (dir < 0) return pos - 1\n        else if (pos != start) return pos\n      }\n      off += dir; pos += dir\n    } else if (inline.length > 0) {\n      return pos - off + (dir < 0 ? 0 : inline.length)\n    }\n  }\n}\n\nfunction moveWord(view: EditorView, start: number, direction: \"forward\" | \"backward\" | \"left\" | \"right\") {\n  let {doc} = view.state\n  for (let pos = start, i = 0;; i++) {\n    let next = movePos(view, pos, direction, \"character\", \"move\")\n    if (next == pos) return pos // End of document\n    if (doc.sliceLines(Math.min(next, pos), Math.max(next, pos)).length > 1) return next // Crossed a line boundary\n    let group = SelectionRange.groupAt(view.state, next, next > pos ? -1 : 1)\n    let away = pos < group.from && pos > group.to\n    // If the group is away from its start position, we jumped over a\n    // bidi boundary, and should take the side closest (in index\n    // coordinates) to the start position\n    let start = away ? pos < group.head : group.from == pos ? false : group.to == pos ? true : next < pos\n    pos = start ? group.from : group.to\n    if (i > 0 || /\\S/.test(doc.slice(group.from, group.to))) return pos\n    next = Math.max(0, Math.min(doc.length, pos + (start ? -1 : 1)))\n  }\n}\n\nfunction getGoalColumn(view: EditorView, pos: number, column: number): {pos: number, column: number} {\n  for (let goal of view.inputState.goalColumns)\n    if (goal.pos == pos) return goal\n  let goal = {pos: 0, column}\n  view.inputState.goalColumns.push(goal)\n  return goal\n}\n\nexport class LineContext {\n  constructor(public line: LineView, public start: number, public index: number) {}\n\n  static get(view: EditorView, pos: number): LineContext | null {\n    for (let i = 0, off = 0;; i++) {\n      let line = view.docView.children[i], end = off + line.length\n      if (end >= pos)\n        return line instanceof LineView ? new LineContext(line, off, i) : null\n      off = end + 1\n    }\n  }\n\n\n  nearViewportEnd(view: EditorView, side: number = 0): boolean {\n    for (let {from, to} of view.docView.viewports)\n      if (from > 0 && from == this.start && side <= 0 ||\n          to < view.state.doc.length && to == this.start + this.line.length && side >= 0)\n        return true\n    return false\n  }\n\n  // FIXME limit the amount of work in character motion in non-bidi\n  // context? or not worth it?\n  prepareForQuery(view: EditorView, pos: number) {\n    let linesToSync: LineView[] = [], atWidget = false\n    function maybeHide(view: InlineView) {\n      if (!(view instanceof TextView)) atWidget = true\n      if (view.length > 0) return false\n      ;(view.dom as any).remove()\n      if (linesToSync.indexOf(view.parent as LineView) < 0) linesToSync.push(view.parent as LineView)\n      return true\n    }\n    let {i, off} = this.line.childPos(pos - this.start)\n    if (off == 0) {\n      for (let j = i; j < this.line.children.length; j++) if (!maybeHide(this.line.children[j])) break\n      for (let j = i; j > 0; j--) if (!maybeHide(this.line.children[j - 1])) break\n    }\n    function addForLine(line: LineView, omit: number = -1) {\n      if (line.children.length == 0) return\n      for (let i = 0, off = 0; i <= line.children.length; i++) {\n        let next = i == line.children.length ? null : line.children[i]\n        if ((!next || !(next instanceof TextView)) && off != omit &&\n            (i == 0 || !(line.children[i - 1] instanceof TextView))) {\n          line.dom!.insertBefore(document.createTextNode(\"\\u200b\"), next ? next.dom : null)\n          if (linesToSync.indexOf(line) < 0) linesToSync.push(line)\n        }\n        if (next) off += next.length\n      }\n    }\n    if (this.index > 0)\n      addForLine(this.line.parent!.children[this.index - 1] as LineView)\n    addForLine(this.line, pos - this.start)\n    if (this.index < this.line.parent!.children.length - 1)\n      addForLine(this.line.parent!.children[this.index + 1] as LineView)\n    return {lines: linesToSync, atWidget}\n  }\n\n  undoQueryPreparation(view: EditorView, toSync: {lines: LineView[]}) {\n    for (let line of toSync.lines) line.syncDOMChildren()\n  }\n}\n\n\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n\n// FIXME holding arrow-up/down at the end of the viewport is a rather\n// common use case that will repeatedly trigger this code. Maybe\n// introduce some element of binary search after all?\n\nfunction getdx(x: number, rect: ClientRect): number {\n  return rect.left > x ? rect.left - x : Math.max(0, x - rect.right)\n}\nfunction getdy(y: number, rect: ClientRect): number {\n  return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom)\n}\nfunction yOverlap(a: ClientRect, b: ClientRect): boolean {\n  return a.top < b.bottom - 1 && a.bottom > b.top + 1\n}\nfunction upTop(rect: ClientRect, top: number): ClientRect {\n  return top < rect.top ? {top, left: rect.left, right: rect.right, bottom: rect.bottom} as ClientRect : rect\n}\nfunction upBot(rect: ClientRect, bottom: number): ClientRect {\n  return bottom > rect.bottom ? {top: rect.top, left: rect.left, right: rect.right, bottom} as ClientRect : rect\n}\n\nfunction domPosAtCoords(parent: HTMLElement, x: number, y: number): {node: Node, offset: number} {\n  let closest, closestRect, closestX!: number, closestY!: number\n  let above, below, aboveRect, belowRect\n  for (let child: Node | null = parent.firstChild; child; child = child.nextSibling) {\n    let rects = clientRectsFor(child)\n    for (let i = 0; i < rects.length; i++) {\n      let rect: ClientRect = rects[i]\n      if (closestRect && yOverlap(closestRect, rect))\n        rect = upTop(upBot(rect, closestRect.bottom), closestRect.top)\n      let dx = getdx(x, rect), dy = getdy(y, rect)\n      if (dx == 0 && dy == 0)\n        return child.nodeType == 3 ? domPosInText(child as Text, x, y) : domPosAtCoords(child as HTMLElement, x, y)\n      if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n        closest = child; closestRect = rect; closestX = dx; closestY = dy\n      }\n      if (dx == 0) {\n        if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) { above = child; aboveRect = rect }\n        else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) { below = child; belowRect = rect }\n      } else if (aboveRect && yOverlap(aboveRect, rect)) {\n        aboveRect = upBot(aboveRect, rect.bottom)\n      } else if (belowRect && yOverlap(belowRect, rect)) {\n        belowRect = upTop(belowRect, rect.top)\n      }\n    }\n  }\n  if (aboveRect && aboveRect.bottom >= y) { closest = above; closestRect = aboveRect }\n  else if (belowRect && belowRect.top <= y) { closest = below; closestRect = belowRect }\n\n  if (!closest) return {node: parent, offset: 0}\n  let clipX = Math.max(closestRect!.left, Math.min(closestRect!.right, x))\n  if (closest.nodeType == 3) return domPosInText(closest as Text, clipX, y)\n  if (!closestX && (closest as HTMLElement).contentEditable == \"true\")\n    domPosAtCoords(closest as HTMLElement, clipX, y)\n  let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n    (x >= (closestRect!.left + closestRect!.right) / 2 ? 1 : 0)\n  return {node: parent, offset}\n}\n\nfunction domPosInText(node: Text, x: number, y: number): {node: Node, offset: number} {\n  let len = node.nodeValue!.length, range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rects = range.getClientRects()\n    for (let j = 0; j < rects.length; j++) {\n      let rect = rects[j]\n      if (rect.top == rect.bottom) continue\n      if (rect.left - 1 <= x && rect.right + 1 >= x &&\n          rect.top - 1 <= y && rect.bottom + 1 >= y) {\n        let right = x >= (rect.left + rect.right) / 2, after = right\n        if (browser.chrome || browser.gecko) {\n          // Check for RTL on browsers that support getting client\n          // rects for empty ranges.\n          range.setEnd(node, i)\n          let rectBefore = range.getBoundingClientRect()\n          if (rectBefore.left == rect.right) after = !right\n        }\n        return {node, offset: i + (after ? 1 : 0)}\n      }\n    }\n  }\n  return {node, offset: 0}\n}\n\nexport function posAtCoords(view: EditorView, {x, y}: {x: number, y: number}, bias: -1 | 1 = -1): number {\n  let content = view.contentDOM.getBoundingClientRect(), heightLine\n  for (;;) {\n    heightLine = view.lineAtHeight(y - content.top)\n    if (heightLine.textTop > 0) {\n      if (bias > 0) y += heightLine.textTop + 1\n      else if (heightLine.start > 0) { y += heightLine.top - 1; continue }\n    } else if (heightLine.textBottom < 0) {\n      if (bias < 0) y += heightLine.textBottom - 1\n      else if (heightLine.end < view.state.doc.length) { y += heightLine.bottom + 1; continue }\n    }\n    break\n  }\n  let lineStart = heightLine.start\n  // If this is outside of the rendered viewport, we can't determine a position\n  if (lineStart < view.viewport.from)\n    return view.viewport.from == 0 ? 0 : -1\n  if (lineStart > view.viewport.to)\n    return view.viewport.to == view.state.doc.length ? view.state.doc.length : -1\n  // Clip x to the viewport sides\n  x = Math.max(content.left + 1, Math.min(content.right - 1, x))\n  let root = view.root, element = root.elementFromPoint(x, y)\n\n  // There's visible editor content under the point, so we can try\n  // using caret(Position|Range)FromPoint as a shortcut\n  let node: Node | undefined, offset: number = -1\n  if (element && view.contentDOM.contains(element) && !(view.docView.nearest(element) instanceof WidgetView)) {\n    if (root.caretPositionFromPoint) {\n      let pos = root.caretPositionFromPoint(x, y)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } else if (root.caretRangeFromPoint) {\n      let range = root.caretRangeFromPoint(x, y)\n      if (range) ({startContainer: node, startOffset: offset} = range)\n    }\n  }\n\n  // No luck, do our own (potentially expensive) search\n  if (!node) {\n    let {line} = LineContext.get(view, lineStart)!\n    ;({node, offset} = domPosAtCoords(line.dom!, x, y))\n  }\n  return view.docView.posFromDOM(node, offset)\n}\n","import {EditorSelection, SelectionRange, Transaction, ChangeSet, Change} from \"../../state/src\"\nimport {EditorView} from \"./editorview\"\nimport {focusChange, handleDOMEvents} from \"./extension\"\nimport browser from \"./browser\"\nimport {LineContext} from \"./cursor\"\n\n// This will also be where dragging info and such goes\nexport class InputState {\n  lastKeyCode: number = 0\n  lastKeyTime: number = 0\n  lastSelectionOrigin: string | null = null\n  lastSelectionTime: number = 0\n\n  registeredEvents: string[] = []\n  customHandlers: {[key: string]: ((view: EditorView, event: Event) => boolean)[]}\n\n  goalColumns: {pos: number, column: number}[] = []\n\n  mouseSelection: MouseSelection | null = null\n\n  setSelectionOrigin(origin: string) {\n    this.lastSelectionOrigin = origin\n    this.lastSelectionTime = Date.now()\n  }\n\n  constructor(view: EditorView) {\n    for (let type in handlers) {\n      let handler = handlers[type]\n      view.contentDOM.addEventListener(type, event => {\n        if (!eventBelongsToEditor(view, event)) return\n        if (this.runCustomHandlers(type, view, event)) event.preventDefault()\n        else handler(view, event)\n      })\n      this.registeredEvents.push(type)\n    }\n    // Must always run, even if a custom handler handled the event\n    view.contentDOM.addEventListener(\"keydown\", event => {\n      view.inputState.lastKeyCode = event.keyCode\n      view.inputState.lastKeyTime = Date.now()\n    })\n    if (view.root.activeElement == view.contentDOM) view.dom.classList.add(\"codemirror-focused\")\n\n    this.customHandlers = customHandlers(view)\n    for (let type in this.customHandlers) {\n      if (this.registeredEvents.indexOf(type) < 0) {\n        this.registeredEvents.push(type)\n        view.contentDOM.addEventListener(type, event => {\n          if (!eventBelongsToEditor(view, event)) return\n          if (this.runCustomHandlers(type, view, event)) event.preventDefault()\n        })\n      }\n    }\n  }\n\n  runCustomHandlers(type: string, view: EditorView, event: Event): boolean {\n    let handlers = this.customHandlers[type]\n    if (handlers) for (let handler of handlers)\n      if (handler(view, event) || event.defaultPrevented) return true\n    return false\n  }\n\n  startMouseSelection(view: EditorView, event: MouseEvent, update: MouseSelectionUpdate) {\n    if (this.mouseSelection) this.mouseSelection.destroy()\n    this.mouseSelection = new MouseSelection(this, view, event, update)\n  }\n\n  update(transactions: Transaction[]) {\n    if (this.mouseSelection)\n      this.mouseSelection.map(transactions.reduce((set, tr) => set.appendSet(tr.changes), ChangeSet.empty))\n    this.lastKeyCode = this.lastSelectionTime = 0\n  }\n\n  destroy() {\n    if (this.mouseSelection) this.mouseSelection.destroy()\n  }\n}\n\nexport type MouseSelectionUpdate = (view: EditorView, startSelection: EditorSelection,\n                                    startPos: number, startBias: -1 | 1,\n                                    curPos: number, curBias: -1 | 1,\n                                    extend: boolean, multiple: boolean) => EditorSelection\n\nclass MouseSelection {\n  dragging: null | false | SelectionRange\n  startSelection: EditorSelection\n  startPos: number\n  startBias: -1 | 1\n  curPos: number\n  curBias: -1 | 1\n  extend: boolean\n  multiple: boolean\n  dragMove: boolean\n\n  constructor(private inputState: InputState, private view: EditorView, event: MouseEvent,\n              private update: MouseSelectionUpdate) {\n    let doc = view.contentDOM.ownerDocument!\n    doc.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    doc.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n\n    // FIXME make these configurable somehow\n    this.extend = event.shiftKey\n    this.multiple = view.state.multipleSelections && (browser.mac ? event.metaKey : event.ctrlKey)\n    this.dragMove = !(browser.mac ? event.altKey : event.ctrlKey)\n\n    this.startSelection = view.state.selection\n    let {pos, bias} = this.queryPos(event)\n    this.startPos = this.curPos = pos\n    this.startBias = this.curBias = bias\n    this.dragging = isInPrimarySelection(view, this.startPos, event) ? null : false\n    // When clicking outside of the selection, immediately apply the\n    // effect of starting the selection\n    if (this.dragging === false) {\n      event.preventDefault()\n      this.select()\n    }\n  }\n\n  queryPos(event: MouseEvent): {pos: number, bias: 1 | -1} {\n    let pos = this.view.posAtCoords({x: event.clientX, y: event.clientY})\n    let coords = this.view.coordsAtPos(pos)\n    let bias: 1 | -1 = !coords ? 1 :\n      coords.top > event.clientY ? -1 :\n      coords.bottom < event.clientY ? 1 :\n      coords.left > event.clientX ? -1 : 1\n    return {pos, bias}\n  }\n\n  move(event: MouseEvent) {\n    if (event.buttons == 0) return this.destroy()\n    if (this.dragging !== false) return\n    let {pos, bias} = this.queryPos(event)\n    if (pos == this.curPos && bias == this.curBias) return\n    this.curPos = pos; this.curBias = bias\n    this.select()\n  }\n\n  up(event: MouseEvent) {\n    if (this.dragging == null) this.select()\n    this.destroy()\n  }\n\n  destroy() {\n    let doc = this.view.contentDOM.ownerDocument!\n    doc.removeEventListener(\"mousemove\", this.move)\n    doc.removeEventListener(\"mouseup\", this.up)\n    this.inputState.mouseSelection = null\n  }\n\n  select() {\n    let selection = this.update(this.view, this.startSelection, this.startPos, this.startBias,\n                                this.curPos, this.curBias, this.extend, this.multiple)\n    if (!selection.eq(this.view.state.selection))\n      this.view.dispatch(this.view.state.transaction.setSelection(selection)\n                         .addMeta(Transaction.userEvent(\"pointer\")))\n  }\n\n  map(changes: ChangeSet) {\n    if (changes.length) {\n      this.startSelection = this.startSelection.map(changes)\n      this.startPos = changes.mapPos(this.startPos)\n      this.curPos = changes.mapPos(this.curPos)\n    }\n    if (this.dragging) this.dragging = this.dragging.map(changes)\n  }\n}\n\nfunction isInPrimarySelection(view: EditorView, pos: number, event: MouseEvent) {\n  let {primary} = view.state.selection\n  if (primary.empty) return false\n  if (pos < primary.from || pos > primary.to) return false\n  if (pos > primary.from && pos < primary.to) return true\n  // On boundary clicks, check whether the coordinates are inside the\n  // selection's client rectangles\n  let sel = view.root.getSelection()!\n  if (sel.rangeCount == 0) return true\n  let rects = sel.getRangeAt(0).getClientRects()\n  for (let i = 0; i < rects.length; i++) {\n    let rect = rects[i]\n    if (rect.left <= event.clientX && rect.right >= event.clientX &&\n        rect.top <= event.clientY && rect.bottom >= event.clientY) return true\n  }\n  return false\n}\n\nfunction eventBelongsToEditor(view: EditorView, event: Event): boolean {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node: Node | null = event.target as Node; node != view.contentDOM; node = node.parentNode)\n    if (!node || node.nodeType == 11 || (node.cmView && node.cmView.ignoreEvent(event)))\n      return false\n  return true\n}\n\nfunction customHandlers(view: EditorView) {\n  let result = Object.create(null)\n  for (let handlers of view.behavior.get(handleDOMEvents)) {\n    for (let eventType in handlers)\n      (result[eventType] || (result[eventType] = [])).push(handlers[eventType])\n  }\n  return result\n}\n\nconst handlers: {[key: string]: (view: EditorView, event: any) => void} = Object.create(null)\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n  (browser.ios && browser.webkit_version < 604)\n\nfunction capturePaste(view: EditorView) {\n  let doc = view.dom.ownerDocument!\n  let target = doc.body.appendChild(doc.createElement(\"textarea\"))\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    doc.body.removeChild(target)\n    doPaste(view, target.value)\n  }, 50)\n}\n\nfunction doPaste(view: EditorView, text: string) {\n  view.dispatch(view.state.transaction.replaceSelection(text)\n                .addMeta(Transaction.userEvent(\"paste\")).scrollIntoView())\n}\n\nfunction mustCapture(event: KeyboardEvent): boolean {\n  const enum mod { ctrl = 1, alt = 2, shift = 4, meta = 8 }\n  let mods = (event.ctrlKey ? mod.ctrl : 0) | (event.metaKey ? mod.meta : 0) |\n    (event.altKey ? mod.alt : 0) | (event.shiftKey ? mod.shift : 0)\n  let code = event.keyCode, macCtrl = browser.mac && mods == mod.ctrl\n  return code == 8 || (macCtrl && code == 72) ||  // Backspace, Ctrl-h on Mac\n    code == 46 || (macCtrl && code == 68) || // Delete, Ctrl-d on Mac\n    code == 27 || // Esc\n    (mods == (browser.mac ? mod.meta : mod.ctrl) && // Ctrl/Cmd-[biyz]\n     (code == 66 || code == 73 || code == 89 || code == 90))\n}\n\nhandlers.keydown = (view, event: KeyboardEvent) => {\n  if (mustCapture(event)) event.preventDefault()\n  view.inputState.setSelectionOrigin(\"keyboard\")\n}\n\nhandlers.touchdown = handlers.touchmove = (view, event: MouseEvent) => {\n  view.inputState.setSelectionOrigin(\"pointer\")\n}\n\nhandlers.mousedown = (view, event: MouseEvent) => {\n  if (event.button == 0)\n    view.startMouseSelection(event, updateMouseSelection(event.detail))\n}\n\nfunction rangeForClick(view: EditorView, pos: number, bias: -1 | 1, type: number): SelectionRange {\n  if (type == 1) { // Single click\n    return new SelectionRange(pos)\n  } else if (type == 2) { // Double click\n    return SelectionRange.groupAt(view.state, pos, bias)\n  } else { // Triple click\n    let context = LineContext.get(view, pos)\n    if (context) return new SelectionRange(context.start + context.line.length, context.start)\n    let {start, end} = view.state.doc.lineAt(pos)\n    return new SelectionRange(start, end)\n  }\n}\n\nfunction updateMouseSelection(type: number): MouseSelectionUpdate {\n  return (view, startSelection, startPos, startBias, curPos, curBias, extend, multiple) => {\n    let range = rangeForClick(view, curPos, curBias, type)\n    if (startPos != curPos && !extend) {\n      let startRange = rangeForClick(view, startPos, startBias, type)\n      range = range.extend(Math.min(startRange.from, range.from), Math.max(startRange.to, range.to))\n    }\n    if (extend)\n      return startSelection.replaceRange(startSelection.primary.extend(range.from, range.to))\n    else if (multiple)\n      return startSelection.addRange(range)\n    else\n      return EditorSelection.create([range])\n  }\n}\n\nhandlers.dragstart = (view, event: DragEvent) => {\n  let {doc, selection: {primary}} = view.state\n  let {mouseSelection} = view.inputState\n  if (mouseSelection) mouseSelection.dragging = primary\n\n  if (event.dataTransfer) {\n    event.dataTransfer.setData(\"Text\", doc.slice(primary.from, primary.to))\n    event.dataTransfer.effectAllowed = \"copyMove\"\n  }\n}\n\nhandlers.drop = (view, event: DragEvent) => {\n  if (!event.dataTransfer) return\n\n  let dropPos = view.posAtCoords({x: event.clientX, y: event.clientY})\n  let text = event.dataTransfer.getData(\"Text\")\n  if (dropPos < 0 || !text) return\n\n  event.preventDefault()\n\n  let tr = view.state.transaction\n  let {mouseSelection} = view.inputState\n  if (mouseSelection && mouseSelection.dragging && mouseSelection.dragMove) {\n    tr = tr.replace(mouseSelection.dragging.from, mouseSelection.dragging.to, \"\")\n    dropPos = tr.changes.mapPos(dropPos)\n  }\n  let change = new Change(dropPos, dropPos, view.state.splitLines(text))\n  tr = tr.change(change)\n    .setSelection(EditorSelection.single(dropPos, dropPos + change.length))\n    .addMeta(Transaction.userEvent(\"drop\"))\n  view.focus()\n  view.dispatch(tr)\n}\n\nhandlers.paste = (view: EditorView, event: ClipboardEvent) => {\n  view.docView.observer.flush()\n  let data = brokenClipboardAPI ? null : event.clipboardData\n  let text = data && data.getData(\"text/plain\")\n  if (text) {\n    doPaste(view, text)\n    event.preventDefault()\n  } else {\n    capturePaste(view)\n  }\n}\n\nfunction captureCopy(view: EditorView, text: string) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  let doc = view.dom.ownerDocument!\n  let target = doc.body.appendChild(doc.createElement(\"textarea\"))\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.value = text\n  target.focus()\n  target.selectionEnd = text.length\n  target.selectionStart = 0\n  setTimeout(() => {\n    doc.body.removeChild(target)\n    view.focus()\n  }, 50)\n}\n\nhandlers.copy = handlers.cut = (view, event: ClipboardEvent) => {\n  let range = view.state.selection.primary\n  if (range.empty) return\n\n  let data = brokenClipboardAPI ? null : event.clipboardData\n  let text = view.state.joinLines(view.state.doc.sliceLines(range.from, range.to))\n  if (data) {\n    event.preventDefault()\n    data.clearData()\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, text)\n  }\n  if (event.type == \"cut\") {\n    view.dispatch(view.state.transaction.replaceSelection([\"\"]).scrollIntoView().addMeta(Transaction.userEvent(\"cut\")))\n  }\n}\n\nhandlers.focus = view => {\n  view.updateState([], view.state, [focusChange(true)])\n}\n\nhandlers.blur = view => {\n  view.updateState([], view.state, [focusChange(false)])\n}\n\nhandlers.beforeprint = view => {\n  view.docView.checkLayout(true)\n}\n\nhandlers.compositionstart = handlers.compositionupdate = view => {\n  view.docView.startComposition()\n}\n\nhandlers.compositionend = view => {\n  view.docView.endComposition()\n}\n","import {EditorView} from \"./editorview\"\nimport {selectionCollapsed} from \"./dom\"\nimport browser from \"./browser\"\nimport {EditorSelection, Change, Transaction} from \"../../state/src\"\n\nconst LINE_SEP = \"\\ufdda\" // A Unicode 'non-character', used to denote newlines internally\n\nexport function applyDOMChange(view: EditorView, start: number, end: number, typeOver: boolean): boolean {\n  let change, newSel\n  let sel = view.state.selection.primary, bounds\n  if (start > -1 && (bounds = view.docView.domBoundsAround(start, end, 0))) {\n    let {from, to} = bounds\n    let selPoints = selectionPoints(view.contentDOM, view.root), reader = new DOMReader(selPoints)\n    reader.readRange(bounds.startDOM, bounds.endDOM)\n    newSel = selectionFromPoints(selPoints, from)\n\n    let preferredPos = sel.from, preferredSide = null\n    // Prefer anchoring to end when Backspace is pressed\n    if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100) {\n      preferredPos = sel.to\n      preferredSide = \"end\"\n    }\n    let diff = findDiff(view.state.doc.slice(from, to, LINE_SEP), reader.text,\n                        preferredPos - from, preferredSide)\n    if (diff) change = new Change(from + diff.from, from + diff.toA,\n                                  reader.text.slice(diff.from, diff.toB).split(LINE_SEP))\n  } else if (view.hasFocus()) {\n    let domSel = view.root.getSelection()!\n    let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n    let anchor = selectionCollapsed(domSel) ? head :\n      view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset)\n    if (head != sel.head || anchor != sel.anchor)\n      newSel = EditorSelection.single(anchor, head)\n  }\n\n  if (!change && !newSel) return false\n\n  // Heuristic to notice typing over a selected character\n  if (!change && typeOver && !sel.empty && newSel && newSel.primary.empty)\n    change = new Change(sel.from, sel.to, view.state.doc.sliceLines(sel.from, sel.to))\n\n  if (change) {\n    let startState = view.state\n    // Android browsers don't fire reasonable key events for enter,\n    // backspace, or delete. So this detects changes that look like\n    // they're caused by those keys, and reinterprets them as key\n    // events.\n    if (browser.android &&\n        ((change.from == sel.from && change.to == sel.to &&\n          change.length == 1 && change.text.length == 2 &&\n          dispatchKey(view, \"Enter\", 10)) ||\n         (change.from == sel.from - 1 && change.to == sel.to && change.length == 0 &&\n          dispatchKey(view, \"Backspace\", 8)) ||\n         (change.from == sel.from && change.to == sel.to + 1 && change.length == 0 &&\n          dispatchKey(view, \"Delete\", 46))))\n      return view.state != startState\n\n    let tr = startState.transaction\n    if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3) {\n      let before = sel.from < change.from ? startState.doc.slice(sel.from, change.from, LINE_SEP) : \"\"\n      let after = sel.to > change.to ? startState.doc.slice(change.to, sel.to, LINE_SEP) : \"\"\n      tr = tr.replaceSelection((before + change.text.join(LINE_SEP) + after).split(LINE_SEP))\n    } else {\n      tr = tr.change(change)\n      if (newSel && !tr.selection.primary.eq(newSel.primary))\n        tr = tr.setSelection(tr.selection.replaceRange(newSel.primary))\n    }\n    view.dispatch(tr.scrollIntoView())\n    return true\n  } else if (newSel && !newSel.primary.eq(sel)) {\n    let tr = view.state.transaction.setSelection(newSel)\n    if (view.inputState.lastSelectionTime > Date.now() - 50) {\n      if (view.inputState.lastSelectionOrigin == \"keyboard\") tr = tr.scrollIntoView()\n      else tr = tr.addMeta(Transaction.userEvent(view.inputState.lastSelectionOrigin!))\n    }\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction findDiff(a: string, b: string, preferredPos: number, preferredSide: string | null)\n    : {from: number, toA: number, toB: number} | null {\n  let minLen = Math.min(a.length, b.length)\n  let from = 0\n  while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from)) from++\n  if (from == minLen && a.length == b.length) return null\n  let toA = a.length, toB = b.length\n  while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) { toA--; toB-- }\n\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, from - Math.min(toA, toB))\n    preferredPos -= toA + adjust - from\n  }\n  if (toA < from && a.length < b.length) {\n    let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0\n    from -= move\n    toB = from + (toB - toA)\n    toA = from\n  } else if (toB < from) {\n    let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0\n    from -= move\n    toA = from + (toA - toB)\n    toB = from\n  }\n  return {from, toA, toB}\n}\n\nclass DOMReader {\n  text: string = \"\"\n  constructor(private points: DOMPoint[]) {}\n\n  readRange(start: Node | null, end: Node | null) {\n    if (!start) return\n    let parent = start.parentNode!\n    for (let cur = start!;;) {\n      this.findPointBefore(parent, cur)\n      this.readNode(cur)\n      let next: Node | null = cur.nextSibling\n      if (next == end) break\n      if (isBlockNode(cur) || (isBlockNode(next!) && cur.nodeName != \"BR\")) this.text += LINE_SEP\n      cur = next!\n    }\n    this.findPointBefore(parent, end)\n  }\n\n  readNode(node: Node) {\n    if (node.cmIgnore) return\n    let view = node.cmView\n    let fromView = view && view.overrideDOMText\n    let text: string | undefined\n    if (fromView != null) text = fromView.join(LINE_SEP)\n    else if (node.nodeType == 3) text = node.nodeValue!\n    else if (node.nodeName == \"BR\") text = node.nextSibling ? LINE_SEP : \"\"\n    else if (node.nodeType == 1) this.readRange(node.firstChild, null)\n    if (text != null) {\n      this.findPointIn(node, text.length)\n      this.text += text\n    }\n  }\n\n  findPointBefore(node: Node, next: Node | null) {\n    for (let point of this.points)\n      if (point.node == node && node.childNodes[point.offset] == next)\n        point.pos = this.text.length\n  }\n\n  findPointIn(node: Node, maxLen: number) {\n    for (let point of this.points)\n      if (point.node == node)\n        point.pos = this.text.length + Math.min(point.offset, maxLen)\n  }\n}\n\nfunction isBlockNode(node: Node): boolean {\n  return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName)\n}\n\nclass DOMPoint {\n  pos: number = -1\n  constructor(readonly node: Node, readonly offset: number) {}\n}\n\nfunction selectionPoints(dom: HTMLElement, root: DocumentOrShadowRoot): DOMPoint[] {\n  let result: DOMPoint[] = []\n  if (root.activeElement != dom) return result\n  let {anchorNode, anchorOffset, focusNode, focusOffset} = root.getSelection()!\n  if (anchorNode) {\n    result.push(new DOMPoint(anchorNode, anchorOffset))\n    if (focusNode != anchorNode || focusOffset != anchorOffset)\n      result.push(new DOMPoint(focusNode, focusOffset))\n  }\n  return result\n}\n\nfunction selectionFromPoints(points: DOMPoint[], base: number): EditorSelection | null {\n  if (points.length == 0) return null\n  let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor\n  return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null\n}\n\nfunction dispatchKey(view: EditorView, name: string, code: number): boolean {\n  let options = {key: name, code: name, keyCode: code, which: code, cancelable: true}\n  let down = new KeyboardEvent(\"keydown\", options)\n  view.contentDOM.dispatchEvent(down)\n  let up = new KeyboardEvent(\"keyup\", options)\n  view.contentDOM.dispatchEvent(up)\n  return down.defaultPrevented || up.defaultPrevented\n}\n","import {EditorState, Transaction} from \"../../state/src\"\nimport {BehaviorStore, Slot} from \"../../extension/src/extension\"\nimport {StyleModule} from \"style-mod\"\n\nimport {DocView} from \"./docview\"\nimport {InputState, MouseSelectionUpdate} from \"./input\"\nimport {Rect} from \"./dom\"\nimport {applyDOMChange} from \"./domchange\"\nimport {movePos, posAtCoords} from \"./cursor\"\nimport {LineHeight} from \"./heightmap\"\nimport {Viewport} from \"./viewport\"\nimport {ViewExtension, ViewField, viewField, ViewUpdate, styleModule, ViewSnapshot,\n        viewPlugin, ViewPlugin, getField, Effect} from \"./extension\"\nimport {Attrs, combineAttrs, updateAttrs} from \"./attributes\"\n\nexport interface EditorConfig {\n  state: EditorState,\n  extensions?: ViewExtension[],\n  root?: Document | ShadowRoot,\n  dispatch?: (tr: Transaction) => void\n}\n\nexport class EditorView {\n  public state!: EditorState\n  public viewport!: Viewport\n\n  dispatch: (tr: Transaction) => void\n  root: DocumentOrShadowRoot\n\n  readonly dom: HTMLElement\n  readonly contentDOM: HTMLElement\n\n  // @internal\n  inputState!: InputState\n\n  // @internal\n  readonly docView: DocView\n\n  readonly behavior!: BehaviorStore\n  // @internal\n  fields!: ReadonlyArray<ViewField<any>>\n  // @internal\n  fieldValues!: any[]\n  private plugins: ViewPlugin[] = []\n  private editorAttrs: AttrsFor\n  private contentAttrs: AttrsFor\n\n  // @internal\n  updating: boolean = false\n\n  constructor(config: EditorConfig) {\n    this.contentDOM = document.createElement(\"div\")\n    let tabSizeStyle = (this.contentDOM.style as any).tabSize != null ? \"tab-size: \" : \"-moz-tab-size: \"\n    this.contentAttrs = new AttrsFor(ViewField.contentAttributeEffect, this.contentDOM, () => ({\n      spellcheck: \"false\",\n      contenteditable: \"true\",\n      class: \"codemirror-content \" + styles.content,\n      style: tabSizeStyle + this.state.tabSize\n    }))\n\n    this.dom = document.createElement(\"div\")\n    this.dom.appendChild(this.contentDOM)\n    this.editorAttrs = new AttrsFor(ViewField.editorAttributeEffect, this.dom, view => ({\n      class: \"codemirror \" + styles.wrapper + (view.hasFocus() ? \" codemirror-focused\" : \"\")\n    }))\n\n    this.dispatch = config.dispatch || ((tr: Transaction) => this.updateState([tr], tr.apply()))\n    this.root = (config.root || document) as DocumentOrShadowRoot\n\n    this.docView = new DocView(this, (start, end, typeOver) => applyDOMChange(this, start, end, typeOver))\n    this.setState(config.state, config.extensions)\n  }\n\n  setState(state: EditorState, extensions: ViewExtension[] = []) {\n    for (let plugin of this.plugins) if (plugin.destroy) plugin.destroy()\n    this.withUpdating(() => {\n      ;(this as any).behavior = ViewExtension.resolve(extensions.concat(state.behavior.foreign))\n      this.fields = this.behavior.get(viewField)\n      StyleModule.mount(this.root, styles)\n      for (let s of this.behavior.get(styleModule)) StyleModule.mount(this.root, s)\n      if (this.behavior.foreign.length)\n        throw new Error(\"Non-ViewExtension extensions found when setting view state\")\n      this.inputState = new InputState(this)\n      this.docView.init(state)\n      this.plugins = this.behavior.get(viewPlugin).map(spec => spec(this))\n      this.contentAttrs.update(this)\n      this.editorAttrs.update(this)\n    })\n  }\n\n  // FIXME rename this to update at some point, make state implicit in transactions\n  updateState(transactions: Transaction[], state: EditorState, metadata: Slot[] = []) {\n    if (transactions.length && transactions[0].startState != this.state)\n      throw new RangeError(\"Trying to update state with a transaction that doesn't start from the current state.\")\n    this.withUpdating(() => {\n      let snapshot = new ViewSnapshot(this)\n      if (state.doc != this.state.doc || transactions.some(tr => tr.selectionSet && !tr.getMeta(Transaction.preserveGoalColumn)))\n        this.inputState.goalColumns.length = 0\n      this.docView.update(transactions, state, metadata,\n                          transactions.some(tr => tr.scrolledIntoView) ? state.selection.primary.head : -1)\n      this.inputState.update(transactions)\n      this.updatePlugins(new ViewUpdate(snapshot, transactions, this, metadata))\n      this.contentAttrs.update(this)\n      this.editorAttrs.update(this)\n    })\n  }\n\n  // @internal\n  updatePlugins(update: ViewUpdate) {\n    for (let plugin of this.plugins) if (plugin.update) plugin.update(update)\n  }\n\n  // @internal\n  updateStateInner(state: EditorState, viewport: Viewport, transactions: ReadonlyArray<Transaction>, metadata: ReadonlyArray<Slot>) {\n    if (this.fieldValues) {\n      let snapshot = new ViewSnapshot(this)\n      this.viewport = viewport\n      this.state = state\n      this.fieldValues = []\n      let update = new ViewUpdate(snapshot, transactions, this, metadata)\n      for (let i = 0; i < this.fields.length; i++)\n        this.fieldValues.push(this.fields[i].update(snapshot.fieldValues[i], update))\n    } else {\n      this.viewport = viewport\n      this.state = state\n      this.fieldValues = []\n      for (let field of this.fields) this.fieldValues.push(field.create(this))\n    }\n  }\n\n  // @internal\n  withUpdating(f: () => void) {\n    if (this.updating)\n      throw new Error(\"Calls to EditorView.updateState or EditorView.setState are not allowed in extension update or create methods\")\n    this.updating = true\n    try { f() }\n    finally { this.updating = false }\n  }\n\n  getField<T>(field: ViewField<T>): T;\n  getField<T, D = undefined>(field: ViewField<T>, defaultValue?: D): T | D {\n    return getField(field, this.fields, this.fieldValues, defaultValue)\n  }\n\n  getEffect<V>(type: Effect<V>): ReadonlyArray<V> {\n    let result: V[] = []\n    for (let i = 0; i < this.fieldValues.length; i++) {\n      let accessor = Slot.get(type, this.fields[i].effects)\n      if (accessor) result.push(accessor(this.fieldValues[i]) as V)\n    }\n    return result\n  }\n\n  domAtPos(pos: number): {node: Node, offset: number} | null {\n    return this.docView.domFromPos(pos)\n  }\n\n  heightAtPos(pos: number, top: boolean): number {\n    this.docView.forceLayout()\n    return this.docView.heightAt(pos, top ? -1 : 1)\n  }\n\n  lineAtHeight(height: number): LineHeight {\n    this.docView.forceLayout()\n    return this.docView.lineAtHeight(height)\n  }\n\n  get contentHeight() {\n    return this.docView.heightMap.height + this.docView.paddingTop + this.docView.paddingBottom\n  }\n\n  movePos(start: number, direction: \"forward\" | \"backward\" | \"left\" | \"right\",\n          granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\" = \"character\",\n          action: \"move\" | \"extend\" = \"move\"): number {\n    return movePos(this, start, direction, granularity, action)\n  }\n\n  posAtCoords(coords: {x: number, y: number}): number {\n    this.docView.forceLayout()\n    return posAtCoords(this, coords)\n  }\n\n  coordsAtPos(pos: number): Rect | null { return this.docView.coordsAt(pos) }\n\n  get defaultCharacterWidth() { return this.docView.heightOracle.charWidth }\n  get defaultLineHeight() { return this.docView.heightOracle.lineHeight }\n\n  viewportLines(f: (height: LineHeight) => void) {\n    let {from, to} = this.viewport\n    this.docView.heightMap.forEachLine(from, to, 0, this.docView.heightOracle, f)\n  }\n\n  startMouseSelection(event: MouseEvent, update: MouseSelectionUpdate) {\n    this.focus()\n    this.inputState.startMouseSelection(this, event, update)\n  }\n\n  hasFocus(): boolean {\n    return this.root.activeElement == this.contentDOM\n  }\n\n  focus() {\n    this.docView.focus()\n  }\n\n  destroy() {\n    for (let plugin of this.plugins) if (plugin.destroy) plugin.destroy()\n    this.inputState.destroy()\n    this.dom.remove()\n    this.docView.destroy()\n  }\n}\n\nclass AttrsFor {\n  attrs: Attrs | null = null\n\n  constructor(private effect: (accessor: (field: any) => (Attrs | null)) => Slot,\n              private dom: HTMLElement,\n              private deflt: (view: EditorView) => Attrs) {}\n\n  update(view: EditorView) {\n    let attrs = this.deflt(view)\n    for (let spec of view.getEffect(this.effect)) if (spec) attrs = combineAttrs(spec, attrs)\n    updateAttrs(this.dom, this.attrs, attrs)\n    this.attrs = attrs\n  }\n}\n\nconst styles = new StyleModule({\n  wrapper: {\n    position: \"relative !important\",\n    display: \"flex !important\",\n    alignItems: \"flex-start !important\",\n    fontFamily: \"monospace\",\n    lineHeight: 1.4,\n\n    \"&.codemirror-focused\": {\n      // FIXME it would be great if we could directly use the browser's\n      // default focus outline, but it appears we can't, so this tries to\n      // approximate that\n      outline_fallback: \"1px dotted #212121\",\n      outline: \"5px auto -webkit-focus-ring-color\"\n    }\n  },\n\n  content: {\n    margin: 0,\n    flexGrow: 2,\n    minHeight: \"100%\",\n    display: \"block\",\n    whiteSpace: \"pre\",\n    boxSizing: \"border-box\",\n\n    padding: \"4px 2px 4px 4px\",\n    outline: \"none\",\n    caretColor: \"black\",\n\n    \"& codemirror-line\": {\n      display: \"block\"\n    }\n  }\n}, {priority: 0})\n","var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\nexports.base = base\n\nvar shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \";\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\nexports.shift = shift\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexports.keyName = function(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    safari && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import {base, keyName} from \"w3c-keyname\"\nimport {EditorView, handleDOMEvents} from \"../../view/src\"\n\nexport type Command = (view: EditorView) => boolean\nexport type Keymap = {[key: string]: Command}\n\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name: string): string {\n  const parts = name.split(/-(?!$)/)\n  let result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map: Keymap): Keymap {\n  const copy = Object.create(null)\n  for (const prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name: string, event: KeyboardEvent, shift: boolean) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// Behavior for defining keymaps\n//\n// Specs are objects that map key names to command-style functions,\n// which will be called with an editor view and should return true\n// when they've handled the key.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key identifier\n// prefixed with zero or more modifiers. Key identifiers are based on\n// the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap behaviors to an editor. Their\n// priorities determine their precedence (the ones specified early or\n// with high priority get to dispatch first).\nexport const keymap = (map: Keymap) => handleDOMEvents({\n  keydown: keydownHandler(normalize(map))\n})\n\nfunction keydownHandler(map: Keymap): (view: EditorView, event: KeyboardEvent) => boolean {\n  return function(view, event) {\n    const name = keyName(event), isChar = name.length == 1 && name != \" \"\n    const direct = map[modifiers(name, event, !isChar)]\n    let baseName\n    if (direct && direct(view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      const fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view)) return true\n    }\n    return false\n  }\n}\n","import {ChangeSet, ChangeDesc, Transaction, EditorSelection} from \"../../state/src\"\n\nclass Item {\n  constructor(readonly map: ChangeSet<ChangeDesc>,\n              readonly inverted: ChangeSet | null = null,\n              readonly selection: EditorSelection | null = null) {}\n  get isChange(): boolean { return this.inverted != null }\n}\nexport const enum ItemFilter { OnlyChanges, Any }\n\ntype Branch = ReadonlyArray<Item>\n\nfunction updateBranch(branch: Branch, to: number, maxLen: number, newItem: Item) {\n  let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0\n  let newBranch = branch.slice(start, to)\n  newBranch.push(newItem)\n  return newBranch\n}\n\nfunction isAdjacent(prev: ChangeDesc | null, cur: ChangeDesc): boolean {\n  return !!prev && cur.from <= prev.mapPos(prev.to, 1) && cur.to >= prev.mapPos(prev.from)\n}\n\nfunction addChanges(branch: Branch, changes: ChangeSet, inverted: ChangeSet | null,\n                    selectionBefore: EditorSelection, maxLen: number,\n                    mayMerge: (prevItem: Item) => boolean): Branch {\n  if (branch.length) {\n    const lastItem = branch[branch.length - 1]\n    if (lastItem.selection && lastItem.isChange == Boolean(inverted) && mayMerge(lastItem))\n      return inverted ? updateBranch(branch, branch.length - 1, maxLen, new Item(lastItem.map.appendSet(changes.desc), inverted.appendSet(lastItem.inverted!), lastItem.selection)) : branch\n  }\n  return updateBranch(branch, branch.length, maxLen, new Item(changes.desc, inverted, selectionBefore))\n}\n\nfunction popChanges(branch: Branch, only: ItemFilter): {changes: ChangeSet, branch: Branch, selection: EditorSelection} {\n  let map: ChangeSet<ChangeDesc> | null = null\n  let idx = branch.length - 1\n  for (;; idx--) {\n    if (idx < 0) throw new RangeError(\"popChanges called on empty branch\")\n    let entry = branch[idx]\n    if (entry.isChange || (only == ItemFilter.Any && entry.selection)) break\n    map = map ? entry.map.appendSet(map) : entry.map\n  }\n\n  let changeItem = branch[idx]\n  let newBranch = branch.slice(0, idx), changes = changeItem.inverted || ChangeSet.empty, selection = changeItem.selection!\n\n  if (map) {\n    let startIndex = changeItem.map.length\n    map = changeItem.map.appendSet(map)\n    let mappedChanges = []\n    for (let i = 0; i < changes.length; i++) {\n      let mapped = changes.changes[i].map(map.partialMapping(startIndex - i))\n      if (mapped) {\n        map = map.append(mapped.desc)\n        mappedChanges.push(mapped)\n      }\n    }\n    newBranch.push(new Item(map))\n    changes = new ChangeSet(mappedChanges) // FIXME preserve mirror data?\n    selection = selection.map(map)\n  }\n  return {changes, branch: newBranch, selection}\n}\n\nfunction nope() { return false }\n\nfunction eqSelectionShape(a: EditorSelection, b: EditorSelection) {\n  return a.ranges.length == b.ranges.length &&\n         a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0\n}\n\nexport const enum PopTarget { Done, Undone }\n\nexport class HistoryState {\n  private constructor(public readonly done: Branch,\n                      public readonly undone: Branch,\n                      private readonly prevTime: number | null = null,\n                      private readonly prevUserEvent: string | undefined = undefined) {}\n\n  resetTime(): HistoryState {\n    return new HistoryState(this.done, this.undone)\n  }\n\n  addChanges(changes: ChangeSet, inverted: ChangeSet | null, selection: EditorSelection,\n             time: number, userEvent: string | undefined, newGroupDelay: number, maxLen: number): HistoryState {\n    let mayMerge: (item: Item) => boolean = nope\n    if (this.prevTime !== null && time - this.prevTime < newGroupDelay &&\n        (inverted || (this.prevUserEvent == userEvent && userEvent == \"keyboard\")))\n      mayMerge = inverted\n                 ? prev => isAdjacent(prev.map.changes[prev.map.length - 1], changes.changes[0])\n                 : prev => eqSelectionShape(prev.selection!, selection)\n    return new HistoryState(addChanges(this.done, changes, inverted, selection, maxLen, mayMerge),\n                            this.undone, time, userEvent)\n  }\n\n  addMapping(map: ChangeSet<ChangeDesc>, maxLen: number): HistoryState {\n    if (this.done.length == 0) return this\n    return new HistoryState(updateBranch(this.done, this.done.length, maxLen, new Item(map)), this.undone)\n  }\n\n  canPop(done: PopTarget, only: ItemFilter): boolean {\n    const target = done == PopTarget.Done ? this.done : this.undone\n    for (const {isChange, selection} of target)\n      if (isChange || (only == ItemFilter.Any && selection)) return true\n    return false\n  }\n\n  pop(done: PopTarget, only: ItemFilter, transaction: Transaction, maxLen: number): {transaction: Transaction, state: HistoryState} {\n    let {changes, branch, selection} = popChanges(done == PopTarget.Done ? this.done : this.undone, only)\n\n    let oldSelection = transaction.selection\n    for (let change of changes.changes) transaction = transaction.change(change)\n    transaction = transaction.setSelection(selection)\n    let otherBranch = (done == PopTarget.Done ? this.undone : this.done)\n    otherBranch = addChanges(otherBranch, transaction.changes, transaction.changes.length > 0 ? transaction.invertedChanges() : null, oldSelection, maxLen, nope)\n    return {transaction, state: new HistoryState(done == PopTarget.Done ? branch : otherBranch,\n                                                 done == PopTarget.Done ? otherBranch : branch)}\n  }\n\n  eventCount(done: PopTarget, only: ItemFilter) {\n    let count = 0, branch = done == PopTarget.Done ? this.done : this.undone\n    for (const {isChange, selection} of branch)\n      if (isChange || (only == ItemFilter.Any && selection)) ++count\n    return count\n  }\n\n  static empty: HistoryState = new HistoryState([], [])\n}\n","import {EditorState, Transaction, StateField, StateExtension} from \"../../state/src\"\nimport {combineConfig, Slot} from \"../../extension/src/extension\"\nimport {HistoryState, ItemFilter, PopTarget} from \"./core\"\n\nconst historyStateSlot = Slot.define<HistoryState>()\nexport const closeHistorySlot = Slot.define<boolean>()\n\ninterface CompleteHistoryConfig {minDepth: number, newGroupDelay: number}\n\nfunction historyField({minDepth, newGroupDelay}: CompleteHistoryConfig) {\n  return new StateField({\n    init(editorState: EditorState): HistoryState {\n      return HistoryState.empty\n    },\n\n    apply(tr: Transaction, state: HistoryState, editorState: EditorState): HistoryState {\n      const fromMeta = tr.getMeta(historyStateSlot)\n      if (fromMeta) return fromMeta\n      if (tr.getMeta(closeHistorySlot)) state = state.resetTime()\n      if (!tr.changes.length && !tr.selectionSet) return state\n\n      if (tr.getMeta(Transaction.addToHistory) !== false)\n        return state.addChanges(tr.changes, tr.changes.length ? tr.invertedChanges() : null,\n                                tr.startState.selection, tr.getMeta(Transaction.time)!,\n                                tr.getMeta(Transaction.userEvent), newGroupDelay, minDepth)\n      return state.addMapping(tr.changes.desc, minDepth)\n    }\n  })\n}\n\nexport type HistoryConfig = Partial<CompleteHistoryConfig>\n\nclass HistoryContext {\n  constructor(public field: StateField<HistoryState>, public config: CompleteHistoryConfig) {}\n}\n\nconst historyBehavior = StateExtension.defineBehavior<HistoryContext>()\n\nexport const history = StateExtension.unique<HistoryConfig>(configs => {\n  let config = combineConfig(configs, {\n    minDepth: 100,\n    newGroupDelay: 500\n  }, {minDepth: Math.max})\n  let field = historyField(config)\n  return StateExtension.all(\n    field.extension,\n    historyBehavior(new HistoryContext(field, config))\n  )\n}, {})\n\nfunction cmd(target: PopTarget, only: ItemFilter) {\n  return function({state, dispatch}: {state: EditorState, dispatch: (tr: Transaction) => void}) {\n    let hist = state.behavior.get(historyBehavior)\n    if (!hist.length) return false\n    let {field, config} = hist[0]\n    let historyState = state.getField(field)\n    if (!historyState.canPop(target, only)) return false\n    const {transaction, state: newState} = historyState.pop(target, only, state.transaction, config.minDepth)\n    dispatch(transaction.addMeta(historyStateSlot(newState)))\n    return true\n  }\n}\n\nexport const undo = cmd(PopTarget.Done, ItemFilter.OnlyChanges)\nexport const redo = cmd(PopTarget.Undone, ItemFilter.OnlyChanges)\nexport const undoSelection = cmd(PopTarget.Done, ItemFilter.Any)\nexport const redoSelection = cmd(PopTarget.Undone, ItemFilter.Any)\n\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr: Transaction): Transaction {\n  return tr.addMeta(closeHistorySlot(true))\n}\n\nfunction depth(target: PopTarget, only: ItemFilter) {\n  return function(state: EditorState): number {\n    let hist = state.behavior.get(historyBehavior)\n    if (hist.length == 0) return 0\n    let {field} = hist[0]\n    return state.getField(field).eventCount(target, only)\n  }\n}\n\n// The amount of undoable change events available in a given state.\nexport const undoDepth = depth(PopTarget.Done, ItemFilter.OnlyChanges)\n// The amount of redoable change events available in a given state.\nexport const redoDepth = depth(PopTarget.Undone, ItemFilter.OnlyChanges)\n// The amount of undoable events available in a given state.\nexport const redoSelectionDepth = depth(PopTarget.Done, ItemFilter.Any)\n// The amount of redoable events available in a given state.\nexport const undoSelectionDepth = depth(PopTarget.Undone, ItemFilter.Any)\n","import {combineConfig} from \"../../extension/src/extension\"\nimport {EditorView, ViewExtension, ViewPlugin, styleModule, viewPlugin} from \"../../view/src\"\nimport {StyleModule} from \"style-mod\"\n\n// FIXME Think about how the gutter width changing could cause\n// problems when line wrapping is on by changing a line's height\n// (solution is possibly some way for this plugin to signal the view\n// that it has to do another layout check when the gutter's width\n// changes, which should be relatively rare)\n\n// FIXME at some point, add support for custom gutter space and\n// per-line markers\n\n// FIXME seriously slow on Firefox when devtools are open\n\ninterface CompleteGutterConfig {\n  fixed: boolean,\n  formatNumber: (lineNo: number) => string\n}\nexport type GutterConfig = Partial<CompleteGutterConfig>\n\nexport const gutter = ViewExtension.unique<GutterConfig>(configs => {\n  let config = combineConfig(configs, {\n    fixed: true,\n    formatNumber: String\n  })\n  return ViewExtension.all(\n    viewPlugin(view => new GutterView(view, config)),\n    styleModule(styles)\n  )\n}, {})\n\nclass GutterView implements ViewPlugin {\n  dom: HTMLElement\n  spaceAbove: number = 0\n  lines: GutterLine[] = []\n  lastLine: GutterLine\n  formatNumber: (lineNo: number) => string\n\n  constructor(public view: EditorView, config: CompleteGutterConfig) {\n    this.dom = document.createElement(\"div\")\n    this.dom.className = \"codemirror-gutter \" + styles.gutter\n    this.dom.setAttribute(\"aria-hidden\", \"true\")\n    this.dom.style.cssText = `left: 0; box-sizing: border-box; height: 100%; overflow: hidden; flex-shrink: 0;`\n    if (config.fixed) {\n      // FIXME IE11 fallback, which doesn't support position: sticky,\n      // by using position: relative + event handlers that realign the\n      // gutter (or just force fixed=false on IE11?)\n      this.dom.style.position = \"sticky\"\n    }\n    view.dom.insertBefore(this.dom, view.contentDOM)\n    this.formatNumber = config.formatNumber\n    this.lastLine = new GutterLine(1, 0, 0, 0, this.formatNumber)\n    this.lastLine.dom.style.cssText += \"visibility: hidden; pointer-events: none\"\n    this.dom.appendChild(this.lastLine.dom)\n    this.update()\n  }\n\n  update() {\n    // Create the first number consisting of all 9s that is at least\n    // as big as the line count, and put that in this.lastLine to make\n    // sure the gutter width is stable\n    let last = 9\n    while (last < this.view.state.doc.lines) last = last * 10 + 9\n    this.lastLine.update(last, 0, 0, 0, this.formatNumber)\n    // FIXME would be nice to be able to recognize updates that didn't redraw\n    this.updateGutter()\n  }\n\n  updateGutter() {\n    let spaceAbove = this.view.heightAtPos(this.view.viewport.from, true)\n    if (spaceAbove != this.spaceAbove) {\n      this.spaceAbove = spaceAbove\n      this.dom.style.paddingTop = spaceAbove + \"px\"\n    }\n    let i = 0, lineNo = -1\n    this.view.viewportLines(line => {\n      let above = line.textTop, below = line.height - line.textBottom, height = line.height - above - below\n      if (lineNo < 0) lineNo = this.view.state.doc.lineAt(line.start).number\n      if (i == this.lines.length) {\n        let newLine = new GutterLine(lineNo, height, above, below, this.formatNumber)\n        this.lines.push(newLine)\n        this.dom.appendChild(newLine.dom)\n      } else {\n        this.lines[i].update(lineNo, height, above, below, this.formatNumber)\n      }\n      lineNo = line.hasCollapsedRanges ? -1 : lineNo + 1\n      i++\n    })\n    while (this.lines.length > i) this.dom.removeChild(this.lines.pop()!.dom)\n    this.dom.style.minHeight = this.view.contentHeight + \"px\"\n  }\n\n  destroy() {\n    this.dom.remove()\n  }\n\n  get styles() { return styles }\n}\n\nclass GutterLine {\n  dom: HTMLElement\n  lineNo: number = -1\n  height: number = -1\n  above: number = 0\n  below: number = 0\n\n  constructor(lineNo: number, height: number, above: number, below: number, formatNo: (lineNo: number) => string) {\n    this.dom = document.createElement(\"div\")\n    this.dom.className = \"codemirror-gutter-element\"\n    this.update(lineNo, height, above, below, formatNo)\n  }\n\n  update(lineNo: number, height: number, above: number, below: number, formatNo: (lineNo: number) => string) {\n    if (this.lineNo != lineNo)\n      this.dom.textContent = formatNo(this.lineNo = lineNo)\n    if (this.height != height)\n      this.dom.style.height = (this.height = height) + \"px\"\n    if (this.above != above)\n      this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\"\n    if (this.below != below)\n      this.dom.style.marginBottom = (this.below = below) ? below + \"px\" : \"\"\n  }\n}\n\nconst styles = new StyleModule({\n  gutter: {\n    background: \"#f5f5f5\",\n    borderRight: \"1px solid silver\",\n    display: \"flex !important\", // Necessary -- prevents margin collapsing\n    flexDirection: \"column\",\n\n    \"& > .codemirror-gutter-element\": {\n      boxSizing: \"border-box\",\n      // FIXME these are line number specific\n      padding: \"0 3px 0 5px\",\n      minWidth: \"20px\",\n      textAlign: \"right\",\n      color: \"#999\",\n      whiteSpace: \"nowrap\"\n    }\n  }\n})\n","import {EditorState, EditorSelection, SelectionRange, StateExtension, Transaction} from \"../../state/src\"\nimport {EditorView} from \"../../view/src\"\n\nexport type Command = (view: EditorView) => boolean\n\nfunction moveSelection(view: EditorView, dir: \"left\" | \"right\" | \"forward\" | \"backward\",\n                       granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\"): boolean {\n  let transaction = view.state.transaction.mapRanges(range => {\n    if (!range.empty && granularity != \"lineboundary\")\n      return new SelectionRange(dir == \"left\" || dir == \"backward\" ? range.from : range.to)\n    return new SelectionRange(view.movePos(range.head, dir, granularity, \"move\"))\n  })\n  if (transaction.selection.eq(view.state.selection)) return false\n  if (granularity == \"line\") transaction = transaction.addMeta(Transaction.preserveGoalColumn(true))\n  view.dispatch(transaction.scrollIntoView())\n  return true\n}\n\nexport const moveCharLeft: Command = view => moveSelection(view, \"left\", \"character\")\nexport const moveCharRight: Command = view => moveSelection(view, \"right\", \"character\")\n\nexport const moveWordLeft: Command = view => moveSelection(view, \"left\", \"word\")\nexport const moveWordRight: Command = view => moveSelection(view, \"right\", \"word\")\n\nexport const moveLineUp: Command = view => moveSelection(view, \"backward\", \"line\")\nexport const moveLineDown: Command = view => moveSelection(view, \"forward\", \"line\")\n\nexport const moveLineStart: Command = view => moveSelection(view, \"backward\", \"lineboundary\")\nexport const moveLineEnd: Command = view => moveSelection(view, \"forward\", \"lineboundary\")\n\nfunction extendSelection(view: EditorView, dir: \"left\" | \"right\" | \"forward\" | \"backward\",\n                         granularity: \"character\" | \"word\" | \"line\" | \"lineboundary\"): boolean {\n  let transaction = view.state.transaction.mapRanges(range => {\n    return new SelectionRange(range.anchor, view.movePos(range.head, dir, granularity, \"extend\"))\n  })\n  if (transaction.selection.eq(view.state.selection)) return false\n  if (granularity == \"line\") transaction = transaction.addMeta(Transaction.preserveGoalColumn(true))\n  view.dispatch(transaction.scrollIntoView())\n  return true\n}\n\nexport const extendCharLeft: Command = view => extendSelection(view, \"left\", \"character\")\nexport const extendCharRight: Command = view => extendSelection(view, \"right\", \"character\")\n\nexport const extendWordLeft: Command = view => extendSelection(view, \"left\", \"word\")\nexport const extendWordRight: Command = view => extendSelection(view, \"right\", \"word\")\n\nexport const extendLineUp: Command = view => extendSelection(view, \"backward\", \"line\")\nexport const extendLineDown: Command = view => extendSelection(view, \"forward\", \"line\")\n\nexport const extendLineStart: Command = view => extendSelection(view, \"backward\", \"lineboundary\")\nexport const extendLineEnd: Command = view => extendSelection(view, \"forward\", \"lineboundary\")\n\nexport const selectDocStart: Command = ({state, dispatch}) => {\n  dispatch(state.transaction.setSelection(EditorSelection.single(0)).scrollIntoView())\n  return true\n}\n\nexport const selectDocEnd: Command = ({state, dispatch}) => {\n  dispatch(state.transaction.setSelection(EditorSelection.single(state.doc.length)).scrollIntoView())\n  return true\n}\n\nexport const selectAll: Command = ({state, dispatch}) => {\n  dispatch(state.transaction.setSelection(EditorSelection.single(0, state.doc.length)))\n  return true\n}\n\nfunction deleteText(view: EditorView, dir: \"forward\" | \"backward\") {\n  let transaction = view.state.transaction.reduceRanges((transaction, range) => {\n    let {from, to} = range\n    if (from == to) {\n      let target = view.movePos(range.head, dir, \"character\", \"move\")\n      from = Math.min(from, target); to = Math.max(to, target)\n    }\n    if (from == to) return {transaction, range}\n    return {transaction: transaction.replace(from, to, \"\"),\n            range: new SelectionRange(from)}\n  })\n  if (!transaction.docChanged) return false\n\n  view.dispatch(transaction.scrollIntoView())\n  return true\n}\n\nexport const deleteCharBackward: Command = view => deleteText(view, \"backward\")\nexport const deleteCharForward: Command = view => deleteText(view, \"forward\")\n\n// FIXME support indenting by tab, configurable indent units\n\nfunction space(n: number) {\n  let result = \"\"\n  for (let i = 0; i < n; i++) result += \" \"\n  return result\n}\n\nfunction getIndentation(state: EditorState, pos: number): number {\n  for (let f of state.behavior.get(StateExtension.indentation)) {\n    let result = f(state, pos)\n    if (result > -1) return result\n  }\n  return -1\n}\n\nexport function insertNewlineAndIndent({state, dispatch}: EditorView): boolean {\n  let indentation = state.selection.ranges.map(r => getIndentation(state, r.from)), i = 0\n  dispatch(state.transaction.reduceRanges((tr, range) => {\n    let indent = indentation[i++]\n    return {transaction: tr.replace(range.from, range.to, [\"\", space(indent)]),\n            range: new SelectionRange(range.from + indent + 1)}\n  }).scrollIntoView())\n  return true\n}\n\nexport function indentSelection({state, dispatch}: EditorView): boolean {\n  let lastLine = -1, positions = []\n  for (let range of state.selection.ranges) {\n    for (let {start, end} = state.doc.lineAt(range.from);;) {\n      if (start != lastLine) {\n        lastLine = start\n        let indent = getIndentation(state, start), current\n        if (indent > -1 &&\n            indent != (current = /^\\s*/.exec(state.doc.slice(start, Math.min(end, start + 100)))![0].length))\n          positions.push({pos: start, current, indent})\n      }\n      if (end + 1 > range.to) break\n      ;({start, end} = state.doc.lineAt(end + 1))\n    }\n  }\n  if (positions.length > 0) {\n    let tr = state.transaction\n    for (let {pos, current, indent} of positions) {\n      let start = tr.changes.mapPos(pos)\n      tr = tr.replace(start, start + current, space(indent))\n    }\n    dispatch(tr)\n  }\n  return true\n}\n\nexport const pcBaseKeymap: {[key: string]: Command} = {\n  \"ArrowLeft\": moveCharLeft,\n  \"ArrowRight\": moveCharRight,\n  \"Shift-ArrowLeft\": extendCharLeft,\n  \"Shift-ArrowRight\": extendCharRight,\n  \"Mod-ArrowLeft\": moveWordLeft,\n  \"Mod-ArrowRight\": moveWordRight,\n  \"Shift-Mod-ArrowLeft\": extendWordLeft,\n  \"Shift-Mod-ArrowRight\": extendWordRight,\n  \"ArrowUp\": moveLineUp,\n  \"ArrowDown\": moveLineDown,\n  \"Shift-ArrowUp\": extendLineUp,\n  \"Shift-ArrowDown\": extendLineDown,\n  \"Home\": moveLineStart,\n  \"End\": moveLineEnd,\n  \"Shift-Home\": extendLineStart,\n  \"Shift-End\": extendLineEnd,\n  \"Mod-Home\": selectDocStart,\n  \"Mod-End\": selectDocEnd,\n  \"Mod-a\": selectAll,\n  \"Backspace\": deleteCharBackward,\n  \"Delete\": deleteCharForward,\n  \"Enter\": insertNewlineAndIndent\n}\n\nexport const macBaseKeymap: {[key: string]: Command} = {\n  \"Control-b\": moveCharLeft,\n  \"Control-f\": moveCharRight,\n  \"Shift-Control-b\": extendCharLeft,\n  \"Shift-Control-f\": extendCharRight,\n  \"Control-p\": moveLineUp,\n  \"Control-n\": moveLineDown,\n  \"Shift-Control-p\": extendLineUp,\n  \"Shift-Control-n\": extendLineDown,\n  \"Control-a\": moveLineStart,\n  \"Control-e\": moveLineEnd,\n  \"Shift-Control-a\": extendLineStart,\n  \"Shift-Control-e\": extendLineEnd,\n  \"Cmd-ArrowUp\": selectDocStart,\n  \"Cmd-ArrowDown\": selectDocEnd,\n  \"Control-d\": deleteCharForward,\n  \"Control-h\": deleteCharBackward\n}\nfor (let key in pcBaseKeymap) macBaseKeymap[key] = pcBaseKeymap[key]\n\ndeclare global { const os: any }\nconst mac = typeof navigator != \"undefined\" ? /Mac/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false\n\nexport const baseKeymap: {[key: string]: Command} = mac ? macBaseKeymap : pcBaseKeymap\n","// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nexport function countColumn(string: string, end: number | null, tabSize: number, startIndex?: number, startValue?: number): number {\n  if (end == null) {\n    end = string.search(/[^\\s\\u00a0]/)\n    if (end == -1) end = string.length\n  }\n  for (let i = startIndex || 0, n = startValue || 0;;) {\n    let nextTab = string.indexOf(\"\\t\", i)\n    if (nextTab < 0 || nextTab >= end)\n      return n + (end - i)\n    n += nextTab - i\n    n += tabSize - (n % tabSize)\n    i = nextTab + 1\n  }\n}\n","import { countColumn } from \"./misc\"\n\n// STRING STREAM\n\n// Fed to the mode parsers, provides helper functions to make\n// parsers more succinct.\n\nexport class StringStream {\n  pos: number\n  start: number\n  lineStart: number\n  lastColumnPos: number\n  lastColumnValue: number\n\n  constructor(public string: string, public tabSize: number, private lineOracle: any) {\n    this.pos = this.start = 0\n    this.string = string\n    this.tabSize = tabSize || 8\n    this.lastColumnPos = this.lastColumnValue = 0\n    this.lineStart = 0\n    this.lineOracle = lineOracle\n  }\n\n  eol(): boolean {return this.pos >= this.string.length}\n  sol(): boolean {return this.pos == this.lineStart}\n  peek() {return this.string.charAt(this.pos) || undefined}\n  next(): string | void {\n    if (this.pos < this.string.length)\n      return this.string.charAt(this.pos++)\n  }\n  eat(match: string | RegExp | ((ch: string) => boolean)): string | void {\n    let ch = this.string.charAt(this.pos)\n    let ok\n    if (typeof match == \"string\") ok = ch == match\n    else ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch))\n    if (ok) {++this.pos; return ch}\n  }\n  eatWhile(match: string | RegExp): boolean {\n    let start = this.pos\n    while (this.eat(match)){}\n    return this.pos > start\n  }\n  eatSpace() {\n    let start = this.pos\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) ++this.pos\n    return this.pos > start\n  }\n  skipToEnd() {this.pos = this.string.length}\n  skipTo(ch: string): boolean | void {\n    let found = this.string.indexOf(ch, this.pos)\n    if (found > -1) {this.pos = found; return true}\n  }\n  backUp(n: number) {this.pos -= n}\n  column() {\n    if (this.lastColumnPos < this.start) {\n      this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue)\n      this.lastColumnPos = this.start\n    }\n    return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  }\n  indentation() {\n    return countColumn(this.string, null, this.tabSize) -\n      (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  }\n  match(pattern: string | RegExp, consume?: boolean, caseInsensitive?: boolean): boolean | RegExpMatchArray | null {\n    if (typeof pattern == \"string\") {\n      let cased = (str: string) => caseInsensitive ? str.toLowerCase() : str\n      let substr = this.string.substr(this.pos, pattern.length)\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) this.pos += pattern.length\n        return true\n      } else return null\n    } else {\n      let match = this.string.slice(this.pos).match(pattern)\n      if (match && match.index! > 0) return null\n      if (match && consume !== false) this.pos += match[0].length\n      return match\n    }\n  }\n  current(){return this.string.slice(this.start, this.pos)}\n  hideFirstChars(n: number, inner: () => void) {\n    this.lineStart += n\n    try { return inner() }\n    finally { this.lineStart -= n }\n  }\n  lookAhead(n: number): string {\n    let oracle = this.lineOracle\n    return oracle && oracle.lookAhead(n)\n  }\n  baseToken() {\n    let oracle = this.lineOracle\n    return oracle && oracle.baseToken(this.pos)\n  }\n}\n","import {Text, TextIterator} from \"../../doc/src\"\nimport {StringStream} from \"./stringstream\"\n\nexport class StringStreamCursor {\n  private curLineEnd: number\n  private readonly iter: TextIterator\n\n  constructor(text: Text, public offset: number, readonly tabSize: number = 4) {\n    this.iter = text.iterLines(offset)\n    this.curLineEnd = this.offset - 1\n  }\n\n  next() {\n    let {value, done} = this.iter.next()\n    if (done) throw new RangeError(\"Reached end of document\")\n    const res = new StringStream(value, this.tabSize, null)\n    this.offset = this.curLineEnd + 1\n    this.curLineEnd += value.length + 1\n    return res\n  }\n}\n","import {StringStream} from \"./stringstream\"\n\nexport function readToken(mode: any, stream: StringStream, state: any) {\n  for (let i = 0; i < 10; i++) {\n    //if (inner) inner[0] = innerMode(mode, state).mode\n    let style = mode.token(stream, state)\n    if (stream.pos > stream.start) return style\n  }\n  throw new Error(\"Mode \" + mode.name + \" failed to advance stream.\")\n}\n\nexport function copyState(mode: any, state: any) {\n  if (state === true) return state\n  if (mode.copyState) return mode.copyState(state)\n  let nstate: any = {}\n  for (let n in state) {\n    let val = state[n]\n    if (val instanceof Array) val = val.concat([])\n    nstate[n] = val\n  }\n  return nstate\n}\n\nexport interface Mode<S> {\n  token(stream: StringStream, state: S): string\n  startState: () => S\n  copyState?: (state: S) => S\n  name: string\n  indent?: (state: S, textAfter: string) => number\n}\n","import {ViewUpdate, ViewField, EditorView} from \"../../view/src\"\nimport {Range} from \"../../rangeset/src/rangeset\"\nimport {EditorState, StateExtension, StateField, Transaction} from \"../../state/src\"\nimport {Decoration, DecorationSet} from \"../../view/src/decoration\"\n\nimport {StringStreamCursor} from \"./stringstreamcursor\"\nimport {copyState, readToken, Mode} from \"./util\"\n\nclass CachedState<S> {\n  constructor(public state: S, public pos: number) {}\n  copy(mode: Mode<S>) { return new CachedState(copyState(mode, this.state), this.pos) }\n}\n\nconst MAX_SCAN_DIST = 20000\n\ntype DecoratedRange = {from: number, to: number, decorations: ReadonlyArray<Range<Decoration>>}\n\nfunction cutDecoratedRange(range: DecoratedRange | null, at: number) {\n  if (!range || at <= range.from) return null\n  return {from: range.from, to: Math.min(at, range.to), decorations: range.decorations.filter(({to}) => to <= at)}\n}\n\nclass StateCache<S> {\n  private timeout?: number | NodeJS.Timer\n\n  constructor(private states: CachedState<S>[], private frontier: number, private lastDecorations: null | DecoratedRange) {}\n\n  advanceFrontier(editorState: EditorState, to: number, mode: Mode<S>, sleepTime: number, maxWorkTime: number): Promise<void> {\n    if (this.frontier >= to) return Promise.reject()\n    clearTimeout(this.timeout as any)\n    return new Promise(resolve => {\n      const f = () => {\n        const endTime = +new Date + maxWorkTime\n        do {\n          const target = Math.min(to, this.frontier + MAX_SCAN_DIST / 2)\n          this.getState(editorState, target, mode)\n          if (this.frontier >= to) return resolve()\n        } while (+new Date < endTime)\n        this.timeout = setTimeout(f, sleepTime)\n      }\n      this.timeout = setTimeout(f, sleepTime)\n    })\n  }\n\n  private calculateDecorations(editorState: EditorState, from: number, to: number, mode: Mode<S>): Range<Decoration>[] {\n    let state = this.getState(editorState, from, mode)\n    let cursor = new StringStreamCursor(editorState.doc, from, editorState.tabSize)\n    let states: CachedState<S>[] = [], decorations: Range<Decoration>[] = [], stream = cursor.next()\n    for (let i = 0; cursor.offset + stream.start < to;) {\n      if (stream.eol()) {\n        stream = cursor.next()\n        if (++i % 5 == 0) states.push(new CachedState(copyState(mode, state), cursor.offset))\n      } else {\n        let style = readToken(mode, stream, state)\n        if (style)\n          decorations.push(Decoration.range(cursor.offset + stream.start, cursor.offset + stream.pos, {class: 'cm-' + style.replace(/ /g, ' cm-')}))\n        stream.start = stream.pos\n      }\n    }\n    this.storeStates(from, to, states)\n    return decorations\n  }\n\n  getDecorations(editorState: EditorState, from: number, to: number, mode: Mode<S>): Range<Decoration>[] {\n    let upto = from, decorations: Range<Decoration>[] = []\n    if (this.lastDecorations) {\n      if (from < this.lastDecorations.from) {\n        upto = Math.min(to, this.lastDecorations.from)\n        decorations = this.calculateDecorations(editorState, from, upto, mode)\n      }\n      if (upto < to && this.lastDecorations.to > upto) {\n        upto = this.lastDecorations.to\n        decorations = decorations.concat(this.lastDecorations.decorations)\n      }\n    }\n    if (upto < to) {\n      decorations = decorations.concat(this.calculateDecorations(editorState, upto, to, mode))\n    }\n    this.lastDecorations = {from, to, decorations}\n    return decorations\n  }\n\n  storeStates(from: number, to: number, states: ReadonlyArray<CachedState<S>>) {\n    let start = this.findIndex(from), end = this.findIndex(to)\n    this.states.splice(start, end - start, ...states)\n    if (from <= this.frontier) this.frontier = Math.max(this.frontier, to)\n  }\n\n  // Return the first index for which all cached states after it have\n  // a position >= pos\n  findIndex(pos: number): number {\n    // FIXME could be binary search\n    let i = 0\n    while (i < this.states.length && this.states[i].pos < pos) i++\n    return i\n  }\n\n  stateBefore(pos: number, mode: Mode<S>): {state: S, pos: number} {\n    if (pos > this.frontier && pos - this.frontier < MAX_SCAN_DIST) pos = this.frontier\n    let index = this.findIndex(pos)\n    if (index < this.states.length && this.states[index].pos == pos) index++\n    return index == 0 ? new CachedState(mode.startState(), 0) : this.states[index - 1].copy(mode)\n  }\n\n  getState(editorState: EditorState, pos: number, mode: Mode<S>): S {\n    let {pos: statePos, state} = this.stateBefore(pos, mode)\n    if (statePos < pos - MAX_SCAN_DIST) { statePos = pos; state = mode.startState() }\n    else if (this.lastDecorations && (statePos < this.lastDecorations.from && this.lastDecorations.from <= pos))\n      // If we are calculating a correct state for a position that is after the\n      // beginning of the cached decorations (which suggests that the cached\n      // decorations were rendered based on an approximate state), clear that cache\n      this.lastDecorations = null\n    if (statePos < pos) {\n      let cursor = new StringStreamCursor(editorState.doc, statePos, editorState.tabSize)\n      let stream = cursor.next()\n      let start = statePos, i = 0, states: CachedState<S>[] = []\n      while (statePos < pos) {\n        if (stream.eol()) {\n          stream = cursor.next()\n          statePos++\n          if (++i % 50) states.push(new CachedState(copyState(mode, state), statePos))\n        } else {\n          readToken(mode, stream, state)\n          statePos += stream.pos - stream.start\n          stream.start = stream.pos\n        }\n      }\n      this.storeStates(start, pos, states)\n    }\n    return state\n  }\n\n  apply(transaction: Transaction): StateCache<S> {\n    if (transaction.changes.length == 0) return this\n    let {start} = transaction.doc.lineAt(transaction.changes.changes.reduce((m, ch) => Math.min(m, ch.from), 1e9))\n    let states = []\n    for (let cached of this.states) {\n      let mapped = transaction.changes.mapPos(cached.pos, -1, true)\n      if (mapped > 0) states.push(mapped == cached.pos ? cached : new CachedState(cached.state, mapped))\n    }\n    return new StateCache(states, Math.min(start, this.frontier), cutDecoratedRange(this.lastDecorations, start))\n  }\n}\n\ntype Config = {\n  sleepTime?: number,\n  maxWorkTime?: number,\n  mode: Mode<any>\n}\n\nexport const legacyMode = (config: Config) => {\n  let field = new StateField<StateCache<any>>({\n    init(state: EditorState) { return new StateCache([], 0, null) },\n    apply(tr, cache) { return cache.apply(tr) }\n  })\n  return StateExtension.all(\n    field.extension,\n    ViewField.decorations(decoSpec(field, config)),\n    StateExtension.indentation((state: EditorState, pos: number): number => {\n      if (!config.mode.indent) return -1\n      let modeState = state.getField(field).getState(state, pos, config.mode)\n      let line = state.doc.lineAt(pos)\n      return config.mode.indent(modeState, line.slice(0, Math.min(line.length, 100)).match(/^\\s*(.*)/)![1])\n    })\n    // FIXME add a token-retrieving behavior\n  )\n}\n\nfunction decoSpec(field: StateField<StateCache<any>>, config: Config) {\n  const {sleepTime = 100, maxWorkTime = 100, mode} = config\n  let decorations = Decoration.none, from = -1, to = -1\n  function update(view: EditorView, force: boolean) {\n    let {viewport, state} = view\n    if (force || viewport.from < from || viewport.to > to) {\n      ;({from, to} = viewport)\n      const stateCache = state.getField(field)!\n      decorations = Decoration.set(stateCache.getDecorations(state, from, to, mode))\n      stateCache.advanceFrontier(state, from, mode, sleepTime, maxWorkTime).then(() => {\n        update(view, true)\n        view.updateState([], state) // FIXME maybe add a specific EditorView method for this\n      }, () => {})\n    }\n    return decorations\n  }\n  return {\n    create(view: EditorView) { return update(view, false) },\n    update(_: DecorationSet, u: ViewUpdate) { return update(u.view, u.docChanged) },\n    map: false\n  }\n}\n","import {Text} from \"../../doc/src\"\nimport {EditorState} from \"../../state/src\"\nimport {combineConfig} from \"../../extension/src/extension\"\nimport {ViewExtension, ViewField, styleModule} from \"../../view/src/\"\nimport {Decoration, DecorationSet, RangeDecoration} from \"../../view/src/decoration\"\nimport {StyleModule} from \"style-mod\"\n\nconst matching: {[key: string]: string | undefined} = {\n  \"(\": \")>\",\n  \")\": \"(<\",\n  \"[\": \"]>\",\n  \"]\": \"[<\",\n  \"{\": \"}>\",\n  \"}\": \"{<\"\n}\n\ninterface CompleteConfig {\n  afterCursor: boolean,\n  bracketRegex: RegExp,\n  maxScanDistance: number,\n  strict: boolean,\n}\nexport type Config = Partial<CompleteConfig>\n\nfunction getStyle(decorations: DecorationSet | undefined, at: number): string | void {\n  if (!decorations) return\n  const iter = decorations.iter()\n  let decoration\n  while (decoration = iter.next())\n    if (decoration.from <= at && at < decoration.to)\n      return (decoration.value as RangeDecoration).spec.class\n}\n\nfunction findMatchingBracket(\n  doc: Text, decorations: DecorationSet | undefined,\n  where: number, config: CompleteConfig\n) : {from: number, to: number | null, forward: boolean, match: boolean} | null {\n  let pos = where - 1\n  // A cursor is defined as between two characters, but in in vim command mode\n  // (i.e. not insert mode), the cursor is visually represented as a\n  // highlighted box on top of the 2nd character. Otherwise, we allow matches\n  // from before or after the cursor.\n  const match = (!config.afterCursor && pos >= 0 && matching[doc.slice(pos, pos + 1)]) ||\n      matching[doc.slice(++pos, pos + 1)]\n  if (!match) return null\n  const dir = match[1] == \">\" ? 1 : -1\n  if (config.strict && (dir > 0) != (pos == where)) return null\n  const style = getStyle(decorations, pos)\n\n  const found = scanForBracket(doc, decorations, pos + (dir > 0 ? 1 : 0), dir, style || null, config)\n  if (found == null) return null\n  return {from: pos, to: found ? found.pos : null,\n          match: found && found.ch == match.charAt(0), forward: dir > 0}\n}\n\n// bracketRegex is used to specify which type of bracket to scan\n// should be a regexp, e.g. /[[\\]]/\n//\n// Note: If \"where\" is on an open bracket, then this bracket is ignored.\n//\n// Returns false when no bracket was found, null when it reached\n// maxScanDistance and gave up\nexport function scanForBracket(doc: Text, decorations: DecorationSet | undefined,\n                               where: number, dir: -1 | 1, style: string | null, config: CompleteConfig) {\n  const maxScanDistance = config.maxScanDistance\n  const re = config.bracketRegex\n  const stack = []\n  const iter = doc.iterRange(where, dir > 0 ? doc.length : 0)\n  for (let distance = 0; !iter.done && distance <= maxScanDistance;) {\n    iter.next()\n    const text = iter.value\n    if (dir < 0) distance += text.length\n    const basePos = where + distance * dir\n    for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n      const ch = text.charAt(pos)\n      if (re.test(ch) && (style === undefined || getStyle(decorations, basePos + pos) == style)) {\n        const match = matching[ch]!\n        if ((match.charAt(1) == \">\") == (dir > 0)) stack.push(ch)\n        else if (!stack.length) return {pos: basePos + pos, ch}\n        else stack.pop()\n      }\n    }\n    if (dir > 0) distance += text.length\n  }\n  return iter.done ? false : null\n}\n\nfunction doMatchBrackets(state: EditorState, referenceDecorations: DecorationSet | undefined, config: CompleteConfig) {\n  const decorations = []\n  for (const range of state.selection.ranges) {\n    if (!range.empty) continue\n    const match = findMatchingBracket(state.doc, referenceDecorations, range.head, config)\n    if (!match) continue\n    const style = match.match ? defaultStyles.matching : defaultStyles.nonmatching\n    decorations.push(Decoration.range(match.from, match.from + 1, {class: style}))\n    if (match.to) decorations.push(Decoration.range(match.to, match.to + 1, {class: style}))\n  }\n  return Decoration.set(decorations)\n}\n\nexport const matchBrackets = ViewExtension.unique((configs: Config[]) => {\n  let config = combineConfig(configs, {\n    afterCursor: false,\n    bracketRegex: /[(){}[\\]]/,\n    maxScanDistance: 10000,\n    strict: false\n  })\n  return ViewExtension.all(\n    ViewField.decorations({\n      create() { return Decoration.none },\n      update(deco, update) {\n        // FIXME make this use a tokenizer behavior exported by the highlighter\n        return update.transactions.length ? doMatchBrackets(update.state, undefined, config) : deco\n      }\n    }),\n    styleModule(defaultStyles)\n  )\n}, {})\n\n// FIXME themeability\nconst defaultStyles = new StyleModule({\n  matching: {color: \"#0b0\"},\n  nonmatching: {color: \"#a22\"}\n})\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n\"use strict\";\n\nexport default function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d+(?:[eE][+\\-]?\\d+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.eat(/x/i)) {\n      stream.eatWhile(/[\\da-f]/i);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"0\" && stream.eat(/o/i)) {\n      stream.eatWhile(/[0-7]/i);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"0\" && stream.eat(/b/i)) {\n      stream.eatWhile(/[01]/i);\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^\\d*(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyu])(?![gimyu]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return ret(\"error\", \"error\");\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/]/.test(ch)) {\n        return;\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function register(varname) {\n    function inList(list) {\n      for (var v = list; v; v = v.next)\n        if (v.name == varname) return true;\n      return false;\n    }\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (inList(state.localVars)) return;\n      state.localVars = {name: varname, next: state.localVars};\n    } else {\n      if (inList(state.globalVars)) return;\n      if (parserConfig.globalVars)\n        state.globalVars = {name: varname, next: state.globalVars};\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  var defaultVars = {name: \"this\", next: {name: \"arguments\"}};\n  function pushcontext() {\n    cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n    cx.state.localVars = defaultVars;\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars;\n    cx.state.context = cx.state.context.prev;\n  }\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value.length), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), block, poplex);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), className, poplex); }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typeexpr, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, block, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"),\n                                      block, poplex, poplex);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                     statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), expression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    if (type == \"import\") return cont(expression);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(expression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"keyof\" ? typeexpr : expressionNoComma)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), typeprop)\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(pattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, expect(\")\"), poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, expect(\";\"), forspec2);\n    if (type == \";\") return cont(forspec2);\n    if (type == \"variable\") return cont(formaybeinof);\n    return pass(expression, expect(\";\"), forspec2);\n  }\n  function formaybeinof(_type, value) {\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return cont(maybeoperatorComma, forspec2);\n  }\n  function forspec2(type, value) {\n    if (type == \";\") return cont(forspec3);\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression); }\n    return pass(expression, expect(\";\"), forspec3);\n  }\n  function forspec3(type) {\n    if (type != \")\") cont(expression);\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(isTS ? classfield : functiondef, classBody);\n    }\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), isTS ? classfield : functiondef, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \";\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    return pass(functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && {vars: parserConfig.localVars},\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment) return -1;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybeelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top == expression || top == expressionNoComma) state.cc.pop()\n    }\n  };\n}\n\n/*\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n*/\n","import {Decoration, DecoratedRange, DecorationSet, WidgetType, ViewField, ViewUpdate, ViewExtension, EditorView} from \"../../view/src\"\nimport {ChangeSet, ChangedRange, Transaction} from \"../../state/src\"\nimport {combineConfig} from \"../../extension/src/extension\"\nimport {countColumn} from \"../../doc/src\"\nimport {StyleModule} from \"style-mod\"\n\ninterface CompleteSpecialCharConfig {\n  render?: (code: number, description: string | null, placeHolder: string) => HTMLElement | null\n  specialChars: RegExp\n  addSpecialChars?: RegExp\n}\nexport type SpecialCharConfig = Partial<CompleteSpecialCharConfig>\n\nexport const specialChars = ViewExtension.unique((configs: SpecialCharConfig[]) => {\n  // FIXME make configurations compose properly\n  let config: CompleteSpecialCharConfig = combineConfig(configs, {\n    render: undefined,\n    specialChars: SPECIALS,\n    addSpecialChars: undefined\n  })\n  return new ViewField<SpecialCharHighlighter>({\n    create(view) { return new SpecialCharHighlighter(view, config) },\n    update(self, update) { return self.update(update) },\n    effects: [ViewField.decorationEffect(self => self.decorations)]\n  }).extension\n}, {})\n\nconst JOIN_GAP = 10\n\nclass SpecialCharHighlighter {\n  decorations: DecorationSet = Decoration.none\n  from = 0\n  to = 0\n  specials: RegExp\n  replaceTabs: boolean\n\n  constructor(public view: EditorView, readonly options: CompleteSpecialCharConfig) {\n    this.updateForViewport()\n    this.specials = options.specialChars\n    if (options.addSpecialChars) this.specials = new RegExp(this.specials.source + \"|\" + options.addSpecialChars.source, \"gu\")\n    let styles = document.body.style as any\n    if (this.replaceTabs = (styles.tabSize || styles.MozTabSize) == null)\n      this.specials = new RegExp(\"\\t|\" + this.specials.source, \"gu\")\n  }\n\n  update(update: ViewUpdate) {\n    if (this.replaceTabs && update.transactions.some(tr => tr.getMeta(Transaction.changeTabSize) != null)) {\n      this.decorations = Decoration.none\n      this.from = this.to = 0\n    } else {\n      let allChanges = update.transactions.reduce((ch, tr) => ch.appendSet(tr.changes), ChangeSet.empty)\n      if (allChanges.length) {\n        this.decorations = this.decorations.map(allChanges)\n        this.from = allChanges.mapPos(this.from, 1)\n        this.to = allChanges.mapPos(this.to, -1)\n        this.closeHoles(allChanges.changedRanges())\n      }\n    }\n    this.updateForViewport()\n    return this\n  }\n\n  closeHoles(ranges: ReadonlyArray<ChangedRange>) {\n    let decorations: DecoratedRange[] = [], vp = this.view.viewport, replaced: number[] = []\n    for (let i = 0; i < ranges.length; i++) {\n      let {fromB: from, toB: to} = ranges[i]\n      // Must redraw all tabs further on the line\n      if (this.replaceTabs) to = this.view.state.doc.lineAt(to).end\n      while (i < ranges.length - 1 && ranges[i + 1].fromB < to + JOIN_GAP) to = Math.max(to, ranges[++i].toB)\n      // Clip to current viewport, to avoid doing work for invisible text\n      from = Math.max(vp.from, from); to = Math.min(vp.to, to)\n      if (from >= to) continue\n      this.getDecorationsFor(from, to, decorations)\n      replaced.push(from, to)\n    }\n    if (decorations.length)\n      this.decorations = this.decorations.update(decorations, pos => {\n        for (let i = 0; i < replaced.length; i += 2)\n          if (pos >= replaced[i] && pos < replaced[i + 1]) return false\n        return true\n      }, replaced[0], replaced[replaced.length - 1])\n  }\n\n  updateForViewport() {\n    let vp = this.view.viewport\n    // Viewports match, don't do anything\n    if (this.from == vp.from && this.to == vp.to) return\n    let decorations: DecoratedRange[] = []\n    if (this.from >= vp.to || this.to <= vp.from) {\n      this.getDecorationsFor(vp.from, vp.to, decorations)\n      this.decorations = Decoration.set(decorations)\n    } else {\n      if (vp.from < this.from) this.getDecorationsFor(vp.from, this.from, decorations)\n      if (this.to < vp.to) this.getDecorationsFor(this.to, vp.to, decorations)\n      this.decorations = this.decorations.update(decorations, (from, to) => from >= vp.from && to <= vp.to)\n    }\n    this.from = vp.from; this.to = vp.to\n  }\n\n  getDecorationsFor(from: number, to: number, target: DecoratedRange[]) {\n    let {doc} = this.view.state\n    for (let pos = from, cursor = doc.iterRange(from, to), m; !cursor.next().done;) {\n      if (!cursor.lineBreak) {\n        while (m = SPECIALS.exec(cursor.value)) {\n          let code = m[0].codePointAt ? m[0].codePointAt(0) : m[0].charCodeAt(0), widget\n          if (code == null) continue\n          if (code == 9) {\n            let line = doc.lineAt(pos + m.index)\n            let size = this.view.state.tabSize, col = countColumn(doc.slice(line.start, pos + m.index), 0, size)\n            widget = new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth)\n          } else {\n            widget = new SpecialCharWidget(this.options, code)\n          }\n          target.push(Decoration.range(pos + m.index, pos + m.index + m[0].length, {collapsed: widget}))\n        }\n      }\n      pos += cursor.value.length\n    }\n  }\n\n  get styles() { return style }\n}\n\n// FIXME configurable\nconst SPECIALS = /[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff]/gu\n\nconst NAMES: {[key: number]: string} = {\n  0: \"null\",\n  7: \"bell\",\n  8: \"backspace\",\n  10: \"newline\",\n  11: \"vertical tab\",\n  13: \"carriage return\",\n  27: \"escape\",\n  8203: \"zero width space\",\n  8204: \"zero width non-joiner\",\n  8205: \"zero width joiner\",\n  8206: \"left-to-right mark\",\n  8207: \"right-to-left mark\",\n  8232: \"line separator\",\n  8233: \"paragraph separator\",\n  65279: \"zero width no-break space\"\n}\n\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeHolder(code: number): string | null {\n  if (code >= 32) return null\n  if (code == 10) return \"\\u2424\"\n  return String.fromCharCode(9216 + code)\n}\n\nconst DEFAULT_PLACEHOLDER = \"\\u2022\"\n\nclass SpecialCharWidget extends WidgetType<number> {\n  constructor(private options: CompleteSpecialCharConfig, code: number) { super(code) }\n\n  toDOM() {\n    let ph = placeHolder(this.value) || DEFAULT_PLACEHOLDER\n    let desc = \"Control character \" + (NAMES[this.value] || this.value)\n    let custom = this.options.render && this.options.render(this.value, desc, ph)\n    if (custom) return custom\n    let span = document.createElement(\"span\")\n    span.textContent = ph\n    span.title = desc\n    span.setAttribute(\"aria-label\", desc)\n    span.style.color = \"red\"\n    return span\n  }\n\n  ignoreEvent(): boolean { return false }\n}\n\nclass TabWidget extends WidgetType<number> {\n  toDOM() {\n    let span = document.createElement(\"span\")\n    span.textContent = \"\\t\"\n    span.className = style.tab\n    span.style.width = this.value + \"px\"\n    return span\n  }\n\n  ignoreEvent(): boolean { return false }\n}\n\nconst style = new StyleModule({\n  tab: {\n    display: \"inline-block\",\n    overflow: \"hidden\",\n    verticalAlign: \"bottom\"\n  }\n})\n","import {EditorState, StateExtension} from \"../../state/src\"\nimport {ViewField, styleModule, DecorationSet, Decoration, WidgetType, RangeDecorationSpec} from \"../../view/src\"\nimport {StyleModule} from \"style-mod\"\n\nexport interface Config {}\n\nexport const multipleSelections = StateExtension.unique((configs: Config[]) => {\n  let rangeConfig = {class: styles.secondarySelection} // FIXME configurable?\n\n  return StateExtension.all(\n    StateExtension.allowMultipleSelections(true),\n    ViewField.decorations({\n      create(view) { return decorateSelections(view.state, rangeConfig) },\n      update(deco, {prevState, state}) {\n        return prevState.doc == state.doc && prevState.selection.eq(state.selection)\n          ? deco : decorateSelections(state, rangeConfig)\n      },\n      map: false\n    }),\n    styleModule(styles)\n  )\n}, {})\n\nclass CursorWidget extends WidgetType<null> {\n  toDOM() {\n    let span = document.createElement(\"span\")\n    span.className = styles.secondaryCursor\n    return span\n  }\n}\n\nfunction decorateSelections(state: EditorState, rangeConfig: RangeDecorationSpec): DecorationSet {\n  let {ranges, primaryIndex} = state.selection\n  if (ranges.length == 1) return Decoration.none\n  let deco = []\n  for (let i = 0; i < ranges.length; i++) if (i != primaryIndex) {\n    let range = ranges[i]\n    deco.push(range.empty ? Decoration.widget(range.from, {widget: new CursorWidget(null)})\n              : Decoration.range(ranges[i].from, ranges[i].to, rangeConfig))\n  }\n  return Decoration.set(deco)\n}\n\nconst styles = new StyleModule({\n  secondarySelection: {\n    backgroundColor_fallback: \"#3297FD\",\n    color_fallback: \"white !important\",\n    backgroundColor: \"Highlight\",\n    color: \"HighlightText !important\"\n  },\n\n  secondaryCursor: {\n    display: \"inline-block\",\n    verticalAlign: \"text-top\",\n    borderLeft: \"1px solid #555\",\n    width: 0,\n    height: \"1.15em\",\n    margin: \"0 -0.5px -.5em\"\n  }\n})\n","import {EditorState, EditorSelection} from \"../state/src\"\nimport {EditorView} from \"../view/src/\"\nimport {keymap} from \"../keymap/src/keymap\"\nimport {history, redo, redoSelection, undo, undoSelection} from \"../history/src/history\"\nimport {gutter} from \"../gutter/src/index\"\nimport {baseKeymap, indentSelection} from \"../commands/src/commands\"\nimport {legacyMode} from \"../legacy-modes/src/index\"\nimport {matchBrackets} from \"../matchbrackets/src/matchbrackets\"\nimport javascript from \"../legacy-modes/src/javascript\"\nimport {specialChars} from \"../special-chars/src/special-chars\"\nimport {multipleSelections} from \"../multiple-selections/src/multiple-selections\"\n\nlet mode = legacyMode({mode: javascript({indentUnit: 2}, {}) as any})\n\nlet isMac = /Mac/.test(navigator.platform)\nlet state = EditorState.create({doc: `\"use strict\";\nconst {readFile} = require(\"fs\");\n\nreadFile(\"package.json\", \"utf8\", (err, data) => {\n  console.log(data);\n});`, extensions: [\n  gutter(),\n  history(),\n  specialChars(),\n  multipleSelections(),\n  mode,\n  matchBrackets(),\n  keymap({\n    \"Mod-z\": undo,\n    \"Mod-Shift-z\": redo,\n    \"Mod-u\": view => undoSelection(view) || true,\n    [isMac ? \"Mod-Shift-u\" : \"Alt-u\"]: redoSelection,\n    \"Ctrl-y\": isMac ? undefined : redo,\n    \"Shift-Tab\": indentSelection\n  }),\n  keymap(baseKeymap),\n]})\n\nlet view = (window as any).view = new EditorView({state})\ndocument.querySelector(\"#editor\").appendChild(view.dom)\n"],"names":["tslib_1.__extends","textLength","empty","global","none","StyleModule","chrome","gecko","mac","base","styles","countColumn","_a"],"mappings":"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"}